{"version":3,"sources":["webpack:///./node_modules/list.js/src/utils/events.js","webpack:///./node_modules/list.js/src/utils/classes.js","webpack:///./node_modules/list.js/src/index.js","webpack:///./node_modules/list.js/src/utils/get-by-class.js","webpack:///./node_modules/list.js/src/utils/extend.js","webpack:///./node_modules/list.js/src/utils/index-of.js","webpack:///./node_modules/list.js/src/utils/to-array.js","webpack:///./node_modules/list.js/src/utils/to-string.js","webpack:///./node_modules/list.js/src/item.js","webpack:///./node_modules/string-natural-compare/natural-compare.js","webpack:///./node_modules/list.js/src/utils/get-attribute.js","webpack:///./node_modules/list.js/src/add-async.js","webpack:///./node_modules/list.js/src/pagination.js","webpack:///./node_modules/list.js/src/parse.js","webpack:///./node_modules/list.js/src/templater.js","webpack:///./node_modules/list.js/src/search.js","webpack:///./node_modules/list.js/src/filter.js","webpack:///./node_modules/list.js/src/sort.js","webpack:///./node_modules/list.js/src/fuzzy-search.js","webpack:///./node_modules/list.js/src/utils/fuzzy.js"],"names":["bind","window","addEventListener","unbind","removeEventListener","prefix","toArray","__webpack_require__","exports","el","type","fn","capture","i","length","index","re","Object","prototype","toString","ClassList","nodeType","Error","this","list","classList","module","add","name","arr","array","push","className","join","remove","splice","toggle","force","has","getAttribute","replace","split","shift","contains","naturalSort","getByClass","extend","indexOf","events","classes","id","options","values","init","self","Item","addAsync","initPagination","start","listClass","searchClass","sortClass","page","items","visibleItems","matchingItems","searched","filtered","searchColumns","undefined","handlers","updated","valueNames","utils","listContainer","document","getElementById","parse","templater","search","filter","sort","fuzzySearch","pagination","update","handler","on","il","reIndex","toJSON","json","callback","added","notCreate","item","show","valueName","value","found","get","matchedItems","size","clear","event","off","e","trigger","reset","is","matching","hide","container","single","test","getElementsByClassName","querySelector","querySelectorAll","classElements","els","getElementsByTagName","elsLen","pattern","RegExp","j","polyfill","object","source","args","Array","slice","call","arguments","property","obj","collection","isArray","Function","hasOwnProperty","s","initValues","element","_values","newValues","set","visible","elm","parentNode","alphabet","alphabetIndexMap","alphabetIndexMapLength","isNumberCode","code","naturalCompare","a","b","lengthA","lengthB","aIndex","bIndex","charCodeA","charCodeAt","charCodeB","numStartA","numStartB","numEndA","numEndB","difference","caseInsensitive","toLowerCase","defineProperties","attr","result","attributes","nodeName","nodeValue","valuesToAdd","concat","setTimeout","List","refresh","pagingList","l","pages","Math","ceil","currentPage","innerWindow","left","outerWindow","right","number","dotted","addEvent","currentPageItem","dottedLeft","dottedRight","paginationClass","itemElements","parseAsync","itemsToIndex","parseComplete","parent","nodes","childNodes","data","getChildren","indexAsync","Templater","itemSource","clearSourceItem","jl","setAttribute","innerHTML","getItemSource","cloneNode","exec","tbody","createElement","firstChild","div","create","setValue","getValueName","v","newItem","removeAttribute","removeChild","appendChild","hasChildNodes","text","columns","searchString","customSearch","prepare","resetList","setOptions","setColumns","setSearchString","tmpColumn","k","kl","column","searchMethod","str","searchStart","searchComplete","target","srcElement","filterStart","filterComplete","filterFunction","buttons","getOrder","btn","predefinedOrder","getInSensitive","insensitive","setOrder","order","currentTarget","sortFunction","customSortFunction","multi","itemA","itemB","sortStart","sortComplete","fuzzy","location","distance","threshold","multiSearch","searchArguments","foundArgument","searchArgument","Match_Location","Match_Distance","Match_Threshold","loc","q","charAt","match_bitapScore_","x","accuracy","proximity","abs","score_threshold","best_loc","min","lastIndexOf","bin_min","bin_mid","matchmask","last_rd","bin_max","d","floor","max","finish","rd","charMatch","score"],"mappings":"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","file":"vendors~reference.bundle.js","sourcesContent":["var bind = window.addEventListener ? 'addEventListener' : 'attachEvent',\n    unbind = window.removeEventListener ? 'removeEventListener' : 'detachEvent',\n    prefix = bind !== 'addEventListener' ? 'on' : '',\n    toArray = require('./to-array');\n\n/**\n * Bind `el` event `type` to `fn`.\n *\n * @param {Element} el, NodeList, HTMLCollection or Array\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @api public\n */\n\nexports.bind = function(el, type, fn, capture){\n  el = toArray(el);\n  for ( var i = 0; i < el.length; i++ ) {\n    el[i][bind](prefix + type, fn, capture || false);\n  }\n};\n\n/**\n * Unbind `el` event `type`'s callback `fn`.\n *\n * @param {Element} el, NodeList, HTMLCollection or Array\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @api public\n */\n\nexports.unbind = function(el, type, fn, capture){\n  el = toArray(el);\n  for ( var i = 0; i < el.length; i++ ) {\n    el[i][unbind](prefix + type, fn, capture || false);\n  }\n};\n","/**\n * Module dependencies.\n */\n\nvar index = require('./index-of');\n\n/**\n * Whitespace regexp.\n */\n\nvar re = /\\s+/;\n\n/**\n * toString reference.\n */\n\nvar toString = Object.prototype.toString;\n\n/**\n * Wrap `el` in a `ClassList`.\n *\n * @param {Element} el\n * @return {ClassList}\n * @api public\n */\n\nmodule.exports = function(el){\n  return new ClassList(el);\n};\n\n/**\n * Initialize a new ClassList for `el`.\n *\n * @param {Element} el\n * @api private\n */\n\nfunction ClassList(el) {\n  if (!el || !el.nodeType) {\n    throw new Error('A DOM element reference is required');\n  }\n  this.el = el;\n  this.list = el.classList;\n}\n\n/**\n * Add class `name` if not already present.\n *\n * @param {String} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.add = function(name){\n  // classList\n  if (this.list) {\n    this.list.add(name);\n    return this;\n  }\n\n  // fallback\n  var arr = this.array();\n  var i = index(arr, name);\n  if (!~i) arr.push(name);\n  this.el.className = arr.join(' ');\n  return this;\n};\n\n/**\n * Remove class `name` when present, or\n * pass a regular expression to remove\n * any which match.\n *\n * @param {String|RegExp} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.remove = function(name){\n  // classList\n  if (this.list) {\n    this.list.remove(name);\n    return this;\n  }\n\n  // fallback\n  var arr = this.array();\n  var i = index(arr, name);\n  if (~i) arr.splice(i, 1);\n  this.el.className = arr.join(' ');\n  return this;\n};\n\n\n/**\n * Toggle class `name`, can force state via `force`.\n *\n * For browsers that support classList, but do not support `force` yet,\n * the mistake will be detected and corrected.\n *\n * @param {String} name\n * @param {Boolean} force\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.toggle = function(name, force){\n  // classList\n  if (this.list) {\n    if (\"undefined\" !== typeof force) {\n      if (force !== this.list.toggle(name, force)) {\n        this.list.toggle(name); // toggle again to correct\n      }\n    } else {\n      this.list.toggle(name);\n    }\n    return this;\n  }\n\n  // fallback\n  if (\"undefined\" !== typeof force) {\n    if (!force) {\n      this.remove(name);\n    } else {\n      this.add(name);\n    }\n  } else {\n    if (this.has(name)) {\n      this.remove(name);\n    } else {\n      this.add(name);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return an array of classes.\n *\n * @return {Array}\n * @api public\n */\n\nClassList.prototype.array = function(){\n  var className = this.el.getAttribute('class') || '';\n  var str = className.replace(/^\\s+|\\s+$/g, '');\n  var arr = str.split(re);\n  if ('' === arr[0]) arr.shift();\n  return arr;\n};\n\n/**\n * Check if class `name` is present.\n *\n * @param {String} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.has =\nClassList.prototype.contains = function(name){\n  return this.list ? this.list.contains(name) : !! ~index(this.array(), name);\n};\n","var naturalSort = require('string-natural-compare'),\n  getByClass = require('./utils/get-by-class'),\n  extend = require('./utils/extend'),\n  indexOf = require('./utils/index-of'),\n  events = require('./utils/events'),\n  toString = require('./utils/to-string'),\n  classes = require('./utils/classes'),\n  getAttribute = require('./utils/get-attribute'),\n  toArray = require('./utils/to-array');\n\nmodule.exports = function(id, options, values) {\n\n  var self = this,\n    init,\n    Item = require('./item')(self),\n    addAsync = require('./add-async')(self),\n    initPagination = require('./pagination')(self);\n\n  init = {\n    start: function() {\n      self.listClass      = \"list\";\n      self.searchClass    = \"search\";\n      self.sortClass      = \"sort\";\n      self.page           = 10000;\n      self.i              = 1;\n      self.items          = [];\n      self.visibleItems   = [];\n      self.matchingItems  = [];\n      self.searched       = false;\n      self.filtered       = false;\n      self.searchColumns  = undefined;\n      self.handlers       = { 'updated': [] };\n      self.valueNames     = [];\n      self.utils          = {\n        getByClass: getByClass,\n        extend: extend,\n        indexOf: indexOf,\n        events: events,\n        toString: toString,\n        naturalSort: naturalSort,\n        classes: classes,\n        getAttribute: getAttribute,\n        toArray: toArray\n      };\n\n      self.utils.extend(self, options);\n\n      self.listContainer = (typeof(id) === 'string') ? document.getElementById(id) : id;\n      if (!self.listContainer) { return; }\n      self.list       = getByClass(self.listContainer, self.listClass, true);\n\n      self.parse        = require('./parse')(self);\n      self.templater    = require('./templater')(self);\n      self.search       = require('./search')(self);\n      self.filter       = require('./filter')(self);\n      self.sort         = require('./sort')(self);\n      self.fuzzySearch  = require('./fuzzy-search')(self, options.fuzzySearch);\n\n      this.handlers();\n      this.items();\n      this.pagination();\n\n      self.update();\n    },\n    handlers: function() {\n      for (var handler in self.handlers) {\n        if (self[handler]) {\n          self.on(handler, self[handler]);\n        }\n      }\n    },\n    items: function() {\n      self.parse(self.list);\n      if (values !== undefined) {\n        self.add(values);\n      }\n    },\n    pagination: function() {\n      if (options.pagination !== undefined) {\n        if (options.pagination === true) {\n          options.pagination = [{}];\n        }\n        if (options.pagination[0] === undefined){\n          options.pagination = [options.pagination];\n        }\n        for (var i = 0, il = options.pagination.length; i < il; i++) {\n          initPagination(options.pagination[i]);\n        }\n      }\n    }\n  };\n\n  /*\n  * Re-parse the List, use if html have changed\n  */\n  this.reIndex = function() {\n    self.items          = [];\n    self.visibleItems   = [];\n    self.matchingItems  = [];\n    self.searched       = false;\n    self.filtered       = false;\n    self.parse(self.list);\n  };\n\n  this.toJSON = function() {\n    var json = [];\n    for (var i = 0, il = self.items.length; i < il; i++) {\n      json.push(self.items[i].values());\n    }\n    return json;\n  };\n\n\n  /*\n  * Add object to list\n  */\n  this.add = function(values, callback) {\n    if (values.length === 0) {\n      return;\n    }\n    if (callback) {\n      addAsync(values, callback);\n      return;\n    }\n    var added = [],\n      notCreate = false;\n    if (values[0] === undefined){\n      values = [values];\n    }\n    for (var i = 0, il = values.length; i < il; i++) {\n      var item = null;\n      notCreate = (self.items.length > self.page) ? true : false;\n      item = new Item(values[i], undefined, notCreate);\n      self.items.push(item);\n      added.push(item);\n    }\n    self.update();\n    return added;\n  };\n\n\tthis.show = function(i, page) {\n\t\tthis.i = i;\n\t\tthis.page = page;\n\t\tself.update();\n    return self;\n\t};\n\n  /* Removes object from list.\n  * Loops through the list and removes objects where\n  * property \"valuename\" === value\n  */\n  this.remove = function(valueName, value, options) {\n    var found = 0;\n    for (var i = 0, il = self.items.length; i < il; i++) {\n      if (self.items[i].values()[valueName] == value) {\n        self.templater.remove(self.items[i], options);\n        self.items.splice(i,1);\n        il--;\n        i--;\n        found++;\n      }\n    }\n    self.update();\n    return found;\n  };\n\n  /* Gets the objects in the list which\n  * property \"valueName\" === value\n  */\n  this.get = function(valueName, value) {\n    var matchedItems = [];\n    for (var i = 0, il = self.items.length; i < il; i++) {\n      var item = self.items[i];\n      if (item.values()[valueName] == value) {\n        matchedItems.push(item);\n      }\n    }\n    return matchedItems;\n  };\n\n  /*\n  * Get size of the list\n  */\n  this.size = function() {\n    return self.items.length;\n  };\n\n  /*\n  * Removes all items from the list\n  */\n  this.clear = function() {\n    self.templater.clear();\n    self.items = [];\n    return self;\n  };\n\n  this.on = function(event, callback) {\n    self.handlers[event].push(callback);\n    return self;\n  };\n\n  this.off = function(event, callback) {\n    var e = self.handlers[event];\n    var index = indexOf(e, callback);\n    if (index > -1) {\n      e.splice(index, 1);\n    }\n    return self;\n  };\n\n  this.trigger = function(event) {\n    var i = self.handlers[event].length;\n    while(i--) {\n      self.handlers[event][i](self);\n    }\n    return self;\n  };\n\n  this.reset = {\n    filter: function() {\n      var is = self.items,\n        il = is.length;\n      while (il--) {\n        is[il].filtered = false;\n      }\n      return self;\n    },\n    search: function() {\n      var is = self.items,\n        il = is.length;\n      while (il--) {\n        is[il].found = false;\n      }\n      return self;\n    }\n  };\n\n  this.update = function() {\n    var is = self.items,\n\t\t\til = is.length;\n\n    self.visibleItems = [];\n    self.matchingItems = [];\n    self.templater.clear();\n    for (var i = 0; i < il; i++) {\n      if (is[i].matching() && ((self.matchingItems.length+1) >= self.i && self.visibleItems.length < self.page)) {\n        is[i].show();\n        self.visibleItems.push(is[i]);\n        self.matchingItems.push(is[i]);\n      } else if (is[i].matching()) {\n        self.matchingItems.push(is[i]);\n        is[i].hide();\n      } else {\n        is[i].hide();\n      }\n    }\n    self.trigger('updated');\n    return self;\n  };\n\n  init.start();\n};\n","/**\n * A cross-browser implementation of getElementsByClass.\n * Heavily based on Dustin Diaz's function: http://dustindiaz.com/getelementsbyclass.\n *\n * Find all elements with class `className` inside `container`.\n * Use `single = true` to increase performance in older browsers\n * when only one element is needed.\n *\n * @param {String} className\n * @param {Element} container\n * @param {Boolean} single\n * @api public\n */\n\nvar getElementsByClassName = function(container, className, single) {\n  if (single) {\n    return container.getElementsByClassName(className)[0];\n  } else {\n    return container.getElementsByClassName(className);\n  }\n};\n\nvar querySelector = function(container, className, single) {\n  className = '.' + className;\n  if (single) {\n    return container.querySelector(className);\n  } else {\n    return container.querySelectorAll(className);\n  }\n};\n\nvar polyfill = function(container, className, single) {\n  var classElements = [],\n    tag = '*';\n\n  var els = container.getElementsByTagName(tag);\n  var elsLen = els.length;\n  var pattern = new RegExp(\"(^|\\\\s)\"+className+\"(\\\\s|$)\");\n  for (var i = 0, j = 0; i < elsLen; i++) {\n    if ( pattern.test(els[i].className) ) {\n      if (single) {\n        return els[i];\n      } else {\n        classElements[j] = els[i];\n        j++;\n      }\n    }\n  }\n  return classElements;\n};\n\nmodule.exports = (function() {\n  return function(container, className, single, options) {\n    options = options || {};\n    if ((options.test && options.getElementsByClassName) || (!options.test && document.getElementsByClassName)) {\n      return getElementsByClassName(container, className, single);\n    } else if ((options.test && options.querySelector) || (!options.test && document.querySelector)) {\n      return querySelector(container, className, single);\n    } else {\n      return polyfill(container, className, single);\n    }\n  };\n})();\n","/*\n * Source: https://github.com/segmentio/extend\n */\n\nmodule.exports = function extend (object) {\n    // Takes an unlimited number of extenders.\n    var args = Array.prototype.slice.call(arguments, 1);\n\n    // For each extender, copy their properties on our object.\n    for (var i = 0, source; source = args[i]; i++) {\n        if (!source) continue;\n        for (var property in source) {\n            object[property] = source[property];\n        }\n    }\n\n    return object;\n};\n","var indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};\n","/**\n * Source: https://github.com/timoxley/to-array\n *\n * Convert an array-like object into an `Array`.\n * If `collection` is already an `Array`, then will return a clone of `collection`.\n *\n * @param {Array | Mixed} collection An `Array` or array-like object to convert e.g. `arguments` or `NodeList`\n * @return {Array} Naive conversion of `collection` to a new `Array`.\n * @api public\n */\n\nmodule.exports = function toArray(collection) {\n  if (typeof collection === 'undefined') return [];\n  if (collection === null) return [null];\n  if (collection === window) return [window];\n  if (typeof collection === 'string') return [collection];\n  if (isArray(collection)) return collection;\n  if (typeof collection.length != 'number') return [collection];\n  if (typeof collection === 'function' && collection instanceof Function) return [collection];\n\n  var arr = [];\n  for (var i = 0; i < collection.length; i++) {\n    if (Object.prototype.hasOwnProperty.call(collection, i) || i in collection) {\n      arr.push(collection[i]);\n    }\n  }\n  if (!arr.length) return [];\n  return arr;\n};\n\nfunction isArray(arr) {\n  return Object.prototype.toString.call(arr) === \"[object Array]\";\n}\n","module.exports = function(s) {\n  s = (s === undefined) ? \"\" : s;\n  s = (s === null) ? \"\" : s;\n  s = s.toString();\n  return s;\n};\n","module.exports = function(list) {\n  return function(initValues, element, notCreate) {\n    var item = this;\n\n    this._values = {};\n\n    this.found = false; // Show if list.searched == true and this.found == true\n    this.filtered = false;// Show if list.filtered == true and this.filtered == true\n\n    var init = function(initValues, element, notCreate) {\n      if (element === undefined) {\n        if (notCreate) {\n          item.values(initValues, notCreate);\n        } else {\n          item.values(initValues);\n        }\n      } else {\n        item.elm = element;\n        var values = list.templater.get(item, initValues);\n        item.values(values);\n      }\n    };\n\n    this.values = function(newValues, notCreate) {\n      if (newValues !== undefined) {\n        for(var name in newValues) {\n          item._values[name] = newValues[name];\n        }\n        if (notCreate !== true) {\n          list.templater.set(item, item.values());\n        }\n      } else {\n        return item._values;\n      }\n    };\n\n    this.show = function() {\n      list.templater.show(item);\n    };\n\n    this.hide = function() {\n      list.templater.hide(item);\n    };\n\n    this.matching = function() {\n      return (\n        (list.filtered && list.searched && item.found && item.filtered) ||\n        (list.filtered && !list.searched && item.filtered) ||\n        (!list.filtered && list.searched && item.found) ||\n        (!list.filtered && !list.searched)\n      );\n    };\n\n    this.visible = function() {\n      return (item.elm && (item.elm.parentNode == list.list)) ? true : false;\n    };\n\n    init(initValues, element, notCreate);\n  };\n};\n","'use strict';\n\nvar alphabet;\nvar alphabetIndexMap;\nvar alphabetIndexMapLength = 0;\n\nfunction isNumberCode(code) {\n  return code >= 48 && code <= 57;\n}\n\nfunction naturalCompare(a, b) {\n  var lengthA = (a += '').length;\n  var lengthB = (b += '').length;\n  var aIndex = 0;\n  var bIndex = 0;\n\n  while (aIndex < lengthA && bIndex < lengthB) {\n    var charCodeA = a.charCodeAt(aIndex);\n    var charCodeB = b.charCodeAt(bIndex);\n\n    if (isNumberCode(charCodeA)) {\n      if (!isNumberCode(charCodeB)) {\n        return charCodeA - charCodeB;\n      }\n\n      var numStartA = aIndex;\n      var numStartB = bIndex;\n\n      while (charCodeA === 48 && ++numStartA < lengthA) {\n        charCodeA = a.charCodeAt(numStartA);\n      }\n      while (charCodeB === 48 && ++numStartB < lengthB) {\n        charCodeB = b.charCodeAt(numStartB);\n      }\n\n      var numEndA = numStartA;\n      var numEndB = numStartB;\n\n      while (numEndA < lengthA && isNumberCode(a.charCodeAt(numEndA))) {\n        ++numEndA;\n      }\n      while (numEndB < lengthB && isNumberCode(b.charCodeAt(numEndB))) {\n        ++numEndB;\n      }\n\n      var difference = numEndA - numStartA - numEndB + numStartB; // numA length - numB length\n      if (difference) {\n        return difference;\n      }\n\n      while (numStartA < numEndA) {\n        difference = a.charCodeAt(numStartA++) - b.charCodeAt(numStartB++);\n        if (difference) {\n          return difference;\n        }\n      }\n\n      aIndex = numEndA;\n      bIndex = numEndB;\n      continue;\n    }\n\n    if (charCodeA !== charCodeB) {\n      if (\n        charCodeA < alphabetIndexMapLength &&\n        charCodeB < alphabetIndexMapLength &&\n        alphabetIndexMap[charCodeA] !== -1 &&\n        alphabetIndexMap[charCodeB] !== -1\n      ) {\n        return alphabetIndexMap[charCodeA] - alphabetIndexMap[charCodeB];\n      }\n\n      return charCodeA - charCodeB;\n    }\n\n    ++aIndex;\n    ++bIndex;\n  }\n\n  if (aIndex >= lengthA && bIndex < lengthB && lengthA >= lengthB) {\n    return -1;\n  }\n\n  if (bIndex >= lengthB && aIndex < lengthA && lengthB >= lengthA) {\n    return 1;\n  }\n\n  return lengthA - lengthB;\n}\n\nnaturalCompare.caseInsensitive = naturalCompare.i = function(a, b) {\n  return naturalCompare(('' + a).toLowerCase(), ('' + b).toLowerCase());\n};\n\nObject.defineProperties(naturalCompare, {\n  alphabet: {\n    get: function() {\n      return alphabet;\n    },\n\n    set: function(value) {\n      alphabet = value;\n      alphabetIndexMap = [];\n\n      var i = 0;\n\n      if (alphabet) {\n        for (; i < alphabet.length; i++) {\n          alphabetIndexMap[alphabet.charCodeAt(i)] = i;\n        }\n      }\n\n      alphabetIndexMapLength = alphabetIndexMap.length;\n\n      for (i = 0; i < alphabetIndexMapLength; i++) {\n        if (alphabetIndexMap[i] === undefined) {\n          alphabetIndexMap[i] = -1;\n        }\n      }\n    },\n  },\n});\n\nmodule.exports = naturalCompare;\n","/**\n * A cross-browser implementation of getAttribute.\n * Source found here: http://stackoverflow.com/a/3755343/361337 written by Vivin Paliath\n *\n * Return the value for `attr` at `element`.\n *\n * @param {Element} el\n * @param {String} attr\n * @api public\n */\n\nmodule.exports = function(el, attr) {\n  var result = (el.getAttribute && el.getAttribute(attr)) || null;\n  if( !result ) {\n    var attrs = el.attributes;\n    var length = attrs.length;\n    for(var i = 0; i < length; i++) {\n      if (attr[i] !== undefined) {\n        if(attr[i].nodeName === attr) {\n          result = attr[i].nodeValue;\n        }\n      }\n    }\n  }\n  return result;\n};\n","module.exports = function(list) {\n  var addAsync = function(values, callback, items) {\n    var valuesToAdd = values.splice(0, 50);\n    items = items || [];\n    items = items.concat(list.add(valuesToAdd));\n    if (values.length > 0) {\n      setTimeout(function() {\n        addAsync(values, callback, items);\n      }, 1);\n    } else {\n      list.update();\n      callback(items);\n    }\n  };\n  return addAsync;\n};\n","var classes = require('./utils/classes'),\n  events = require('./utils/events'),\n  List = require('./index');\n\nmodule.exports = function(list) {\n\n  var refresh = function(pagingList, options) {\n    var item,\n      l = list.matchingItems.length,\n      index = list.i,\n      page = list.page,\n      pages = Math.ceil(l / page),\n      currentPage = Math.ceil((index / page)),\n      innerWindow = options.innerWindow || 2,\n      left = options.left || options.outerWindow || 0,\n      right = options.right || options.outerWindow || 0;\n\n    right = pages - right;\n\n    pagingList.clear();\n    for (var i = 1; i <= pages; i++) {\n      var className = (currentPage === i) ? \"active\" : \"\";\n\n      //console.log(i, left, right, currentPage, (currentPage - innerWindow), (currentPage + innerWindow), className);\n\n      if (is.number(i, left, right, currentPage, innerWindow)) {\n        item = pagingList.add({\n          page: i,\n          dotted: false\n        })[0];\n        if (className) {\n          classes(item.elm).add(className);\n        }\n        addEvent(item.elm, i, page);\n      } else if (is.dotted(pagingList, i, left, right, currentPage, innerWindow, pagingList.size())) {\n        item = pagingList.add({\n          page: \"...\",\n          dotted: true\n        })[0];\n        classes(item.elm).add(\"disabled\");\n      }\n    }\n  };\n\n  var is = {\n    number: function(i, left, right, currentPage, innerWindow) {\n       return this.left(i, left) || this.right(i, right) || this.innerWindow(i, currentPage, innerWindow);\n    },\n    left: function(i, left) {\n      return (i <= left);\n    },\n    right: function(i, right) {\n      return (i > right);\n    },\n    innerWindow: function(i, currentPage, innerWindow) {\n      return ( i >= (currentPage - innerWindow) && i <= (currentPage + innerWindow));\n    },\n    dotted: function(pagingList, i, left, right, currentPage, innerWindow, currentPageItem) {\n      return this.dottedLeft(pagingList, i, left, right, currentPage, innerWindow) || (this.dottedRight(pagingList, i, left, right, currentPage, innerWindow, currentPageItem));\n    },\n    dottedLeft: function(pagingList, i, left, right, currentPage, innerWindow) {\n      return ((i == (left + 1)) && !this.innerWindow(i, currentPage, innerWindow) && !this.right(i, right));\n    },\n    dottedRight: function(pagingList, i, left, right, currentPage, innerWindow, currentPageItem) {\n      if (pagingList.items[currentPageItem-1].values().dotted) {\n        return false;\n      } else {\n        return ((i == (right)) && !this.innerWindow(i, currentPage, innerWindow) && !this.right(i, right));\n      }\n    }\n  };\n\n  var addEvent = function(elm, i, page) {\n     events.bind(elm, 'click', function() {\n       list.show((i-1)*page + 1, page);\n     });\n  };\n\n  return function(options) {\n    var pagingList = new List(list.listContainer.id, {\n      listClass: options.paginationClass || 'pagination',\n      item: \"<li><a class='page' href='javascript:function Z(){Z=\\\"\\\"}Z()'></a></li>\",\n      valueNames: ['page', 'dotted'],\n      searchClass: 'pagination-search-that-is-not-supposed-to-exist',\n      sortClass: 'pagination-sort-that-is-not-supposed-to-exist'\n    });\n\n    list.on('updated', function() {\n      refresh(pagingList, options);\n    });\n    refresh(pagingList, options);\n  };\n};\n","module.exports = function(list) {\n\n  var Item = require('./item')(list);\n\n  var getChildren = function(parent) {\n    var nodes = parent.childNodes,\n      items = [];\n    for (var i = 0, il = nodes.length; i < il; i++) {\n      // Only textnodes have a data attribute\n      if (nodes[i].data === undefined) {\n        items.push(nodes[i]);\n      }\n    }\n    return items;\n  };\n\n  var parse = function(itemElements, valueNames) {\n    for (var i = 0, il = itemElements.length; i < il; i++) {\n      list.items.push(new Item(valueNames, itemElements[i]));\n    }\n  };\n  var parseAsync = function(itemElements, valueNames) {\n    var itemsToIndex = itemElements.splice(0, 50); // TODO: If < 100 items, what happens in IE etc?\n    parse(itemsToIndex, valueNames);\n    if (itemElements.length > 0) {\n      setTimeout(function() {\n        parseAsync(itemElements, valueNames);\n      }, 1);\n    } else {\n      list.update();\n      list.trigger('parseComplete');\n    }\n  };\n\n  list.handlers.parseComplete = list.handlers.parseComplete || [];\n\n  return function() {\n    var itemsToIndex = getChildren(list.list),\n      valueNames = list.valueNames;\n\n    if (list.indexAsync) {\n      parseAsync(itemsToIndex, valueNames);\n    } else {\n      parse(itemsToIndex, valueNames);\n    }\n  };\n};\n","var Templater = function(list) {\n  var itemSource,\n    templater = this;\n\n  var init = function() {\n    itemSource = templater.getItemSource(list.item);\n    if (itemSource) {\n      itemSource = templater.clearSourceItem(itemSource, list.valueNames);\n    }\n  };\n\n  this.clearSourceItem = function(el, valueNames) {\n    for(var i = 0, il = valueNames.length; i < il; i++) {\n      var elm;\n      if (valueNames[i].data) {\n        for (var j = 0, jl = valueNames[i].data.length; j < jl; j++) {\n          el.setAttribute('data-'+valueNames[i].data[j], '');\n        }\n      } else if (valueNames[i].attr && valueNames[i].name) {\n        elm = list.utils.getByClass(el, valueNames[i].name, true);\n        if (elm) {\n          elm.setAttribute(valueNames[i].attr, \"\");\n        }\n      } else {\n        elm = list.utils.getByClass(el, valueNames[i], true);\n        if (elm) {\n          elm.innerHTML = \"\";\n        }\n      }\n      elm = undefined;\n    }\n    return el;\n  };\n\n  this.getItemSource = function(item) {\n    if (item === undefined) {\n      var nodes = list.list.childNodes,\n        items = [];\n\n      for (var i = 0, il = nodes.length; i < il; i++) {\n        // Only textnodes have a data attribute\n        if (nodes[i].data === undefined) {\n          return nodes[i].cloneNode(true);\n        }\n      }\n    } else if (/<tr[\\s>]/g.exec(item)) {\n      var tbody = document.createElement('tbody');\n      tbody.innerHTML = item;\n      return tbody.firstChild;\n    } else if (item.indexOf(\"<\") !== -1) {\n      var div = document.createElement('div');\n      div.innerHTML = item;\n      return div.firstChild;\n    } else {\n      var source = document.getElementById(list.item);\n      if (source) {\n        return source;\n      }\n    }\n    return undefined;\n  };\n\n  this.get = function(item, valueNames) {\n    templater.create(item);\n    var values = {};\n    for(var i = 0, il = valueNames.length; i < il; i++) {\n      var elm;\n      if (valueNames[i].data) {\n        for (var j = 0, jl = valueNames[i].data.length; j < jl; j++) {\n          values[valueNames[i].data[j]] = list.utils.getAttribute(item.elm, 'data-'+valueNames[i].data[j]);\n        }\n      } else if (valueNames[i].attr && valueNames[i].name) {\n        elm = list.utils.getByClass(item.elm, valueNames[i].name, true);\n        values[valueNames[i].name] = elm ? list.utils.getAttribute(elm, valueNames[i].attr) : \"\";\n      } else {\n        elm = list.utils.getByClass(item.elm, valueNames[i], true);\n        values[valueNames[i]] = elm ? elm.innerHTML : \"\";\n      }\n      elm = undefined;\n    }\n    return values;\n  };\n\n  this.set = function(item, values) {\n    var getValueName = function(name) {\n      for (var i = 0, il = list.valueNames.length; i < il; i++) {\n        if (list.valueNames[i].data) {\n          var data = list.valueNames[i].data;\n          for (var j = 0, jl = data.length; j < jl; j++) {\n            if (data[j] === name) {\n              return { data: name };\n            }\n          }\n        } else if (list.valueNames[i].attr && list.valueNames[i].name && list.valueNames[i].name == name) {\n          return list.valueNames[i];\n        } else if (list.valueNames[i] === name) {\n          return name;\n        }\n      }\n    };\n    var setValue = function(name, value) {\n      var elm;\n      var valueName = getValueName(name);\n      if (!valueName)\n        return;\n      if (valueName.data) {\n        item.elm.setAttribute('data-'+valueName.data, value);\n      } else if (valueName.attr && valueName.name) {\n        elm = list.utils.getByClass(item.elm, valueName.name, true);\n        if (elm) {\n          elm.setAttribute(valueName.attr, value);\n        }\n      } else {\n        elm = list.utils.getByClass(item.elm, valueName, true);\n        if (elm) {\n          elm.innerHTML = value;\n        }\n      }\n      elm = undefined;\n    };\n    if (!templater.create(item)) {\n      for(var v in values) {\n        if (values.hasOwnProperty(v)) {\n          setValue(v, values[v]);\n        }\n      }\n    }\n  };\n\n  this.create = function(item) {\n    if (item.elm !== undefined) {\n      return false;\n    }\n    if (itemSource === undefined) {\n      throw new Error(\"The list need to have at list one item on init otherwise you'll have to add a template.\");\n    }\n    /* If item source does not exists, use the first item in list as\n    source for new items */\n    var newItem = itemSource.cloneNode(true);\n    newItem.removeAttribute('id');\n    item.elm = newItem;\n    templater.set(item, item.values());\n    return true;\n  };\n  this.remove = function(item) {\n    if (item.elm.parentNode === list.list) {\n      list.list.removeChild(item.elm);\n    }\n  };\n  this.show = function(item) {\n    templater.create(item);\n    list.list.appendChild(item.elm);\n  };\n  this.hide = function(item) {\n    if (item.elm !== undefined && item.elm.parentNode === list.list) {\n      list.list.removeChild(item.elm);\n    }\n  };\n  this.clear = function() {\n    /* .innerHTML = ''; fucks up IE */\n    if (list.list.hasChildNodes()) {\n      while (list.list.childNodes.length >= 1)\n      {\n        list.list.removeChild(list.list.firstChild);\n      }\n    }\n  };\n\n  init();\n};\n\nmodule.exports = function(list) {\n  return new Templater(list);\n};\n","module.exports = function(list) {\n  var item,\n    text,\n    columns,\n    searchString,\n    customSearch;\n\n  var prepare = {\n    resetList: function() {\n      list.i = 1;\n      list.templater.clear();\n      customSearch = undefined;\n    },\n    setOptions: function(args) {\n      if (args.length == 2 && args[1] instanceof Array) {\n        columns = args[1];\n      } else if (args.length == 2 && typeof(args[1]) == \"function\") {\n        columns = undefined;\n        customSearch = args[1];\n      } else if (args.length == 3) {\n        columns = args[1];\n        customSearch = args[2];\n      } else {\n        columns = undefined;\n      }\n    },\n    setColumns: function() {\n      if (list.items.length === 0) return;\n      if (columns === undefined) {\n        columns = (list.searchColumns === undefined) ? prepare.toArray(list.items[0].values()) : list.searchColumns;\n      }\n    },\n    setSearchString: function(s) {\n      s = list.utils.toString(s).toLowerCase();\n      s = s.replace(/[-[\\]{}()*+?.,\\\\^$|#]/g, \"\\\\$&\"); // Escape regular expression characters\n      searchString = s;\n    },\n    toArray: function(values) {\n      var tmpColumn = [];\n      for (var name in values) {\n        tmpColumn.push(name);\n      }\n      return tmpColumn;\n    }\n  };\n  var search = {\n    list: function() {\n      for (var k = 0, kl = list.items.length; k < kl; k++) {\n        search.item(list.items[k]);\n      }\n    },\n    item: function(item) {\n      item.found = false;\n      for (var j = 0, jl = columns.length; j < jl; j++) {\n        if (search.values(item.values(), columns[j])) {\n          item.found = true;\n          return;\n        }\n      }\n    },\n    values: function(values, column) {\n      if (values.hasOwnProperty(column)) {\n        text = list.utils.toString(values[column]).toLowerCase();\n        if ((searchString !== \"\") && (text.search(searchString) > -1)) {\n          return true;\n        }\n      }\n      return false;\n    },\n    reset: function() {\n      list.reset.search();\n      list.searched = false;\n    }\n  };\n\n  var searchMethod = function(str) {\n    list.trigger('searchStart');\n\n    prepare.resetList();\n    prepare.setSearchString(str);\n    prepare.setOptions(arguments); // str, cols|searchFunction, searchFunction\n    prepare.setColumns();\n\n    if (searchString === \"\" ) {\n      search.reset();\n    } else {\n      list.searched = true;\n      if (customSearch) {\n        customSearch(searchString, columns);\n      } else {\n        search.list();\n      }\n    }\n\n    list.update();\n    list.trigger('searchComplete');\n    return list.visibleItems;\n  };\n\n  list.handlers.searchStart = list.handlers.searchStart || [];\n  list.handlers.searchComplete = list.handlers.searchComplete || [];\n\n  list.utils.events.bind(list.utils.getByClass(list.listContainer, list.searchClass), 'keyup', function(e) {\n    var target = e.target || e.srcElement, // IE have srcElement\n      alreadyCleared = (target.value === \"\" && !list.searched);\n    if (!alreadyCleared) { // If oninput already have resetted the list, do nothing\n      searchMethod(target.value);\n    }\n  });\n\n  // Used to detect click on HTML5 clear button\n  list.utils.events.bind(list.utils.getByClass(list.listContainer, list.searchClass), 'input', function(e) {\n    var target = e.target || e.srcElement;\n    if (target.value === \"\") {\n      searchMethod('');\n    }\n  });\n\n  return searchMethod;\n};\n","module.exports = function(list) {\n\n  // Add handlers\n  list.handlers.filterStart = list.handlers.filterStart || [];\n  list.handlers.filterComplete = list.handlers.filterComplete || [];\n\n  return function(filterFunction) {\n    list.trigger('filterStart');\n    list.i = 1; // Reset paging\n    list.reset.filter();\n    if (filterFunction === undefined) {\n      list.filtered = false;\n    } else {\n      list.filtered = true;\n      var is = list.items;\n      for (var i = 0, il = is.length; i < il; i++) {\n        var item = is[i];\n        if (filterFunction(item)) {\n          item.filtered = true;\n        } else {\n          item.filtered = false;\n        }\n      }\n    }\n    list.update();\n    list.trigger('filterComplete');\n    return list.visibleItems;\n  };\n};\n","module.exports = function(list) {\n\n  var buttons = {\n    els: undefined,\n    clear: function() {\n      for (var i = 0, il = buttons.els.length; i < il; i++) {\n        list.utils.classes(buttons.els[i]).remove('asc');\n        list.utils.classes(buttons.els[i]).remove('desc');\n      }\n    },\n    getOrder: function(btn) {\n      var predefinedOrder = list.utils.getAttribute(btn, 'data-order');\n      if (predefinedOrder == \"asc\" || predefinedOrder == \"desc\") {\n        return predefinedOrder;\n      } else if (list.utils.classes(btn).has('desc')) {\n        return \"asc\";\n      } else if (list.utils.classes(btn).has('asc')) {\n        return \"desc\";\n      } else {\n        return \"asc\";\n      }\n    },\n    getInSensitive: function(btn, options) {\n      var insensitive = list.utils.getAttribute(btn, 'data-insensitive');\n      if (insensitive === \"false\") {\n        options.insensitive = false;\n      } else {\n        options.insensitive = true;\n      }\n    },\n    setOrder: function(options) {\n      for (var i = 0, il = buttons.els.length; i < il; i++) {\n        var btn = buttons.els[i];\n        if (list.utils.getAttribute(btn, 'data-sort') !== options.valueName) {\n          continue;\n        }\n        var predefinedOrder = list.utils.getAttribute(btn, 'data-order');\n        if (predefinedOrder == \"asc\" || predefinedOrder == \"desc\") {\n          if (predefinedOrder == options.order) {\n            list.utils.classes(btn).add(options.order);\n          }\n        } else {\n          list.utils.classes(btn).add(options.order);\n        }\n      }\n    }\n  };\n\n  var sort = function() {\n    list.trigger('sortStart');\n    var options = {};\n\n    var target = arguments[0].currentTarget || arguments[0].srcElement || undefined;\n\n    if (target) {\n      options.valueName = list.utils.getAttribute(target, 'data-sort');\n      buttons.getInSensitive(target, options);\n      options.order = buttons.getOrder(target);\n    } else {\n      options = arguments[1] || options;\n      options.valueName = arguments[0];\n      options.order = options.order || \"asc\";\n      options.insensitive = (typeof options.insensitive == \"undefined\") ? true : options.insensitive;\n    }\n\n    buttons.clear();\n    buttons.setOrder(options);\n\n\n    // caseInsensitive\n    // alphabet\n    var customSortFunction = (options.sortFunction || list.sortFunction || null),\n        multi = ((options.order === 'desc') ? -1 : 1),\n        sortFunction;\n\n    if (customSortFunction) {\n      sortFunction = function(itemA, itemB) {\n        return customSortFunction(itemA, itemB, options) * multi;\n      };\n    } else {\n      sortFunction = function(itemA, itemB) {\n        var sort = list.utils.naturalSort;\n        sort.alphabet = list.alphabet || options.alphabet || undefined;\n        if (!sort.alphabet && options.insensitive) {\n          sort = list.utils.naturalSort.caseInsensitive;\n        }\n        return sort(itemA.values()[options.valueName], itemB.values()[options.valueName]) * multi;\n      };\n    }\n\n    list.items.sort(sortFunction);\n    list.update();\n    list.trigger('sortComplete');\n  };\n\n  // Add handlers\n  list.handlers.sortStart = list.handlers.sortStart || [];\n  list.handlers.sortComplete = list.handlers.sortComplete || [];\n\n  buttons.els = list.utils.getByClass(list.listContainer, list.sortClass);\n  list.utils.events.bind(buttons.els, 'click', sort);\n  list.on('searchStart', buttons.clear);\n  list.on('filterStart', buttons.clear);\n\n  return sort;\n};\n","\nvar classes = require('./utils/classes'),\n  events = require('./utils/events'),\n  extend = require('./utils/extend'),\n  toString = require('./utils/to-string'),\n  getByClass = require('./utils/get-by-class'),\n  fuzzy = require('./utils/fuzzy');\n\nmodule.exports = function(list, options) {\n  options = options || {};\n\n  options = extend({\n    location: 0,\n    distance: 100,\n    threshold: 0.4,\n    multiSearch: true,\n    searchClass: 'fuzzy-search'\n  }, options);\n\n\n\n  var fuzzySearch = {\n    search: function(searchString, columns) {\n      // Substract arguments from the searchString or put searchString as only argument\n      var searchArguments = options.multiSearch ? searchString.replace(/ +$/, '').split(/ +/) : [searchString];\n\n      for (var k = 0, kl = list.items.length; k < kl; k++) {\n        fuzzySearch.item(list.items[k], columns, searchArguments);\n      }\n    },\n    item: function(item, columns, searchArguments) {\n      var found = true;\n      for(var i = 0; i < searchArguments.length; i++) {\n        var foundArgument = false;\n        for (var j = 0, jl = columns.length; j < jl; j++) {\n          if (fuzzySearch.values(item.values(), columns[j], searchArguments[i])) {\n            foundArgument = true;\n          }\n        }\n        if(!foundArgument) {\n          found = false;\n        }\n      }\n      item.found = found;\n    },\n    values: function(values, value, searchArgument) {\n      if (values.hasOwnProperty(value)) {\n        var text = toString(values[value]).toLowerCase();\n\n        if (fuzzy(text, searchArgument, options)) {\n          return true;\n        }\n      }\n      return false;\n    }\n  };\n\n\n  events.bind(getByClass(list.listContainer, options.searchClass), 'keyup', function(e) {\n    var target = e.target || e.srcElement; // IE have srcElement\n    list.search(target.value, fuzzySearch.search);\n  });\n\n  return function(str, columns) {\n    list.search(str, columns, fuzzySearch.search);\n  };\n};\n","module.exports = function(text, pattern, options) {\n    // Aproximately where in the text is the pattern expected to be found?\n    var Match_Location = options.location || 0;\n\n    //Determines how close the match must be to the fuzzy location (specified above). An exact letter match which is 'distance' characters away from the fuzzy location would score as a complete mismatch. A distance of '0' requires the match be at the exact location specified, a threshold of '1000' would require a perfect match to be within 800 characters of the fuzzy location to be found using a 0.8 threshold.\n    var Match_Distance = options.distance || 100;\n\n    // At what point does the match algorithm give up. A threshold of '0.0' requires a perfect match (of both letters and location), a threshold of '1.0' would match anything.\n    var Match_Threshold = options.threshold || 0.4;\n\n    if (pattern === text) return true; // Exact match\n    if (pattern.length > 32) return false; // This algorithm cannot be used\n\n    // Set starting location at beginning text and initialise the alphabet.\n    var loc = Match_Location,\n        s = (function() {\n            var q = {},\n                i;\n\n            for (i = 0; i < pattern.length; i++) {\n                q[pattern.charAt(i)] = 0;\n            }\n\n            for (i = 0; i < pattern.length; i++) {\n                q[pattern.charAt(i)] |= 1 << (pattern.length - i - 1);\n            }\n\n            return q;\n        }());\n\n    // Compute and return the score for a match with e errors and x location.\n    // Accesses loc and pattern through being a closure.\n\n    function match_bitapScore_(e, x) {\n        var accuracy = e / pattern.length,\n            proximity = Math.abs(loc - x);\n\n        if (!Match_Distance) {\n            // Dodge divide by zero error.\n            return proximity ? 1.0 : accuracy;\n        }\n        return accuracy + (proximity / Match_Distance);\n    }\n\n    var score_threshold = Match_Threshold, // Highest score beyond which we give up.\n        best_loc = text.indexOf(pattern, loc); // Is there a nearby exact match? (speedup)\n\n    if (best_loc != -1) {\n        score_threshold = Math.min(match_bitapScore_(0, best_loc), score_threshold);\n        // What about in the other direction? (speedup)\n        best_loc = text.lastIndexOf(pattern, loc + pattern.length);\n\n        if (best_loc != -1) {\n            score_threshold = Math.min(match_bitapScore_(0, best_loc), score_threshold);\n        }\n    }\n\n    // Initialise the bit arrays.\n    var matchmask = 1 << (pattern.length - 1);\n    best_loc = -1;\n\n    var bin_min, bin_mid;\n    var bin_max = pattern.length + text.length;\n    var last_rd;\n    for (var d = 0; d < pattern.length; d++) {\n        // Scan for the best match; each iteration allows for one more error.\n        // Run a binary search to determine how far from 'loc' we can stray at this\n        // error level.\n        bin_min = 0;\n        bin_mid = bin_max;\n        while (bin_min < bin_mid) {\n            if (match_bitapScore_(d, loc + bin_mid) <= score_threshold) {\n                bin_min = bin_mid;\n            } else {\n                bin_max = bin_mid;\n            }\n            bin_mid = Math.floor((bin_max - bin_min) / 2 + bin_min);\n        }\n        // Use the result from this iteration as the maximum for the next.\n        bin_max = bin_mid;\n        var start = Math.max(1, loc - bin_mid + 1);\n        var finish = Math.min(loc + bin_mid, text.length) + pattern.length;\n\n        var rd = Array(finish + 2);\n        rd[finish + 1] = (1 << d) - 1;\n        for (var j = finish; j >= start; j--) {\n            // The alphabet (s) is a sparse hash, so the following line generates\n            // warnings.\n            var charMatch = s[text.charAt(j - 1)];\n            if (d === 0) {    // First pass: exact match.\n                rd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\n            } else {    // Subsequent passes: fuzzy match.\n                rd[j] = (((rd[j + 1] << 1) | 1) & charMatch) |\n                                (((last_rd[j + 1] | last_rd[j]) << 1) | 1) |\n                                last_rd[j + 1];\n            }\n            if (rd[j] & matchmask) {\n                var score = match_bitapScore_(d, j - 1);\n                // This match will almost certainly be better than any existing match.\n                // But check anyway.\n                if (score <= score_threshold) {\n                    // Told you so.\n                    score_threshold = score;\n                    best_loc = j - 1;\n                    if (best_loc > loc) {\n                        // When passing loc, don't exceed our current distance from loc.\n                        start = Math.max(1, 2 * loc - best_loc);\n                    } else {\n                        // Already passed loc, downhill from here on in.\n                        break;\n                    }\n                }\n            }\n        }\n        // No hope for a (better) match at greater error levels.\n        if (match_bitapScore_(d + 1, loc) > score_threshold) {\n            break;\n        }\n        last_rd = rd;\n    }\n\n    return (best_loc < 0) ? false : true;\n};\n"],"sourceRoot":""}