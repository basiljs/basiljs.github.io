[
  {
    "description": "",
    "tags": [
      {
        "title": "class",
        "description": null,
        "lineNumber": 1,
        "type": null,
        "name": "b"
      },
      {
        "title": "static",
        "description": null,
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 49,
        "column": 2
      },
      "end": {
        "line": 52,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 53,
          "column": 2
        },
        "end": {
          "line": 53,
          "column": 15
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "class",
    "name": "b",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "b",
        "kind": "class",
        "scope": "static"
      }
    ],
    "namespace": ".b"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The basil version",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 18,
          "offset": 17
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{String}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "VERSION"
      },
      {
        "title": "cat",
        "description": "Environment",
        "lineNumber": 3
      }
    ],
    "loc": {
      "start": {
        "line": 55,
        "column": 2
      },
      "end": {
        "line": 59,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 60,
          "column": 2
        },
        "end": {
          "line": 60,
          "column": 24
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "VERSION",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "VERSION",
        "scope": "static"
      }
    ],
    "namespace": ".VERSION"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with b.units() to set the coordinate system to points.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 60,
                  "offset": 59
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 60,
              "offset": 59
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 60,
          "offset": 59
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{String}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "PT"
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Units",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 62,
        "column": 0
      },
      "end": {
        "line": 67,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 68,
          "column": 0
        },
        "end": {
          "line": 68,
          "column": 14
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "PT",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "PT",
        "scope": "static"
      }
    ],
    "namespace": ".PT"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with b.units() to set the coordinate system to pixels.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 60,
                  "offset": 59
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 60,
              "offset": 59
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 60,
          "offset": 59
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{String}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "PX"
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Units",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 70,
        "column": 0
      },
      "end": {
        "line": 75,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 76,
          "column": 0
        },
        "end": {
          "line": 76,
          "column": 14
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "PX",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "PX",
        "scope": "static"
      }
    ],
    "namespace": ".PX"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with b.units() to set the coordinate system to centimeters.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 65,
              "offset": 64
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 65,
          "offset": 64
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{String}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "CM"
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Units",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 78,
        "column": 0
      },
      "end": {
        "line": 83,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 85,
          "column": 0
        },
        "end": {
          "line": 85,
          "column": 14
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "CM",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "CM",
        "scope": "static"
      }
    ],
    "namespace": ".CM"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with b.units() to set the coordinate system to millimeters.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 65,
              "offset": 64
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 65,
          "offset": 64
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{String}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "MM"
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Units",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 87,
        "column": 0
      },
      "end": {
        "line": 92,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 93,
          "column": 0
        },
        "end": {
          "line": 93,
          "column": 14
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "MM",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "MM",
        "scope": "static"
      }
    ],
    "namespace": ".MM"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with b.units() to set the coordinate system to inches.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 60,
                  "offset": 59
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 60,
              "offset": 59
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 60,
          "offset": 59
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{String}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "IN"
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Units",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 95,
        "column": 0
      },
      "end": {
        "line": 100,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 101,
          "column": 0
        },
        "end": {
          "line": 101,
          "column": 16
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "IN",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "IN",
        "scope": "static"
      }
    ],
    "namespace": ".IN"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with b.colorMode() to set the color space.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 48,
                  "offset": 47
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 48,
              "offset": 47
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 48,
          "offset": 47
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{String}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "RGB"
      },
      {
        "title": "cat",
        "description": "Color",
        "lineNumber": 3
      }
    ],
    "loc": {
      "start": {
        "line": 103,
        "column": 0
      },
      "end": {
        "line": 107,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 108,
          "column": 0
        },
        "end": {
          "line": 108,
          "column": 16
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "RGB",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "RGB",
        "scope": "static"
      }
    ],
    "namespace": ".RGB"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with b.colorMode() to set the color space.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 48,
                  "offset": 47
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 48,
              "offset": 47
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 48,
          "offset": 47
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{String}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "CMYK"
      },
      {
        "title": "cat",
        "description": "Color",
        "lineNumber": 3
      }
    ],
    "loc": {
      "start": {
        "line": 110,
        "column": 0
      },
      "end": {
        "line": 114,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 115,
          "column": 0
        },
        "end": {
          "line": 115,
          "column": 18
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "CMYK",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "CMYK",
        "scope": "static"
      }
    ],
    "namespace": ".CMYK"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with b.gradientMode() to set the gradient mode.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 53,
                  "offset": 52
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 53,
              "offset": 52
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 53,
          "offset": 52
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{String}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "LINEAR"
      },
      {
        "title": "cat",
        "description": "Color",
        "lineNumber": 3
      }
    ],
    "loc": {
      "start": {
        "line": 117,
        "column": 0
      },
      "end": {
        "line": 121,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 122,
          "column": 0
        },
        "end": {
          "line": 122,
          "column": 22
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "LINEAR",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "LINEAR",
        "scope": "static"
      }
    ],
    "namespace": ".LINEAR"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with b.gradientMode() to set the gradient mode.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 53,
                  "offset": 52
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 53,
              "offset": 52
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 53,
          "offset": 52
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{String}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "RADIAL"
      },
      {
        "title": "cat",
        "description": "Color",
        "lineNumber": 3
      }
    ],
    "loc": {
      "start": {
        "line": 124,
        "column": 0
      },
      "end": {
        "line": 128,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 129,
          "column": 0
        },
        "end": {
          "line": 129,
          "column": 22
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "RADIAL",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "RADIAL",
        "scope": "static"
      }
    ],
    "namespace": ".RADIAL"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Corner, used for drawing modes.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 32,
                  "offset": 31
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 32,
              "offset": 31
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 32,
          "offset": 31
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{String}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "CORNER"
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Primitives",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 131,
        "column": 0
      },
      "end": {
        "line": 136,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 137,
          "column": 0
        },
        "end": {
          "line": 137,
          "column": 22
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "CORNER",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "CORNER",
        "scope": "static"
      }
    ],
    "namespace": ".CORNER"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Corners, used for drawing modes.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 33,
          "offset": 32
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{String}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "CORNERS"
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Primitives",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 139,
        "column": 0
      },
      "end": {
        "line": 144,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 145,
          "column": 0
        },
        "end": {
          "line": 145,
          "column": 24
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "CORNERS",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "CORNERS",
        "scope": "static"
      }
    ],
    "namespace": ".CORNERS"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Center, used for drawing modes.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 32,
                  "offset": 31
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 32,
              "offset": 31
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 32,
          "offset": 31
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{String}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "CENTER"
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Primitives",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 147,
        "column": 0
      },
      "end": {
        "line": 152,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 153,
          "column": 0
        },
        "end": {
          "line": 153,
          "column": 22
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "CENTER",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "CENTER",
        "scope": "static"
      }
    ],
    "namespace": ".CENTER"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Radius, used for drawing modes.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 32,
                  "offset": 31
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 32,
              "offset": 31
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 32,
          "offset": 31
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{String}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "RADIUS"
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Primitives",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 155,
        "column": 0
      },
      "end": {
        "line": 160,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 161,
          "column": 0
        },
        "end": {
          "line": 161,
          "column": 22
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "RADIUS",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "RADIUS",
        "scope": "static"
      }
    ],
    "namespace": ".RADIUS"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Close, used for endShape() modes.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 34,
                  "offset": 33
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 34,
              "offset": 33
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 34,
          "offset": 33
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{String}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "CLOSE"
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Primitives",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 163,
        "column": 0
      },
      "end": {
        "line": 168,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 169,
          "column": 0
        },
        "end": {
          "line": 169,
          "column": 20
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "CLOSE",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "CLOSE",
        "scope": "static"
      }
    ],
    "namespace": ".CLOSE"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Open, used for arc() modes.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 28,
          "offset": 27
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{String}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "OPEN"
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Primitives",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 171,
        "column": 0
      },
      "end": {
        "line": 176,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 177,
          "column": 0
        },
        "end": {
          "line": 177,
          "column": 18
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "OPEN",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "OPEN",
        "scope": "static"
      }
    ],
    "namespace": ".OPEN"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Chord, used for arc() modes.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 29,
          "offset": 28
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{String}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "CHORD"
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Primitives",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 179,
        "column": 0
      },
      "end": {
        "line": 184,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 185,
          "column": 0
        },
        "end": {
          "line": 185,
          "column": 20
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "CHORD",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "CHORD",
        "scope": "static"
      }
    ],
    "namespace": ".CHORD"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Pie, used for arc() modes.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 27,
          "offset": 26
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{String}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "PIE"
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Primitives",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 187,
        "column": 0
      },
      "end": {
        "line": 192,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 193,
          "column": 0
        },
        "end": {
          "line": 193,
          "column": 16
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "PIE",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "PIE",
        "scope": "static"
      }
    ],
    "namespace": ".PIE"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Two Pi",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 7,
                  "offset": 6
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 7,
              "offset": 6
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 7,
          "offset": 6
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{Number}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "TWO_PI"
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 195,
        "column": 0
      },
      "end": {
        "line": 200,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 201,
          "column": 0
        },
        "end": {
          "line": 201,
          "column": 25
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "TWO_PI",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "TWO_PI",
        "scope": "static"
      }
    ],
    "namespace": ".TWO_PI"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Pi",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 3,
                  "offset": 2
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 3,
              "offset": 2
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 3,
          "offset": 2
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{Number}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "PI"
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 203,
        "column": 0
      },
      "end": {
        "line": 208,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 209,
          "column": 0
        },
        "end": {
          "line": 209,
          "column": 17
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "PI",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "PI",
        "scope": "static"
      }
    ],
    "namespace": ".PI"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Half Pi",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 8,
                  "offset": 7
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 8,
              "offset": 7
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 8,
          "offset": 7
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{Number}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "HALF_PI"
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 211,
        "column": 0
      },
      "end": {
        "line": 216,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 217,
          "column": 0
        },
        "end": {
          "line": 217,
          "column": 26
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "HALF_PI",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "HALF_PI",
        "scope": "static"
      }
    ],
    "namespace": ".HALF_PI"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Quarter Pi",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 11,
                  "offset": 10
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 11,
              "offset": 10
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 11,
          "offset": 10
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{Number}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "QUARTER_PI"
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 219,
        "column": 0
      },
      "end": {
        "line": 224,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 225,
          "column": 0
        },
        "end": {
          "line": 225,
          "column": 29
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "QUARTER_PI",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "QUARTER_PI",
        "scope": "static"
      }
    ],
    "namespace": ".QUARTER_PI"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sin Cos Length",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 15,
                  "offset": 14
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 15,
              "offset": 14
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 15,
          "offset": 14
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{Number}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "SINCOS_LENGTH"
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 227,
        "column": 0
      },
      "end": {
        "line": 232,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 233,
          "column": 0
        },
        "end": {
          "line": 233,
          "column": 24
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "SINCOS_LENGTH",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "SINCOS_LENGTH",
        "scope": "static"
      }
    ],
    "namespace": ".SINCOS_LENGTH"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Epsilon",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 8,
                  "offset": 7
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 8,
              "offset": 7
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 8,
          "offset": 7
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{Number}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "EPSILON"
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 235,
        "column": 0
      },
      "end": {
        "line": 240,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 241,
          "column": 0
        },
        "end": {
          "line": 241,
          "column": 21
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "EPSILON",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "EPSILON",
        "scope": "static"
      }
    ],
    "namespace": ".EPSILON"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Kappa",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 6,
              "offset": 5
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 6,
          "offset": 5
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{Number}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "KAPPA"
      },
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Constants",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 243,
        "column": 0
      },
      "end": {
        "line": 248,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 250,
          "column": 0
        },
        "end": {
          "line": 250,
          "column": 49
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "KAPPA",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "KAPPA",
        "scope": "static"
      }
    ],
    "namespace": ".KAPPA"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with b.canvasMode() to set the canvas to the full current page.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 69,
              "offset": 68
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 69,
          "offset": 68
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{String}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "PAGE"
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Page",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 252,
        "column": 0
      },
      "end": {
        "line": 257,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 258,
          "column": 0
        },
        "end": {
          "line": 258,
          "column": 18
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "PAGE",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "PAGE",
        "scope": "static"
      }
    ],
    "namespace": ".PAGE"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with b.canvasMode() to set the canvas to the full current page minus the margins.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 87,
                  "offset": 86
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 87,
              "offset": 86
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 87,
          "offset": 86
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{String}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "MARGIN"
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Page",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 260,
        "column": 0
      },
      "end": {
        "line": 265,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 266,
          "column": 0
        },
        "end": {
          "line": 266,
          "column": 22
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "MARGIN",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "MARGIN",
        "scope": "static"
      }
    ],
    "namespace": ".MARGIN"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with b.canvasMode() to set the canvas to the full current page plus the bleed.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 84,
                  "offset": 83
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 84,
              "offset": 83
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 84,
          "offset": 83
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{String}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "BLEED"
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Page",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 268,
        "column": 0
      },
      "end": {
        "line": 273,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 274,
          "column": 0
        },
        "end": {
          "line": 274,
          "column": 20
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "BLEED",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "BLEED",
        "scope": "static"
      }
    ],
    "namespace": ".BLEED"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with b.canvasMode() to set the canvas to use the current facing pages.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 76,
                  "offset": 75
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 76,
              "offset": 75
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 76,
          "offset": 75
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{String}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "FACING_PAGES"
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Page",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 276,
        "column": 0
      },
      "end": {
        "line": 281,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 282,
          "column": 0
        },
        "end": {
          "line": 282,
          "column": 34
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "FACING_PAGES",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "FACING_PAGES",
        "scope": "static"
      }
    ],
    "namespace": ".FACING_PAGES"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with b.canvasMode() to set the canvas to use the current facing pages plus bleeds.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 88,
                  "offset": 87
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 88,
              "offset": 87
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 88,
          "offset": 87
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{String}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "FACING_BLEEDS"
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Page",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 284,
        "column": 0
      },
      "end": {
        "line": 289,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 290,
          "column": 0
        },
        "end": {
          "line": 290,
          "column": 36
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "FACING_BLEEDS",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "FACING_BLEEDS",
        "scope": "static"
      }
    ],
    "namespace": ".FACING_BLEEDS"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with b.canvasMode() to set the canvas to use the current facing pages minus margins.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 90,
                  "offset": 89
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 90,
              "offset": 89
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 90,
          "offset": 89
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{String}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "FACING_MARGINS"
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Page",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 292,
        "column": 0
      },
      "end": {
        "line": 297,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 298,
          "column": 0
        },
        "end": {
          "line": 298,
          "column": 38
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "FACING_MARGINS",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "FACING_MARGINS",
        "scope": "static"
      }
    ],
    "namespace": ".FACING_MARGINS"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with b.addPage() to set the position of the new page in the book.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 71,
                  "offset": 70
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 71,
              "offset": 70
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 71,
          "offset": 70
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{String}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "AT_BEGINNING"
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Page",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 300,
        "column": 0
      },
      "end": {
        "line": 305,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 306,
          "column": 0
        },
        "end": {
          "line": 306,
          "column": 48
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "AT_BEGINNING",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "AT_BEGINNING",
        "scope": "static"
      }
    ],
    "namespace": ".AT_BEGINNING"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with b.addPage() to set the position of the new page in the book.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 71,
                  "offset": 70
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 71,
              "offset": 70
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 71,
          "offset": 70
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{String}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "AT_END"
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Page",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 308,
        "column": 0
      },
      "end": {
        "line": 313,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 314,
          "column": 0
        },
        "end": {
          "line": 314,
          "column": 36
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "AT_END",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "AT_END",
        "scope": "static"
      }
    ],
    "namespace": ".AT_END"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with b.addPage() to set the position of the new page in the book.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 71,
                  "offset": 70
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 71,
              "offset": 70
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 71,
          "offset": 70
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{String}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "BEFORE"
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Page",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 316,
        "column": 0
      },
      "end": {
        "line": 321,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 322,
          "column": 0
        },
        "end": {
          "line": 322,
          "column": 36
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "BEFORE",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "BEFORE",
        "scope": "static"
      }
    ],
    "namespace": ".BEFORE"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with b.addPage() to set the position of the new page in the book.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 71,
                  "offset": 70
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 71,
              "offset": 70
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 71,
          "offset": 70
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{String}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "AFTER"
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Page",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 324,
        "column": 0
      },
      "end": {
        "line": 329,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 330,
          "column": 0
        },
        "end": {
          "line": 330,
          "column": 34
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "AFTER",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "AFTER",
        "scope": "static"
      }
    ],
    "namespace": ".AFTER"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns a Lorem ipsum string that can be used for testing.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 59,
                  "offset": 58
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 59,
              "offset": 58
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 59,
          "offset": 58
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{String}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "LOREM"
      },
      {
        "title": "cat",
        "description": "Typography",
        "lineNumber": 3
      }
    ],
    "loc": {
      "start": {
        "line": 332,
        "column": 0
      },
      "end": {
        "line": 336,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 337,
          "column": 0
        },
        "end": {
          "line": 337,
          "column": 353
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "LOREM",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "LOREM",
        "scope": "static"
      }
    ],
    "namespace": ".LOREM"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with b.go() to set Performance Mode. Disables ScreenRedraw during processing.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 83,
                  "offset": 82
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 83,
              "offset": 82
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 83,
          "offset": 82
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{String}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "MODESILENT"
      },
      {
        "title": "cat",
        "description": "Environment",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "modes",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 339,
        "column": 0
      },
      "end": {
        "line": 344,
        "column": 2
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 345,
          "column": 0
        },
        "end": {
          "line": 345,
          "column": 30
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "MODESILENT",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "MODESILENT",
        "scope": "static"
      }
    ],
    "namespace": ".MODESILENT"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used with b.go() to set Performance Mode. Processes Document in background mode. Document will not be visible until the script is done. If you are firing on a open document you'll need to save it before calling b.go(). The document will be removed from the display list and added again after the script is done. In this mode you will likely look at indesign with no open document for quite some time - do not work in indesign during this time. You may want to use b.println(\"yourMessage\") in your script and look at the Console in estk to get information about the process.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 574,
                  "offset": 573
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 574,
              "offset": 573
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 574,
          "offset": 573
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{String}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "MODEHIDDEN"
      },
      {
        "title": "cat",
        "description": "Environment",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "modes",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 347,
        "column": 0
      },
      "end": {
        "line": 352,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 353,
          "column": 0
        },
        "end": {
          "line": 353,
          "column": 30
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "MODEHIDDEN",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "MODEHIDDEN",
        "scope": "static"
      }
    ],
    "namespace": ".MODEHIDDEN"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Default mode. Used with b.go() to set Performance Mode. Processes Document with Screen redraw, use this option to see direct results during the process. This will slow down the process in terms of processing time. This mode was also the default in Versions prior to 0.22",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 271,
                  "offset": 270
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 271,
              "offset": 270
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 271,
          "offset": 270
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{String}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "MODEVISIBLE"
      },
      {
        "title": "cat",
        "description": "Environment",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "modes",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 355,
        "column": 0
      },
      "end": {
        "line": 360,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 361,
          "column": 0
        },
        "end": {
          "line": 361,
          "column": 32
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "MODEVISIBLE",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "MODEVISIBLE",
        "scope": "static"
      }
    ],
    "namespace": ".MODEVISIBLE"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "System variable which stores the width of the current page.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 60,
                  "offset": 59
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 60,
              "offset": 59
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 60,
          "offset": 59
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{Number}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "width"
      },
      {
        "title": "cat",
        "description": "Environment",
        "lineNumber": 3
      }
    ],
    "loc": {
      "start": {
        "line": 371,
        "column": 0
      },
      "end": {
        "line": 375,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 376,
          "column": 0
        },
        "end": {
          "line": 376,
          "column": 17
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "width",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "width",
        "scope": "static"
      }
    ],
    "namespace": ".width"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "System variable which stores the height of the current page.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 61,
                  "offset": 60
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 61,
              "offset": 60
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 61,
          "offset": 60
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "{Number}",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "height"
      },
      {
        "title": "cat",
        "description": "Environment",
        "lineNumber": 3
      }
    ],
    "loc": {
      "start": {
        "line": 378,
        "column": 0
      },
      "end": {
        "line": 382,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 383,
          "column": 0
        },
        "end": {
          "line": 383,
          "column": 18
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "name": "height",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "height",
        "scope": "static"
      }
    ],
    "namespace": ".height"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Run the sketch! Has to be called in every sketch a the very end of the code.\nYou may add performance setting options when calling b.go():",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 61,
                  "offset": 137
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "html",
              "value": "<br />",
              "position": {
                "start": {
                  "line": 2,
                  "column": 61,
                  "offset": 137
                },
                "end": {
                  "line": 2,
                  "column": 67,
                  "offset": 143
                },
                "indent": []
              }
            },
            {
              "type": "html",
              "value": "<br />",
              "position": {
                "start": {
                  "line": 2,
                  "column": 67,
                  "offset": 143
                },
                "end": {
                  "line": 2,
                  "column": 73,
                  "offset": 149
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 73,
              "offset": 149
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "b.go(b.MODEVISIBLE) or alternatively: b.go()",
              "position": {
                "start": {
                  "line": 4,
                  "column": 1,
                  "offset": 151
                },
                "end": {
                  "line": 4,
                  "column": 45,
                  "offset": 195
                },
                "indent": []
              }
            },
            {
              "type": "html",
              "value": "<br />",
              "position": {
                "start": {
                  "line": 4,
                  "column": 45,
                  "offset": 195
                },
                "end": {
                  "line": 4,
                  "column": 51,
                  "offset": 201
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "\nb.go(b.MODESILENT) ",
              "position": {
                "start": {
                  "line": 4,
                  "column": 51,
                  "offset": 201
                },
                "end": {
                  "line": 5,
                  "column": 20,
                  "offset": 221
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "html",
              "value": "<br />",
              "position": {
                "start": {
                  "line": 5,
                  "column": 20,
                  "offset": 221
                },
                "end": {
                  "line": 5,
                  "column": 26,
                  "offset": 227
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "\nb.go(b.MODEHIDDEN)",
              "position": {
                "start": {
                  "line": 5,
                  "column": 26,
                  "offset": 227
                },
                "end": {
                  "line": 6,
                  "column": 19,
                  "offset": 246
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "html",
              "value": "<br />",
              "position": {
                "start": {
                  "line": 6,
                  "column": 19,
                  "offset": 246
                },
                "end": {
                  "line": 6,
                  "column": 25,
                  "offset": 252
                },
                "indent": []
              }
            },
            {
              "type": "html",
              "value": "<br />",
              "position": {
                "start": {
                  "line": 6,
                  "column": 25,
                  "offset": 252
                },
                "end": {
                  "line": 6,
                  "column": 31,
                  "offset": 258
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 4,
              "column": 1,
              "offset": 151
            },
            "end": {
              "line": 6,
              "column": 31,
              "offset": 258
            },
            "indent": [
              1,
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Currently there is no performance optimization in b.loop()",
              "position": {
                "start": {
                  "line": 8,
                  "column": 1,
                  "offset": 260
                },
                "end": {
                  "line": 8,
                  "column": 59,
                  "offset": 318
                },
                "indent": []
              }
            },
            {
              "type": "html",
              "value": "<br />",
              "position": {
                "start": {
                  "line": 8,
                  "column": 59,
                  "offset": 318
                },
                "end": {
                  "line": 8,
                  "column": 65,
                  "offset": 324
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 8,
              "column": 1,
              "offset": 260
            },
            "end": {
              "line": 8,
              "column": 65,
              "offset": 324
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 8,
          "column": 65,
          "offset": 324
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Environment",
        "lineNumber": 9
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 10,
        "name": "go"
      },
      {
        "title": "param",
        "description": "Optional: Switch performanceMode",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "MODESILENT"
              },
              {
                "type": "NameExpression",
                "name": "MODEHIDDEN"
              },
              {
                "type": "NameExpression",
                "name": "MODEVISIBLE"
              }
            ]
          }
        },
        "name": "modes"
      }
    ],
    "loc": {
      "start": {
        "line": 728,
        "column": 0
      },
      "end": {
        "line": 740,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 741,
          "column": 0
        },
        "end": {
          "line": 786,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "go",
    "params": [
      {
        "name": "modes",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Optional: Switch performanceMode",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "MODESILENT"
              },
              {
                "type": "NameExpression",
                "name": "MODEHIDDEN"
              },
              {
                "type": "NameExpression",
                "name": "MODEVISIBLE"
              }
            ]
          }
        }
      },
      {
        "title": "param",
        "name": "mode",
        "lineNumber": 741
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "go",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".go"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "EXPERIMENTAL!",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 14,
              "offset": 13
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Causes basil to continuously execute the code within draw() when InDesign is idle.\n#targetengine \"loop\"; must be at the very top in the script file.\nIf noLoop() is called, the code in draw() stops executing.\nIt is essential to call noLoop() or execute the script lib/stop.jsx when the script is finished!\nThe framerate property determines how often draw() is called per second, e.g. a framerate of 20 will 20times call draw() per second.",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 15
                },
                "end": {
                  "line": 7,
                  "column": 133,
                  "offset": 452
                },
                "indent": [
                  1,
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 15
            },
            "end": {
              "line": 7,
              "column": 133,
              "offset": 452
            },
            "indent": [
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 7,
          "column": 133,
          "offset": 452
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Environment",
        "lineNumber": 9
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 10,
        "name": "loop"
      },
      {
        "title": "param",
        "description": "The framerate per second, determines how often draw() is called per second.",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "framerate"
      }
    ],
    "loc": {
      "start": {
        "line": 788,
        "column": 0
      },
      "end": {
        "line": 800,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 801,
          "column": 0
        },
        "end": {
          "line": 857,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "loop",
    "params": [
      {
        "name": "framerate",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The framerate per second, determines how often draw() is called per second.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 76,
                      "offset": 75
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 76,
                  "offset": 75
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 76,
              "offset": 75
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "loop",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".loop"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "EXPERIMENTAL!",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 14,
              "offset": 13
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Stops basil from continuously executing the code within draw().",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 15
                },
                "end": {
                  "line": 3,
                  "column": 64,
                  "offset": 78
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 15
            },
            "end": {
              "line": 3,
              "column": 64,
              "offset": 78
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 64,
          "offset": 78
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Environment",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "noLoop"
      }
    ],
    "loc": {
      "start": {
        "line": 859,
        "column": 0
      },
      "end": {
        "line": 866,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 867,
          "column": 0
        },
        "end": {
          "line": 873,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "noLoop",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "noLoop",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".noLoop"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Suspends the calling thread for a number of milliseconds.\nDuring a sleep period, checks at 100 millisecond intervals to see whether the sleep should be terminated.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 106,
                  "offset": 163
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 106,
              "offset": 163
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 106,
          "offset": 163
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Environment",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "delay"
      },
      {
        "title": "param",
        "description": "The delay time in milliseconds",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "milliseconds"
      }
    ],
    "loc": {
      "start": {
        "line": 1199,
        "column": 0
      },
      "end": {
        "line": 1206,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1207,
          "column": 0
        },
        "end": {
          "line": 1209,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "delay",
    "params": [
      {
        "name": "milliseconds",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The delay time in milliseconds",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 31,
              "offset": 30
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "delay",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".delay"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "If no callback function is given it returns a Collection of items otherwise calls the given callback function with each story of the given document.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 149,
                  "offset": 148
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 149,
              "offset": 148
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 149,
          "offset": 148
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Multi-Getters",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "stories"
      },
      {
        "title": "param",
        "description": "The document instance to iterate the stories in",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Document"
        },
        "name": "doc"
      },
      {
        "title": "param",
        "description": "Optional: The callback function to call with each story. When this function returns false the loop stops. Passed arguments: story, loopCount;",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Function"
          }
        },
        "name": "cb"
      },
      {
        "title": "return",
        "description": "Array of Stories.",
        "lineNumber": 8,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "Stories"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1211,
        "column": 0
      },
      "end": {
        "line": 1220,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1221,
          "column": 0
        },
        "end": {
          "line": 1232,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "stories",
    "params": [
      {
        "name": "doc",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The document instance to iterate the stories in",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 48,
                      "offset": 47
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 48,
                  "offset": 47
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 48,
              "offset": 47
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Document"
        }
      },
      {
        "name": "cb",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Optional: The callback function to call with each story. When this function returns false the loop stops. Passed arguments: story, loopCount;",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 142,
                      "offset": 141
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 142,
                  "offset": 141
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 142,
              "offset": 141
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Function"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Array of Stories.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            }
          }
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "Stories"
            }
          ]
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "stories",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".stories"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "If no callback function is given it returns a Collection of paragraphs in the container otherwise calls the given callback function with each paragraph of the given document, page, story or textFrame.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 201,
                  "offset": 200
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 201,
              "offset": 200
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 201,
          "offset": 200
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Multi-Getters",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "paragraphs"
      },
      {
        "title": "param",
        "description": "The document, story, page or textFrame instance to iterate the paragraphs in",
        "lineNumber": 6,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Document"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            },
            {
              "type": "NameExpression",
              "name": "Story"
            },
            {
              "type": "NameExpression",
              "name": "TextFrame"
            }
          ]
        },
        "name": "container"
      },
      {
        "title": "param",
        "description": "Optional: The callback function to call with each paragraph. When this function returns false the loop stops. Passed arguments: para, loopCount",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Function"
          }
        },
        "name": "cb"
      },
      {
        "title": "return",
        "description": "Array of Paragraphs.",
        "lineNumber": 8,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "Paragraphs"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1234,
        "column": 0
      },
      "end": {
        "line": 1243,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1244,
          "column": 0
        },
        "end": {
          "line": 1249,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "paragraphs",
    "params": [
      {
        "name": "container",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The document, story, page or textFrame instance to iterate the paragraphs in",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 77,
                      "offset": 76
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 77,
                  "offset": 76
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 77,
              "offset": 76
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Document"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            },
            {
              "type": "NameExpression",
              "name": "Story"
            },
            {
              "type": "NameExpression",
              "name": "TextFrame"
            }
          ]
        }
      },
      {
        "name": "cb",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Optional: The callback function to call with each paragraph. When this function returns false the loop stops. Passed arguments: para, loopCount",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 144,
                      "offset": 143
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 144,
                  "offset": 143
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 144,
              "offset": 143
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Function"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Array of Paragraphs.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "Paragraphs"
            }
          ]
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "paragraphs",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".paragraphs"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "If no callback function is given it returns a Collection of lines in the container otherwise calls the given callback function with each line of the given document, page, story, textFrame or paragraph.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 202,
                  "offset": 201
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 202,
              "offset": 201
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 202,
          "offset": 201
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Multi-Getters",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "lines"
      },
      {
        "title": "param",
        "description": "The document, page, story, textFrame or paragraph instance to\n                                                  iterate the lines in",
        "lineNumber": 6,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Document"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            },
            {
              "type": "NameExpression",
              "name": "Story"
            },
            {
              "type": "NameExpression",
              "name": "TextFrame"
            },
            {
              "type": "NameExpression",
              "name": "Paragraph"
            }
          ]
        },
        "name": "container"
      },
      {
        "title": "param",
        "description": "Optional: The callback function to call with each line. When this function returns false the loop stops. Passed arguments: line, loopCount",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Function"
          }
        },
        "name": "cb"
      },
      {
        "title": "return",
        "description": "Array of lines.",
        "lineNumber": 9,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "Lines"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1294,
        "column": 0
      },
      "end": {
        "line": 1304,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1305,
          "column": 0
        },
        "end": {
          "line": 1310,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "lines",
    "params": [
      {
        "name": "container",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The document, page, story, textFrame or paragraph instance to\n                                                  iterate the lines in",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 71,
                      "offset": 132
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 71,
                  "offset": 132
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 71,
              "offset": 132
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Document"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            },
            {
              "type": "NameExpression",
              "name": "Story"
            },
            {
              "type": "NameExpression",
              "name": "TextFrame"
            },
            {
              "type": "NameExpression",
              "name": "Paragraph"
            }
          ]
        }
      },
      {
        "name": "cb",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Optional: The callback function to call with each line. When this function returns false the loop stops. Passed arguments: line, loopCount",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 139,
                      "offset": 138
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 139,
                  "offset": 138
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 139,
              "offset": 138
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Function"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Array of lines.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 16,
                  "offset": 15
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 16,
              "offset": 15
            }
          }
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "Lines"
            }
          ]
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "lines",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".lines"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "If no callback function is given it returns a Collection of words in the container otherwise calls the given callback function with each word of the given document, page, story, textFrame, paragraph or line.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 208,
                  "offset": 207
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 208,
              "offset": 207
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 208,
          "offset": 207
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Multi-Getters",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "words"
      },
      {
        "title": "param",
        "description": "The document, page, story, textFrame, paragraph or line instance\n                                                       to iterate the words in",
        "lineNumber": 6,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Document"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            },
            {
              "type": "NameExpression",
              "name": "Story"
            },
            {
              "type": "NameExpression",
              "name": "TextFrame"
            },
            {
              "type": "NameExpression",
              "name": "Paragraph"
            },
            {
              "type": "NameExpression",
              "name": "Line"
            }
          ]
        },
        "name": "container"
      },
      {
        "title": "param",
        "description": "Optional: The callback function to call with each word. When this function returns false the loop stops. Passed arguments: word, loopCount",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Function"
          }
        },
        "name": "cb"
      },
      {
        "title": "return",
        "description": "Array of Words.",
        "lineNumber": 9,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "Words"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1312,
        "column": 0
      },
      "end": {
        "line": 1322,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1323,
          "column": 0
        },
        "end": {
          "line": 1328,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "words",
    "params": [
      {
        "name": "container",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The document, page, story, textFrame, paragraph or line instance\n                                                       to iterate the words in",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 79,
                      "offset": 143
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 79,
                  "offset": 143
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 79,
              "offset": 143
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Document"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            },
            {
              "type": "NameExpression",
              "name": "Story"
            },
            {
              "type": "NameExpression",
              "name": "TextFrame"
            },
            {
              "type": "NameExpression",
              "name": "Paragraph"
            },
            {
              "type": "NameExpression",
              "name": "Line"
            }
          ]
        }
      },
      {
        "name": "cb",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Optional: The callback function to call with each word. When this function returns false the loop stops. Passed arguments: word, loopCount",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 139,
                      "offset": 138
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 139,
                  "offset": 138
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 139,
              "offset": 138
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Function"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Array of Words.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 16,
                  "offset": 15
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 16,
              "offset": 15
            }
          }
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "Words"
            }
          ]
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "words",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".words"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "If no callback function is given it returns a Collection of characters in the container otherwise calls the given callback function with each character of the given document, page, story, textFrame, paragraph, line or word.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 224,
                  "offset": 223
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 224,
              "offset": 223
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 224,
          "offset": 223
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Multi-Getters",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "characters"
      },
      {
        "title": "param",
        "description": "The document, page, story, textFrame, paragraph, line or word instance to\n                                                   iterate the characters in",
        "lineNumber": 6,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Document"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            },
            {
              "type": "NameExpression",
              "name": "Story"
            },
            {
              "type": "NameExpression",
              "name": "TextFrame"
            },
            {
              "type": "NameExpression",
              "name": "Paragraph"
            },
            {
              "type": "NameExpression",
              "name": "Line"
            },
            {
              "type": "NameExpression",
              "name": "Word"
            }
          ]
        },
        "name": "container"
      },
      {
        "title": "param",
        "description": "Optional: The callback function to call with each character. When this function returns false the loop stops. Passed arguments: character, loopCount",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Function"
          }
        },
        "name": "cb"
      },
      {
        "title": "return",
        "description": "You can use it like an array.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Characters"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1330,
        "column": 0
      },
      "end": {
        "line": 1340,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1341,
          "column": 0
        },
        "end": {
          "line": 1346,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "characters",
    "params": [
      {
        "name": "container",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The document, page, story, textFrame, paragraph, line or word instance to\n                                                   iterate the characters in",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 77,
                      "offset": 150
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 77,
                  "offset": 150
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 77,
              "offset": 150
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Document"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            },
            {
              "type": "NameExpression",
              "name": "Story"
            },
            {
              "type": "NameExpression",
              "name": "TextFrame"
            },
            {
              "type": "NameExpression",
              "name": "Paragraph"
            },
            {
              "type": "NameExpression",
              "name": "Line"
            },
            {
              "type": "NameExpression",
              "name": "Word"
            }
          ]
        }
      },
      {
        "name": "cb",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Optional: The callback function to call with each character. When this function returns false the loop stops. Passed arguments: character, loopCount",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 149,
                      "offset": 148
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 149,
                  "offset": 148
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 149,
              "offset": 148
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Function"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "You can use it like an array.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 30,
              "offset": 29
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Characters"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "characters",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".characters"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "If no callback function is given it returns a Collection of items otherwise calls the given callback function for each of the PageItems in the given Document, Page, Layer or Group.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 181,
                  "offset": 180
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 181,
              "offset": 180
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 181,
          "offset": 180
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Multi-Getters",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "items"
      },
      {
        "title": "param",
        "description": "The container where the PageItems sit in",
        "lineNumber": 6,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Document"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            },
            {
              "type": "NameExpression",
              "name": "Layer"
            },
            {
              "type": "NameExpression",
              "name": "Group"
            }
          ]
        },
        "name": "container"
      },
      {
        "title": "param",
        "description": "Optional: The callback function to call for each PageItem. When this function returns false the loop stops. Passed arguments: item, loopCount.",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "Function"
              },
              {
                "type": "NameExpression",
                "name": "Boolean"
              }
            ]
          }
        },
        "name": "cb"
      },
      {
        "title": "return",
        "description": "array or PageItems.",
        "lineNumber": 8,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "PageItems"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1392,
        "column": 0
      },
      "end": {
        "line": 1401,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1402,
          "column": 0
        },
        "end": {
          "line": 1417,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "items",
    "params": [
      {
        "name": "container",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The container where the PageItems sit in",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 41,
                      "offset": 40
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 41,
              "offset": 40
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Document"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            },
            {
              "type": "NameExpression",
              "name": "Layer"
            },
            {
              "type": "NameExpression",
              "name": "Group"
            }
          ]
        }
      },
      {
        "name": "cb",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Optional: The callback function to call for each PageItem. When this function returns false the loop stops. Passed arguments: item, loopCount.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 143,
                      "offset": 142
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 143,
                  "offset": 142
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 143,
              "offset": 142
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "Function"
              },
              {
                "type": "NameExpression",
                "name": "Boolean"
              }
            ]
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "array or PageItems.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "PageItems"
            }
          ]
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "items",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".items"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Removes all PageItems (including locked ones) in the given Document, Page, Layer or Group. If the selected container is a Group, the Group itself will be removed as well.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 171,
                  "offset": 170
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 171,
              "offset": 170
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 171,
          "offset": 170
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "clear"
      },
      {
        "title": "param",
        "description": "The container where the PageItems sit in",
        "lineNumber": 5,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Document"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            },
            {
              "type": "NameExpression",
              "name": "Layer"
            },
            {
              "type": "NameExpression",
              "name": "Group"
            }
          ]
        },
        "name": "container"
      }
    ],
    "loc": {
      "start": {
        "line": 1420,
        "column": 0
      },
      "end": {
        "line": 1426,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1427,
          "column": 0
        },
        "end": {
          "line": 1444,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "clear",
    "params": [
      {
        "name": "container",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The container where the PageItems sit in",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 41,
                      "offset": 40
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 41,
              "offset": 40
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Document"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            },
            {
              "type": "NameExpression",
              "name": "Layer"
            },
            {
              "type": "NameExpression",
              "name": "Group"
            }
          ]
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "clear",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".clear"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Removes the provided Page, Layer, PageItem, Swatch, etc.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 57,
                  "offset": 56
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 57,
              "offset": 56
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 57,
          "offset": 56
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "remove"
      },
      {
        "title": "param",
        "description": "The object to be removed",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "PageItem"
        },
        "name": "obj"
      }
    ],
    "loc": {
      "start": {
        "line": 1446,
        "column": 0
      },
      "end": {
        "line": 1452,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1453,
          "column": 0
        },
        "end": {
          "line": 1460,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "remove",
    "params": [
      {
        "name": "obj",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The object to be removed",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "PageItem"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "remove",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".remove"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets or possibly creates the current document and returns it.\nIf the param doc is not given the current document gets set to the active document\nin the application. If no document at all is open, a new document gets created.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 80,
                  "offset": 224
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 80,
              "offset": 224
            },
            "indent": [
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 80,
          "offset": 224
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "doc"
      },
      {
        "title": "param",
        "description": "The document to set the current document to",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Document"
          }
        },
        "name": "doc"
      },
      {
        "title": "return",
        "description": "The current document instance",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Document"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1465,
        "column": 0
      },
      "end": {
        "line": 1474,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1475,
          "column": 0
        },
        "end": {
          "line": 1480,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "doc",
    "params": [
      {
        "name": "doc",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The document to set the current document to",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 44,
                      "offset": 43
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 44,
                  "offset": 43
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 44,
              "offset": 43
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Document"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The current document instance",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 30,
              "offset": 29
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Document"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "doc",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".doc"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets the size of the current document, if arguments are given.\nIf only one argument is given, both the width and the height are set to this value.\nIf no argument is given, an object containing the current document's width and height is returned.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 99,
                  "offset": 245
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 99,
              "offset": 245
            },
            "indent": [
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 99,
          "offset": 245
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "size"
      },
      {
        "title": "param",
        "description": "The desired width of the current document",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "width"
      },
      {
        "title": "param",
        "description": "optional the desired height of the current document. If not provided the width will be used as the height.",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "height"
      },
      {
        "title": "return",
        "description": "if no argument is given it returns an object containing the current width and height of the document.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1482,
        "column": 0
      },
      "end": {
        "line": 1493,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1494,
          "column": 0
        },
        "end": {
          "line": 1524,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "size",
    "params": [
      {
        "name": "width",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The desired width of the current document",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 42,
                      "offset": 41
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 42,
              "offset": 41
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "height",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "optional the desired height of the current document. If not provided the width will be used as the height.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 107,
                      "offset": 106
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 107,
                  "offset": 106
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 107,
              "offset": 106
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "if no argument is given it returns an object containing the current width and height of the document.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 102,
                      "offset": 101
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 102,
                  "offset": 101
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 102,
              "offset": 101
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "size",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".size"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Closes the current document.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 29,
          "offset": 28
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "close"
      },
      {
        "title": "param",
        "description": "The indesign SaveOptions constant or either true for triggering saving before closing or false for closing without saving.",
        "lineNumber": 5,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "SaveOptions"
              },
              {
                "type": "NameExpression",
                "name": "Boolean"
              }
            ]
          }
        },
        "name": "saveOptions"
      },
      {
        "title": "param",
        "description": "Optional: The indesign file instance to save the document to",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "File"
          }
        },
        "name": "file"
      }
    ],
    "loc": {
      "start": {
        "line": 1526,
        "column": 0
      },
      "end": {
        "line": 1533,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1534,
          "column": 0
        },
        "end": {
          "line": 1542,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "close",
    "params": [
      {
        "name": "saveOptions",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The indesign SaveOptions constant or either true for triggering saving before closing or false for closing without saving.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 123,
                      "offset": 122
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 123,
                  "offset": 122
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 123,
              "offset": 122
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "SaveOptions"
              },
              {
                "type": "NameExpression",
                "name": "Boolean"
              }
            ]
          }
        }
      },
      {
        "name": "file",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Optional: The indesign file instance to save the document to",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 61,
                      "offset": 60
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 61,
                  "offset": 60
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 61,
              "offset": 60
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "File"
          }
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "close",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".close"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Use this to set the dimensions of the canvas. Choose between b.PAGE (default), b.MARGIN, b.BLEED resp. b.FACING_PAGES, b.FACING_MARGINS and b.FACING_BLEEDS for book setups with facing page. Please note: Setups with more than two facing pages are not yet supported.\nPlease note that you will loose your current MatrixTransformation. You should set the canvasMode before you attempt to use b.translate(), b.rotate() and b.scale();",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 164,
                  "offset": 428
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 164,
              "offset": 428
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 164,
          "offset": 428
        }
      }
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 3,
        "name": "canvasMode"
      },
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 4
      },
      {
        "title": "subcat",
        "description": "Page",
        "lineNumber": 5
      }
    ],
    "loc": {
      "start": {
        "line": 1544,
        "column": 0
      },
      "end": {
        "line": 1550,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1551,
          "column": 0
        },
        "end": {
          "line": 1564,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "canvasMode",
    "params": [
      {
        "title": "param",
        "name": "m",
        "lineNumber": 1551
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "canvasMode",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".canvasMode"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the current horizontal and vertical pasteboard margins and sets them if both arguements are given.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 107,
                  "offset": 106
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 107,
              "offset": 106
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 107,
          "offset": 106
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Page",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "pasteboard"
      },
      {
        "title": "param",
        "description": "desired horizontal pasteboard margin.",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "The"
      },
      {
        "title": "param",
        "description": "desired vertical pasteboard margin.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "The"
      },
      {
        "title": "return",
        "description": "The current horizontal, vertical pasteboard margins.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "array"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1567,
        "column": 0
      },
      "end": {
        "line": 1576,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1577,
          "column": 0
        },
        "end": {
          "line": 1588,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "pasteboard",
    "params": [
      {
        "name": "The",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "desired horizontal pasteboard margin.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 38,
                  "offset": 37
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 38,
              "offset": 37
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "The",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "desired vertical pasteboard margin.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 36,
                      "offset": 35
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 36,
                  "offset": 35
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 36,
              "offset": 35
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "h",
        "lineNumber": 1577
      },
      {
        "title": "param",
        "name": "v",
        "lineNumber": 1577
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The current horizontal, vertical pasteboard margins.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 53,
                      "offset": 52
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 53,
                  "offset": 52
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 53,
              "offset": 52
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "array"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "pasteboard",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".pasteboard"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the current page and sets it if argument page is given. Numbering starts with 1.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 89,
                  "offset": 88
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 89,
              "offset": 88
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 89,
          "offset": 88
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Page",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "page"
      },
      {
        "title": "param",
        "description": "The page object or page number to set the current page to. If you pass a PageItem the current page will be set to it's containing page.",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "Page"
              },
              {
                "type": "NameExpression",
                "name": "Number"
              },
              {
                "type": "NameExpression",
                "name": "PageItem"
              }
            ]
          }
        },
        "name": "page"
      },
      {
        "title": "return",
        "description": "The current page instance",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Page"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1590,
        "column": 0
      },
      "end": {
        "line": 1598,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1599,
          "column": 0
        },
        "end": {
          "line": 1624,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "page",
    "params": [
      {
        "name": "page",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The page object or page number to set the current page to. If you pass a PageItem the current page will be set to it's containing page.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 136,
                      "offset": 135
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 136,
                  "offset": 135
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 136,
              "offset": 135
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "Page"
              },
              {
                "type": "NameExpression",
                "name": "Number"
              },
              {
                "type": "NameExpression",
                "name": "PageItem"
              }
            ]
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The current page instance",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 26,
                  "offset": 25
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 26,
              "offset": 25
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Page"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "page",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".page"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Adds a new page to the document. Set the optional location parameter to either b.AT_END (default), b.AT_BEGINNING, b.AFTER or b.BEFORE. b.AFTER and b.BEFORE will use the current page as insertion point.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 203,
                  "offset": 202
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 203,
              "offset": 202
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 203,
          "offset": 202
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Page",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "addPage"
      },
      {
        "title": "param",
        "description": "The location placement mode",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        },
        "name": "location"
      },
      {
        "title": "return",
        "description": "The new page",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Page"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1626,
        "column": 0
      },
      "end": {
        "line": 1634,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1635,
          "column": 0
        },
        "end": {
          "line": 1675,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "addPage",
    "params": [
      {
        "name": "location",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The location placement mode",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The new page",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 13,
                      "offset": 12
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 13,
                  "offset": 12
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 13,
              "offset": 12
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Page"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "addPage",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".addPage"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Removes a page from the current document. This will either be the current Page if the parameter page is left empty, or the given Page object or page number.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 157,
                  "offset": 156
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 157,
              "offset": 156
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 157,
          "offset": 156
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Page",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "removePage"
      },
      {
        "title": "param",
        "description": "Optional: The page to be removed as Page object or page number.",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "Page"
              },
              {
                "type": "NameExpression",
                "name": "Number"
              }
            ]
          }
        },
        "name": "page"
      }
    ],
    "loc": {
      "start": {
        "line": 1677,
        "column": 0
      },
      "end": {
        "line": 1684,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1685,
          "column": 0
        },
        "end": {
          "line": 1698,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "removePage",
    "params": [
      {
        "name": "page",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Optional: The page to be removed as Page object or page number.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 64,
                      "offset": 63
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 64,
                  "offset": 63
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 64,
              "offset": 63
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "Page"
              },
              {
                "type": "NameExpression",
                "name": "Number"
              }
            ]
          }
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "removePage",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".removePage"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the current page number of either the current page or the given Page object.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 85,
                  "offset": 84
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 85,
              "offset": 84
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 85,
          "offset": 84
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Page",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "pageNumber"
      },
      {
        "title": "param",
        "description": "Optional: The page you want to know the number of.",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Page"
          }
        },
        "name": "pageObj"
      },
      {
        "title": "return",
        "description": "The page number within the document.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1700,
        "column": 0
      },
      "end": {
        "line": 1708,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1709,
          "column": 0
        },
        "end": {
          "line": 1721,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "pageNumber",
    "params": [
      {
        "name": "pageObj",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Optional: The page you want to know the number of.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 51,
                      "offset": 50
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 51,
                  "offset": 50
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 51,
              "offset": 50
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Page"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The page number within the document.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 37,
                      "offset": 36
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 37,
                  "offset": 36
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 37,
              "offset": 36
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "pageNumber",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".pageNumber"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The number of all pages in the current document.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 49,
                  "offset": 48
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 49,
              "offset": 48
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 49,
          "offset": 48
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Page",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "pageCount"
      },
      {
        "title": "return",
        "description": "The amount of pages.",
        "lineNumber": 6,
        "type": null
      }
    ],
    "loc": {
      "start": {
        "line": 1735,
        "column": 0
      },
      "end": {
        "line": 1742,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1743,
          "column": 0
        },
        "end": {
          "line": 1745,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "pageCount",
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The amount of pages.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "pageCount",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".pageCount"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The number of all stories in the current document.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 51,
                  "offset": 50
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 51,
              "offset": 50
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 51,
          "offset": 50
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Story",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "storyCount"
      },
      {
        "title": "return",
        "description": "count The amount of stories.",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1747,
        "column": 0
      },
      "end": {
        "line": 1753,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1754,
          "column": 0
        },
        "end": {
          "line": 1756,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "storyCount",
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "count The amount of stories.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "storyCount",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".storyCount"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Adds a page item or a string to an existing story. You can control the position of the insert via the last parameter. It accepts either an InsertionPoint or one the following constants: b.AT_BEGINNING and b.AT_END.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 215,
                  "offset": 214
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 215,
              "offset": 214
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 215,
          "offset": 214
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Story",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "addToStory"
      },
      {
        "title": "param",
        "description": "The story",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "Story"
        },
        "name": "story"
      },
      {
        "title": "param",
        "description": "The itemOrString either a PageItem, a String or one the following constants: b.AT_BEGINNING and b.AT_END.",
        "lineNumber": 6,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "PageItem"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        },
        "name": "itemOrString"
      },
      {
        "title": "param",
        "description": "InsertionPoint or one the following constants: b.AT_BEGINNING and b.AT_END.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "InsertionPoint"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        },
        "name": "insertionPointOrMode"
      }
    ],
    "loc": {
      "start": {
        "line": 1758,
        "column": 0
      },
      "end": {
        "line": 1766,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1767,
          "column": 0
        },
        "end": {
          "line": 1820,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "addToStory",
    "params": [
      {
        "name": "story",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The story",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 10,
                      "offset": 9
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 10,
                  "offset": 9
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 10,
              "offset": 9
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Story"
        }
      },
      {
        "name": "itemOrString",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The itemOrString either a PageItem, a String or one the following constants: b.AT_BEGINNING and b.AT_END.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 106,
                      "offset": 105
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 106,
                  "offset": 105
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 106,
              "offset": 105
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "PageItem"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        }
      },
      {
        "name": "insertionPointOrMode",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "InsertionPoint or one the following constants: b.AT_BEGINNING and b.AT_END.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 76,
                      "offset": 75
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 76,
                  "offset": 75
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 76,
              "offset": 75
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "InsertionPoint"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "insertionPointorMode",
        "lineNumber": 1767
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "addToStory",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".addToStory"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the current layer if no argument is given. Sets active layer if layer object or name of existing layer is given. Newly creates layer and sets it to active if new name is given.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 185,
                  "offset": 184
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 185,
              "offset": 184
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 185,
          "offset": 184
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Page",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "layer"
      },
      {
        "title": "param",
        "description": "The layer or layer name to set the current layer to",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "Layer"
              },
              {
                "type": "NameExpression",
                "name": "String"
              }
            ]
          }
        },
        "name": "layer"
      },
      {
        "title": "return",
        "description": "The current layer instance",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Layer"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1822,
        "column": 0
      },
      "end": {
        "line": 1830,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1831,
          "column": 0
        },
        "end": {
          "line": 1848,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "layer",
    "params": [
      {
        "name": "layer",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The layer or layer name to set the current layer to",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 52,
                      "offset": 51
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 52,
                  "offset": 51
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 52,
              "offset": 51
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "Layer"
              },
              {
                "type": "NameExpression",
                "name": "String"
              }
            ]
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The current layer instance",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Layer"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "layer",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".layer"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the Group instance and sets it if argument Group is given.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 67,
                  "offset": 66
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 67,
              "offset": 66
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 67,
          "offset": 66
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subCat",
        "description": "Page",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "Group"
      },
      {
        "title": "param",
        "description": "The PageItems array (must be at least 2) or name of Group name instance",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          }
        },
        "name": "pItem"
      },
      {
        "title": "param",
        "description": "(optional) The name of the Group, only when creating a Group from Page Item(s)",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "name"
      },
      {
        "title": "return",
        "description": "the current Group instance",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Group"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1850,
        "column": 0
      },
      "end": {
        "line": 1859,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1860,
          "column": 0
        },
        "end": {
          "line": 1878,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "Group",
    "params": [
      {
        "name": "pItem",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The PageItems array (must be at least 2) or name of Group name instance",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 72,
                      "offset": 71
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 72,
                  "offset": 71
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 72,
              "offset": 71
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          }
        }
      },
      {
        "name": "name",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(optional) The name of the Group, only when creating a Group from Page Item(s)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 79,
                      "offset": 78
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 79,
                  "offset": 78
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 79,
              "offset": 78
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "the current Group instance",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Group"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "Group",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".Group"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns an array of the items that were within the Group before b.ungroup() was called",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 87,
                  "offset": 86
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 87,
              "offset": 86
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 87,
          "offset": 86
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subCat",
        "description": "Page",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "Group"
      },
      {
        "title": "param",
        "description": "The Group or name of Group name instance",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "Object"
              },
              {
                "type": "NameExpression",
                "name": "String"
              }
            ]
          }
        },
        "name": "pItem"
      },
      {
        "title": "param",
        "description": "The name of the Group, only when creating a Group from Page Item(s)",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "name"
      },
      {
        "title": "return",
        "description": "the Page Item(s) that were grouped",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Group"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1880,
        "column": 0
      },
      "end": {
        "line": 1889,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1890,
          "column": 0
        },
        "end": {
          "line": 1908,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "Group",
    "params": [
      {
        "name": "pItem",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The Group or name of Group name instance",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 41,
                      "offset": 40
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 41,
              "offset": 40
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "Object"
              },
              {
                "type": "NameExpression",
                "name": "String"
              }
            ]
          }
        }
      },
      {
        "name": "name",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The name of the Group, only when creating a Group from Page Item(s)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 68,
                      "offset": 67
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 68,
                  "offset": 67
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 68,
              "offset": 67
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "the Page Item(s) that were grouped",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 35,
                  "offset": 34
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 35,
              "offset": 34
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Group"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "Group",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".Group"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns items tagged with the given label in the InDesign Script Label pane (Window -> Utilities -> Script Label).",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 115,
                  "offset": 114
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 115,
              "offset": 114
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 115,
          "offset": 114
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Multi-Getters",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "labels"
      },
      {
        "title": "param",
        "description": "The label identifier",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "label"
      },
      {
        "title": "param",
        "description": "Optional: The callback function to call with each item in the search result. When this function returns false the loop stops. Passed arguments: item, loopCount",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Function"
          }
        },
        "name": "cb"
      },
      {
        "title": "return",
        "description": "Array of concrete PageItem instances, e.g. TextFrame or SplineItem.",
        "lineNumber": 8,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "PageItem"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1910,
        "column": 0
      },
      "end": {
        "line": 1919,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1920,
          "column": 0
        },
        "end": {
          "line": 1936,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "labels",
    "params": [
      {
        "name": "label",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The label identifier",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      },
      {
        "name": "cb",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Optional: The callback function to call with each item in the search result. When this function returns false the loop stops. Passed arguments: item, loopCount",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 160,
                      "offset": 159
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 160,
                  "offset": 159
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 160,
              "offset": 159
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Function"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Array of concrete PageItem instances, e.g. TextFrame or SplineItem.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 68,
                      "offset": 67
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 68,
                  "offset": 67
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 68,
              "offset": 67
            }
          }
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "PageItem"
            }
          ]
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "labels",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".labels"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the first item that is tagged with the given label in the InDesign Script Label pane (Window -> Utilities -> Script Label). Use this instead of b.labels, when you know you just have one thing with that label and don't want to deal with a single-element array.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 268,
                  "offset": 267
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 268,
              "offset": 267
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 268,
          "offset": 267
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Multi-Getters",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "label"
      },
      {
        "title": "param",
        "description": "The label identifier",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "label"
      },
      {
        "title": "return",
        "description": "The first PageItem of all the hits",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "PageItem"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1938,
        "column": 0
      },
      "end": {
        "line": 1946,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1947,
          "column": 0
        },
        "end": {
          "line": 1957,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "label",
    "params": [
      {
        "name": "label",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The label identifier",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The first PageItem of all the hits",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 35,
                  "offset": 34
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 35,
              "offset": 34
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "PageItem"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "label",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".label"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the first currently selected object. Use this if you know you only have one selected item and don't want to deal with an array.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 136,
                  "offset": 135
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 136,
              "offset": 135
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 136,
          "offset": 135
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Multi-Getters",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "selection"
      },
      {
        "title": "return",
        "description": "The first selected object",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1959,
        "column": 0
      },
      "end": {
        "line": 1966,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1967,
          "column": 0
        },
        "end": {
          "line": 1970,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "selection",
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The first selected object",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 26,
                  "offset": 25
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 26,
              "offset": 25
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "selection",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".selection"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the currently selected object(s)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 41,
              "offset": 40
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 41,
          "offset": 40
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Multi-Getters",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "selections"
      },
      {
        "title": "param",
        "description": "Optional: The callback function to call with each item in the selection. When this function returns false the loop stops. Passed arguments: item, loopCount",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Function"
          }
        },
        "name": "cb"
      },
      {
        "title": "return",
        "description": "Array of selected object(s).",
        "lineNumber": 7,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "Object"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1972,
        "column": 0
      },
      "end": {
        "line": 1980,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1981,
          "column": 0
        },
        "end": {
          "line": 1987,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "selections",
    "params": [
      {
        "name": "cb",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Optional: The callback function to call with each item in the selection. When this function returns false the loop stops. Passed arguments: item, loopCount",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 156,
                      "offset": 155
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 156,
                  "offset": 155
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 156,
              "offset": 155
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Function"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Array of selected object(s).",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            }
          }
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "Object"
            }
          ]
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "selections",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".selections"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the first item on the active page that is named by the given name in the Layers pane (Window -> Layer).",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 112,
                  "offset": 111
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 112,
              "offset": 111
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 112,
          "offset": 111
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Multi-Getters",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "nameOnPage"
      },
      {
        "title": "return",
        "description": "The first object on the active page with the given name",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1989,
        "column": 0
      },
      "end": {
        "line": 1996,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1997,
          "column": 0
        },
        "end": {
          "line": 2010,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "nameOnPage",
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The first object on the active page with the given name",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 56,
                      "offset": 55
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 56,
                  "offset": 55
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 56,
              "offset": 55
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "params": [
      {
        "title": "param",
        "name": "name",
        "lineNumber": 1997
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "nameOnPage",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".nameOnPage"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Creates a vertical guide line at the current spread and current layer.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 71,
                  "offset": 70
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 71,
              "offset": 70
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 71,
          "offset": 70
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "guideX"
      },
      {
        "title": "param",
        "description": "Position of the new guide",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "x"
      },
      {
        "title": "return",
        "description": "New guide",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Guide"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2067,
        "column": 0
      },
      "end": {
        "line": 2074,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2075,
          "column": 0
        },
        "end": {
          "line": 2083,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "guideX",
    "params": [
      {
        "name": "x",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Position of the new guide",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 26,
                  "offset": 25
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 26,
              "offset": 25
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "New guide",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 10,
                      "offset": 9
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 10,
                  "offset": 9
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 10,
              "offset": 9
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Guide"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "guideX",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".guideX"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Creates a horizontal guide line at the current spread and current layer.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 73,
                  "offset": 72
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 73,
              "offset": 72
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 73,
          "offset": 72
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "guideY"
      },
      {
        "title": "param",
        "description": "Position of the new guide",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "y"
      },
      {
        "title": "return",
        "description": "New guide",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Guide"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2085,
        "column": 0
      },
      "end": {
        "line": 2092,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2093,
          "column": 0
        },
        "end": {
          "line": 2101,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "guideY",
    "params": [
      {
        "name": "y",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Position of the new guide",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 26,
                  "offset": 25
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 26,
              "offset": 25
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "New guide",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 10,
                      "offset": 9
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 10,
                  "offset": 9
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 10,
              "offset": 9
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Guide"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "guideY",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".guideY"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets the margins of a given page. If 1 value is given, all 4 sides are set equally. If 4 values are given, the current page will be adjusted. Adding a 5th value will set the margin of a given page. Calling the function without any values, will return the margins for the current page.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 285,
                  "offset": 284
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 285,
              "offset": 284
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 285,
          "offset": 284
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Page",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "margins"
      },
      {
        "title": "param",
        "description": "Top margin or all if only one",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "top"
      },
      {
        "title": "param",
        "description": "Right margin",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "right"
      },
      {
        "title": "param",
        "description": "Bottom margin",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "bottom"
      },
      {
        "title": "param",
        "description": "Left margin",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "left"
      },
      {
        "title": "param",
        "description": "Sets margins to selected page, currentPage() if left blank",
        "lineNumber": 10,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "pageNumber"
      },
      {
        "title": "return",
        "description": "Current page margins with these properties: top, right, bottom, left",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2103,
        "column": 0
      },
      "end": {
        "line": 2115,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2116,
          "column": 0
        },
        "end": {
          "line": 2142,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "margins",
    "params": [
      {
        "name": "top",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Top margin or all if only one",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 30,
              "offset": 29
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      },
      {
        "name": "right",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Right margin",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 13,
                      "offset": 12
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 13,
                  "offset": 12
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 13,
              "offset": 12
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      },
      {
        "name": "bottom",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Bottom margin",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 14,
              "offset": 13
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      },
      {
        "name": "left",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Left margin",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 12,
                      "offset": 11
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 12,
                  "offset": 11
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 12,
              "offset": 11
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      },
      {
        "name": "pageNumber",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Sets margins to selected page, currentPage() if left blank",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 59,
                      "offset": 58
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 59,
                  "offset": 58
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 59,
              "offset": 58
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Current page margins with these properties: top, right, bottom, left",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 69,
              "offset": 68
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "margins",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".margins"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets the document bleeds. If one value is given, all 4 are set equally. If 4 values are given, the top/right/bottom/left document bleeds will be adjusted. Calling the function without any values, will return the document bleed settings.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 237,
                  "offset": 236
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 237,
              "offset": 236
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 237,
          "offset": 236
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Page",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "bleeds"
      },
      {
        "title": "param",
        "description": "Top bleed or all if only one",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "top"
      },
      {
        "title": "param",
        "description": "Right bleed",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "right"
      },
      {
        "title": "param",
        "description": "Bottom bleed",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "bottom"
      },
      {
        "title": "param",
        "description": "Left bleed",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "left"
      }
    ],
    "loc": {
      "start": {
        "line": 2144,
        "column": 0
      },
      "end": {
        "line": 2154,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2155,
          "column": 0
        },
        "end": {
          "line": 2174,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "bleeds",
    "params": [
      {
        "name": "top",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Top bleed or all if only one",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      },
      {
        "name": "right",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Right bleed",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 12,
                      "offset": 11
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 12,
                  "offset": 11
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 12,
              "offset": 11
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      },
      {
        "name": "bottom",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Bottom bleed",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 13,
                      "offset": 12
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 13,
                  "offset": 12
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 13,
              "offset": 12
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      },
      {
        "name": "left",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Left bleed",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 11,
                  "offset": 10
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 11,
              "offset": 10
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "bleeds",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".bleeds"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Prints out all properties and values off an object in a recursive manner to the console. Useful for inspecting (or debugging) nested variable. the default value for the recursion is maxlevel = 2.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 196,
                  "offset": 195
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 196,
              "offset": 195
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 196,
          "offset": 195
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Output",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "inspect"
      },
      {
        "title": "param",
        "description": ": the Object to inspect",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "obj"
      },
      {
        "title": "param",
        "description": "Optional: recursion limit, default maxlevel = 2",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "maxlevel"
      }
    ],
    "loc": {
      "start": {
        "line": 2177,
        "column": 0
      },
      "end": {
        "line": 2184,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2185,
          "column": 0
        },
        "end": {
          "line": 2231,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "inspect",
    "params": [
      {
        "name": "obj",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": ": the Object to inspect",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 24,
                  "offset": 23
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 24,
              "offset": 23
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "name": "maxlevel",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Optional: recursion limit, default maxlevel = 2",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 48,
                      "offset": 47
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 48,
                  "offset": 47
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 48,
              "offset": 47
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "level",
        "lineNumber": 2185
      },
      {
        "title": "param",
        "name": "propname",
        "lineNumber": 2185
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "inspect",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".inspect"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The year() function returns the current year as an integer (2012, 2013 etc).",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 77,
                  "offset": 76
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 77,
              "offset": 76
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 77,
          "offset": 76
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Environment",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Date",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "year"
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2237,
        "column": 0
      },
      "end": {
        "line": 2244,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2245,
          "column": 0
        },
        "end": {
          "line": 2247,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "year",
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "year",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".year"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The month() function returns the current month as a value from 1 - 12.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 71,
                  "offset": 70
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 71,
              "offset": 70
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 71,
          "offset": 70
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Environment",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Date",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "month"
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2249,
        "column": 0
      },
      "end": {
        "line": 2256,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2257,
          "column": 0
        },
        "end": {
          "line": 2259,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "month",
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "month",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".month"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The day() function returns the current day as a value from 1 - 31.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 67,
                  "offset": 66
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 67,
              "offset": 66
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 67,
          "offset": 66
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Environment",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Date",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "day"
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2261,
        "column": 0
      },
      "end": {
        "line": 2268,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2269,
          "column": 0
        },
        "end": {
          "line": 2271,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "day",
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "day",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".day"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The weekday() function returns the current weekday as a string from Sunday, Monday, Tuesday...",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 95,
                  "offset": 94
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 95,
              "offset": 94
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 95,
          "offset": 94
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Environment",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Date",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "weekday"
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2273,
        "column": 0
      },
      "end": {
        "line": 2280,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2281,
          "column": 0
        },
        "end": {
          "line": 2284,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "weekday",
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "weekday",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".weekday"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The hour() function returns the current hour as a value from 0 - 23.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 69,
              "offset": 68
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 69,
          "offset": 68
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Environment",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Date",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "hour"
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2286,
        "column": 0
      },
      "end": {
        "line": 2293,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2294,
          "column": 0
        },
        "end": {
          "line": 2296,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "hour",
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "hour",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".hour"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The minute() function returns the current minute as a value from 0 - 59.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 73,
                  "offset": 72
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 73,
              "offset": 72
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 73,
          "offset": 72
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Environment",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Date",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "minute"
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2298,
        "column": 0
      },
      "end": {
        "line": 2305,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2306,
          "column": 0
        },
        "end": {
          "line": 2308,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "minute",
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "minute",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".minute"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The second() function returns the current second as a value from 0 - 59.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 73,
                  "offset": 72
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 73,
              "offset": 72
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 73,
          "offset": 72
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Environment",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Date",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "second"
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2310,
        "column": 0
      },
      "end": {
        "line": 2317,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2318,
          "column": 0
        },
        "end": {
          "line": 2320,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "second",
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "second",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".second"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the number of milliseconds (thousandths of a second) since starting an applet.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 87,
                  "offset": 86
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 87,
              "offset": 86
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 87,
          "offset": 86
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Environment",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Date",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "millis"
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2322,
        "column": 0
      },
      "end": {
        "line": 2329,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2330,
          "column": 0
        },
        "end": {
          "line": 2332,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "millis",
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "millis",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".millis"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The millisecond() function differs from millis(), in that it returns the exact millisecond (thousandths of a second) of the current time.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 138,
                  "offset": 137
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 138,
              "offset": 137
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 138,
          "offset": 137
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Environment",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Date",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "millisecond"
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2334,
        "column": 0
      },
      "end": {
        "line": 2341,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2342,
          "column": 0
        },
        "end": {
          "line": 2344,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "millisecond",
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "millisecond",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".millisecond"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The timestamp() function returns the current date formatted as YYYYMMDD_HHMMSS for useful unique filenaming.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 109,
                  "offset": 108
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 109,
              "offset": 108
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 109,
          "offset": 108
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Environment",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Date",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "timestamp"
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2346,
        "column": 0
      },
      "end": {
        "line": 2353,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2354,
          "column": 0
        },
        "end": {
          "line": 2364,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "timestamp",
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "timestamp",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".timestamp"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Function parses and validates a string as JSON-object. Usage:\nvar obj = b.JSON.decode(str);\nvar str = b.JSON.encode(obj);",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 30,
                  "offset": 121
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 30,
              "offset": 121
            },
            "indent": [
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 30,
          "offset": 121
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 5
      },
      {
        "title": "subcat",
        "description": "JSON",
        "lineNumber": 6
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 7,
        "name": "JSON.decode"
      },
      {
        "title": "param",
        "description": "to be parsed as JSON-object.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "String"
      },
      {
        "title": "return",
        "description": "Returns JSON-object or throws an error if invalid JSON has been provided.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2372,
        "column": 2
      },
      "end": {
        "line": 2382,
        "column": 4
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2384,
          "column": 2
        },
        "end": {
          "line": 2401,
          "column": 3
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "JSON.decode",
    "params": [
      {
        "name": "String",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "to be parsed as JSON-object.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Returns JSON-object or throws an error if invalid JSON has been provided.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 74,
                      "offset": 73
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 74,
                  "offset": 73
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 74,
              "offset": 73
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "memberof": "pub.JSON",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "JSON.decode",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".JSON.decode"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Function convert an javascript object to a JSON-string. Usage:\nvar str = b.JSON.encode(obj);\nvar obj = b.JSON.decode(str);",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 30,
                  "offset": 122
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 30,
              "offset": 122
            },
            "indent": [
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 30,
          "offset": 122
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 5
      },
      {
        "title": "subcat",
        "description": "JSON",
        "lineNumber": 6
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 7,
        "name": "JSON.encode"
      },
      {
        "title": "param",
        "description": "to be converted to a JSON-string",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "Object"
      },
      {
        "title": "return",
        "description": "Returns JSON-string",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2402,
        "column": 2
      },
      "end": {
        "line": 2412,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2414,
          "column": 2
        },
        "end": {
          "line": 2434,
          "column": 3
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "JSON.encode",
    "params": [
      {
        "name": "Object",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "to be converted to a JSON-string",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Returns JSON-string",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "memberof": "pub.JSON",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "JSON.encode",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".JSON.encode"
  },
  {
    "description": "",
    "tags": [
      {
        "title": "class",
        "description": null,
        "lineNumber": 0,
        "type": null,
        "name": "b"
      }
    ],
    "loc": {
      "start": {
        "line": 2599,
        "column": 0
      },
      "end": {
        "line": 2599,
        "column": 16
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2616,
          "column": 0
        },
        "end": {
          "line": 2629,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "class",
    "name": "b",
    "params": [
      {
        "title": "param",
        "name": "num",
        "lineNumber": 2616
      },
      {
        "title": "param",
        "name": "numBits",
        "lineNumber": 2616
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "b",
        "kind": "class",
        "scope": "static"
      }
    ],
    "namespace": ".b"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Converts a byte, char, int, or color to a String containing the\nequivalent binary notation. For example color(0, 102, 153, 255)\nwill convert to the String \"11111111000000000110011010011001\". This\nfunction can help make your geeky debugging sessions much happier.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 4,
                  "column": 67,
                  "offset": 262
                },
                "indent": [
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 4,
              "column": 67,
              "offset": 262
            },
            "indent": [
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 4,
          "column": 67,
          "offset": 262
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 7
      },
      {
        "title": "subcat",
        "description": "Conversion",
        "lineNumber": 8
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 9,
        "name": "binary"
      },
      {
        "title": "param",
        "description": "value to convert",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "num"
      },
      {
        "title": "param",
        "description": "number of digits to return",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "numBits"
      },
      {
        "title": "return",
        "description": "A formatted string",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2601,
        "column": 0
      },
      "end": {
        "line": 2614,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2616,
          "column": 0
        },
        "end": {
          "line": 2629,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "binary",
    "params": [
      {
        "name": "num",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "value to convert",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "numBits",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "number of digits to return",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A formatted string",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "binary",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".binary"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Converts a String representation of a binary number to its\nequivalent integer value. For example, unbinary(\"00001000\") will\nreturn 8.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 10,
                  "offset": 133
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 10,
              "offset": 133
            },
            "indent": [
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 10,
          "offset": 133
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 5
      },
      {
        "title": "subcat",
        "description": "Conversion",
        "lineNumber": 6
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 7,
        "name": "unbinary"
      },
      {
        "title": "param",
        "description": "value to convert",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "binaryString"
      },
      {
        "title": "return",
        "description": "The integer representation",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2631,
        "column": 0
      },
      "end": {
        "line": 2641,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2643,
          "column": 0
        },
        "end": {
          "line": 2654,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "unbinary",
    "params": [
      {
        "name": "binaryString",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "value to convert",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The integer representation",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "unbinary",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".unbinary"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Convert a number to a hex representation.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 42,
              "offset": 41
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 42,
          "offset": 41
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Conversion",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "hex"
      },
      {
        "title": "param",
        "description": "The number to convert",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "value"
      },
      {
        "title": "param",
        "description": "The length of the hex number to be created, default: 8",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "len"
      },
      {
        "title": "return",
        "description": "The hex representation as a string",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2666,
        "column": 0
      },
      "end": {
        "line": 2675,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2676,
          "column": 0
        },
        "end": {
          "line": 2679,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "hex",
    "params": [
      {
        "name": "value",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The number to convert",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "len",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The length of the hex number to be created, default: 8",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 55,
                      "offset": 54
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 55,
                  "offset": 54
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 55,
              "offset": 54
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The hex representation as a string",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 35,
                  "offset": 34
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 35,
              "offset": 34
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "hex",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".hex"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Convert a hex representation to a number.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 42,
              "offset": 41
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 42,
          "offset": 41
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Conversion",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "unhex"
      },
      {
        "title": "param",
        "description": "The hex representation",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "hex"
      },
      {
        "title": "return",
        "description": "The number",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2687,
        "column": 0
      },
      "end": {
        "line": 2695,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2696,
          "column": 0
        },
        "end": {
          "line": 2703,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "unhex",
    "params": [
      {
        "name": "hex",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The hex representation",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The number",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 11,
                  "offset": 10
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 11,
              "offset": 10
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "unhex",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".unhex"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Removes multiple, leading or trailing spaces and punctuation from \"words\". E.g. converts \"word!\" to \"word\". Especially useful together with b.words();",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 151,
                  "offset": 150
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 151,
              "offset": 150
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 151,
          "offset": 150
        }
      }
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 3,
        "name": "trimWord"
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 4
      },
      {
        "title": "subcat",
        "description": "String Functions",
        "lineNumber": 5
      },
      {
        "title": "param",
        "description": "The String to trim",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "s"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 7,
        "type": null,
        "errors": [
          "Braces are not balanced",
          "Missing or invalid tag name"
        ],
        "name": null
      }
    ],
    "loc": {
      "start": {
        "line": 2710,
        "column": 0
      },
      "end": {
        "line": 2718,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2720,
          "column": 0
        },
        "end": {
          "line": 2726,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "trimWord",
    "params": [
      {
        "name": "s",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The String to trim",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "trimWord",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".trimWord"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Combines an array of Strings into one String, each separated by\nthe character(s) used for the separator parameter. To join arrays\nof ints or floats, it's necessary to first convert them to strings\nusing nf() or nfs().",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 4,
                  "column": 21,
                  "offset": 217
                },
                "indent": [
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 4,
              "column": 21,
              "offset": 217
            },
            "indent": [
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 4,
          "column": 21,
          "offset": 217
        }
      }
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "join"
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 7
      },
      {
        "title": "subcat",
        "description": "String Functions",
        "lineNumber": 8
      },
      {
        "title": "param",
        "description": "A string array",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Array"
        },
        "name": "array"
      },
      {
        "title": "param",
        "description": "The separator to be inserted",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "separator"
      },
      {
        "title": "return",
        "description": "The joined string",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2728,
        "column": 0
      },
      "end": {
        "line": 2740,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2742,
          "column": 0
        },
        "end": {
          "line": 2744,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "join",
    "params": [
      {
        "name": "array",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A string array",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 15,
                      "offset": 14
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 15,
                  "offset": 14
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 15,
              "offset": 14
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      },
      {
        "name": "separator",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The separator to be inserted",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The joined string",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "join",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".join"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The split() function breaks a string into pieces using a\ncharacter or string as the divider. The delim parameter specifies the\ncharacter or characters that mark the boundaries between each piece. A\nString[] array is returned that contains each of the pieces.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 4,
                  "column": 61,
                  "offset": 258
                },
                "indent": [
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 4,
              "column": 61,
              "offset": 258
            },
            "indent": [
              1,
              1,
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "If the result is a set of numbers, you can convert the String[] array\nto to a float[] or int[] array using the datatype conversion functions\nint() and float() (see example above).",
              "position": {
                "start": {
                  "line": 6,
                  "column": 1,
                  "offset": 260
                },
                "end": {
                  "line": 8,
                  "column": 39,
                  "offset": 439
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 6,
              "column": 1,
              "offset": 260
            },
            "end": {
              "line": 8,
              "column": 39,
              "offset": 439
            },
            "indent": [
              1,
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The splitTokens() function works in a similar fashion, except that it\nsplits using a range of characters instead of a specific character or\nsequence.",
              "position": {
                "start": {
                  "line": 10,
                  "column": 1,
                  "offset": 441
                },
                "end": {
                  "line": 12,
                  "column": 10,
                  "offset": 590
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 10,
              "column": 1,
              "offset": 441
            },
            "end": {
              "line": 12,
              "column": 10,
              "offset": 590
            },
            "indent": [
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 12,
          "column": 10,
          "offset": 590
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 14
      },
      {
        "title": "subcat",
        "description": "String Functions",
        "lineNumber": 15
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 16,
        "name": "split"
      },
      {
        "title": "param",
        "description": "the String to be split",
        "lineNumber": 17,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "str"
      },
      {
        "title": "param",
        "description": "The string used to separate the data",
        "lineNumber": 18,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        },
        "name": "delim"
      },
      {
        "title": "return",
        "description": "Array of strings",
        "lineNumber": 19,
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2746,
        "column": 0
      },
      "end": {
        "line": 2766,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2768,
          "column": 0
        },
        "end": {
          "line": 2770,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "split",
    "params": [
      {
        "name": "str",
        "lineNumber": 17,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "the String to be split",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      },
      {
        "name": "delim",
        "lineNumber": 18,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The string used to separate the data",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 37,
                      "offset": 36
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 37,
                  "offset": 36
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 37,
              "offset": 36
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Array of strings",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "split",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".split"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The splitTokens() function splits a String at one or many character\n\"tokens.\" The tokens parameter specifies the character or characters\nto be used as a boundary.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 26,
                  "offset": 162
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 26,
              "offset": 162
            },
            "indent": [
              1,
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "If no tokens character is specified, any whitespace character is used\nto split. Whitespace characters include tab (\\t), line feed (\\n),\ncarriage return (\\r), form feed (\\f), and space. To convert a String\nto an array of integers or floats, use the datatype conversion functions\nint() and float() to convert the array of Strings.",
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 164
                },
                "end": {
                  "line": 9,
                  "column": 51,
                  "offset": 492
                },
                "indent": [
                  1,
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 5,
              "column": 1,
              "offset": 164
            },
            "end": {
              "line": 9,
              "column": 51,
              "offset": 492
            },
            "indent": [
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 9,
          "column": 51,
          "offset": 492
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 11
      },
      {
        "title": "subcat",
        "description": "String Functions",
        "lineNumber": 12
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 13,
        "name": "splitTokens"
      },
      {
        "title": "param",
        "description": "the String to be split",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "str"
      },
      {
        "title": "param",
        "description": "list of individual characters that will be used as separators",
        "lineNumber": 15,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        },
        "name": "tokens"
      },
      {
        "title": "return",
        "description": "Array of strings",
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2772,
        "column": 0
      },
      "end": {
        "line": 2789,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2791,
          "column": 0
        },
        "end": {
          "line": 2809,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "splitTokens",
    "params": [
      {
        "name": "str",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "the String to be split",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      },
      {
        "name": "tokens",
        "lineNumber": 15,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "list of individual characters that will be used as separators",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 62,
                      "offset": 61
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 62,
                  "offset": 61
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 62,
              "offset": 61
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Array of strings",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "splitTokens",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".splitTokens"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Utility function for formatting numbers into strings. There\nare two versions, one for formatting floats and one for formatting\nints. The values for the digits, left, and right parameters should\nalways be positive integers.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 4,
                  "column": 29,
                  "offset": 222
                },
                "indent": [
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 4,
              "column": 29,
              "offset": 222
            },
            "indent": [
              1,
              1,
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "As shown in the above example, nf() is used to add zeros to the\nleft and/or right of a number. This is typically for aligning a list\nof numbers. To remove digits from a floating-point number, use the\nint(), ceil(), floor(), or round() functions.",
              "position": {
                "start": {
                  "line": 6,
                  "column": 1,
                  "offset": 224
                },
                "end": {
                  "line": 9,
                  "column": 46,
                  "offset": 469
                },
                "indent": [
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 6,
              "column": 1,
              "offset": 224
            },
            "end": {
              "line": 9,
              "column": 46,
              "offset": 469
            },
            "indent": [
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 9,
          "column": 46,
          "offset": 469
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 11
      },
      {
        "title": "subcat",
        "description": "String Functions",
        "lineNumber": 12
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 13,
        "name": "nf"
      },
      {
        "title": "param",
        "description": "The Number to convert",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "value"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "leftDigits"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "rightDigits"
      },
      {
        "title": "return",
        "description": "The formatted string",
        "lineNumber": 17,
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2873,
        "column": 0
      },
      "end": {
        "line": 2891,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2893,
          "column": 0
        },
        "end": {
          "line": 2895,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "nf",
    "params": [
      {
        "name": "value",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The Number to convert",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "leftDigits",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "rightDigits",
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The formatted string",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "nf",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".nf"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Utility function for formatting numbers into strings. Similar to nf()\nbut leaves a blank space in front of positive numbers so they align\nwith negative numbers in spite of the minus symbol. There are two\nversions, one for formatting floats and one for formatting ints. The\nvalues for the digits, left, and right parameters should always be\npositive integers.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 6,
                  "column": 19,
                  "offset": 358
                },
                "indent": [
                  1,
                  1,
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 6,
              "column": 19,
              "offset": 358
            },
            "indent": [
              1,
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 6,
          "column": 19,
          "offset": 358
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 8
      },
      {
        "title": "subcat",
        "description": "String Functions",
        "lineNumber": 9
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 10,
        "name": "nfs"
      },
      {
        "title": "param",
        "description": "The Number to convert",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "value"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "leftDigits"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "rightDigits"
      },
      {
        "title": "return",
        "description": "The formatted string",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2897,
        "column": 0
      },
      "end": {
        "line": 2912,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2914,
          "column": 0
        },
        "end": {
          "line": 2916,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "nfs",
    "params": [
      {
        "name": "value",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The Number to convert",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "leftDigits",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "rightDigits",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The formatted string",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "nfs",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".nfs"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Utility function for formatting numbers into strings. Similar to nf()\nbut puts a \"+\" in front of positive numbers and a \"-\" in front of\nnegative numbers. There are two versions, one for formatting floats\nand one for formatting ints. The values for the digits, left, and right\nparameters should always be positive integers.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 5,
                  "column": 47,
                  "offset": 322
                },
                "indent": [
                  1,
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 5,
              "column": 47,
              "offset": 322
            },
            "indent": [
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 5,
          "column": 47,
          "offset": 322
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 7
      },
      {
        "title": "subcat",
        "description": "String Functions",
        "lineNumber": 8
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 9,
        "name": "nfp"
      },
      {
        "title": "param",
        "description": "The Number to convert",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "value"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "leftDigits"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "rightDigits"
      },
      {
        "title": "return",
        "description": "The formatted string",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2918,
        "column": 0
      },
      "end": {
        "line": 2932,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2934,
          "column": 0
        },
        "end": {
          "line": 2936,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "nfp",
    "params": [
      {
        "name": "value",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The Number to convert",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "leftDigits",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "rightDigits",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The formatted string",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "nfp",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".nfp"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Utility function for formatting numbers into strings and placing\nappropriate commas to mark units of 1000. There are two versions, one\nfor formatting ints and one for formatting an array of ints. The value\nfor the digits parameter should always be a positive integer.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 4,
                  "column": 62,
                  "offset": 267
                },
                "indent": [
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 4,
              "column": 62,
              "offset": 267
            },
            "indent": [
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 4,
          "column": 62,
          "offset": 267
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 6
      },
      {
        "title": "subcat",
        "description": "String Functions",
        "lineNumber": 7
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 8,
        "name": "nfc"
      },
      {
        "title": "param",
        "description": "The Number to convert",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "value"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "leftDigits"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "rightDigits"
      },
      {
        "title": "return",
        "description": "The formatted string",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2938,
        "column": 0
      },
      "end": {
        "line": 2951,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2953,
          "column": 0
        },
        "end": {
          "line": 2955,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "nfc",
    "params": [
      {
        "name": "value",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The Number to convert",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "leftDigits",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "rightDigits",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The formatted string",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "nfc",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".nfc"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Removes whitespace characters from the beginning and end of a String.\nIn addition to standard whitespace characters such as space, carriage\nreturn, and tab, this function also removes the Unicode \"nbsp\" character.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 74,
                  "offset": 213
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 74,
              "offset": 213
            },
            "indent": [
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 74,
          "offset": 213
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 5
      },
      {
        "title": "subcat",
        "description": "String Functions",
        "lineNumber": 6
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 7,
        "name": "trim"
      },
      {
        "title": "param",
        "description": "A string or an array of strings to be trimmed",
        "lineNumber": 8,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            }
          ]
        },
        "name": "str"
      },
      {
        "title": "return",
        "description": "Returns the input in a trimmed way",
        "lineNumber": 9,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2958,
        "column": 0
      },
      "end": {
        "line": 2968,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2970,
          "column": 0
        },
        "end": {
          "line": 2977,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "trim",
    "params": [
      {
        "name": "str",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A string or an array of strings to be trimmed",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 46,
                      "offset": 45
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 46,
                  "offset": 45
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 46,
              "offset": 45
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            }
          ]
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Returns the input in a trimmed way",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 35,
                  "offset": 34
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 35,
              "offset": 34
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            }
          ]
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "trim",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".trim"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Executes a shell command and returns the result, currently Mac only.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 69,
              "offset": 68
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "BE CAREFUL!",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 70
                },
                "end": {
                  "line": 3,
                  "column": 12,
                  "offset": 81
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 70
            },
            "end": {
              "line": 3,
              "column": 12,
              "offset": 81
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 12,
          "offset": 81
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 5
      },
      {
        "title": "subcat",
        "description": "Input",
        "lineNumber": 6
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 7,
        "name": "shellExecute"
      },
      {
        "title": "param",
        "description": "The shell command to execute",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "cmd"
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3168,
        "column": 0
      },
      "end": {
        "line": 3178,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3179,
          "column": 0
        },
        "end": {
          "line": 3189,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "shellExecute",
    "params": [
      {
        "name": "cmd",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The shell command to execute",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "shellExecute",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".shellExecute"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Reads the contents of a file or loads an URL into a String.\nIf the file is specified by name as String, it must be located in the document's data directory.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 97,
                  "offset": 156
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 97,
              "offset": 156
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 97,
          "offset": 156
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 4
      },
      {
        "title": "subcat",
        "description": "Input",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "loadString"
      },
      {
        "title": "param",
        "description": "The text file name in the document's data directory or a File instance or an URL",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "File"
            }
          ]
        },
        "name": "fileOrString"
      },
      {
        "title": "return",
        "description": "String file or URL content.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3191,
        "column": 0
      },
      "end": {
        "line": 3200,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3201,
          "column": 0
        },
        "end": {
          "line": 3212,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "loadString",
    "params": [
      {
        "name": "fileOrString",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The text file name in the document's data directory or a File instance or an URL",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 81,
                      "offset": 80
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 81,
                  "offset": 80
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 81,
              "offset": 80
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "File"
            }
          ]
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "String file or URL content.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "loadString",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".loadString"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Reads the contents of a file or loads an URL and creates a String array of its individual lines.\nIf the file is specified by name as String, it must be located in the document's data directory.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 97,
                  "offset": 193
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 97,
              "offset": 193
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 97,
          "offset": 193
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 4
      },
      {
        "title": "subcat",
        "description": "Input",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "loadStrings"
      },
      {
        "title": "param",
        "description": "The text file name in the document's data directory or a File instance or an URL",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "File"
            }
          ]
        },
        "name": "file"
      },
      {
        "title": "return",
        "description": "Array of the individual lines in the given File or URL",
        "lineNumber": 8,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3226,
        "column": 0
      },
      "end": {
        "line": 3235,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3236,
          "column": 0
        },
        "end": {
          "line": 3250,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "loadStrings",
    "params": [
      {
        "name": "file",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The text file name in the document's data directory or a File instance or an URL",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 81,
                      "offset": 80
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 81,
                  "offset": 80
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 81,
              "offset": 80
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "File"
            }
          ]
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Array of the individual lines in the given File or URL",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 55,
                      "offset": 54
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 55,
                  "offset": 54
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 55,
              "offset": 54
            }
          }
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "loadStrings",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".loadStrings"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Prints a message to the console output in the ExtendScript editor, but unlike b.println() it doesn't return the carriage to a new line at the end.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 147,
                  "offset": 146
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 147,
              "offset": 146
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 147,
          "offset": 146
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Output",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "print"
      },
      {
        "title": "param",
        "description": "The message to print",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "msg"
      }
    ],
    "loc": {
      "start": {
        "line": 3269,
        "column": 0
      },
      "end": {
        "line": 3275,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3276,
          "column": 0
        },
        "end": {
          "line": 3280,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "print",
    "params": [
      {
        "name": "msg",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The message to print",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "print",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".print"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Print numerous information about the current environment to the console",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 72,
                  "offset": 71
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 72,
              "offset": 71
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 72,
          "offset": 71
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Output",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "printInfo"
      }
    ],
    "loc": {
      "start": {
        "line": 3282,
        "column": 0
      },
      "end": {
        "line": 3287,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3288,
          "column": 0
        },
        "end": {
          "line": 3298,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "printInfo",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "printInfo",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".printInfo"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Writes an array of strings to a file, one line per string.\nIf the given file exists it gets overridden.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 45,
                  "offset": 103
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 45,
              "offset": 103
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 45,
          "offset": 103
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Output",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "saveStrings"
      },
      {
        "title": "param",
        "description": "The file name or a File instance",
        "lineNumber": 6,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "File"
            }
          ]
        },
        "name": "file"
      },
      {
        "title": "param",
        "description": "The string array to be written",
        "lineNumber": 7,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        },
        "name": "strings"
      }
    ],
    "loc": {
      "start": {
        "line": 3300,
        "column": 0
      },
      "end": {
        "line": 3308,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3309,
          "column": 0
        },
        "end": {
          "line": 3316,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "saveStrings",
    "params": [
      {
        "name": "file",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The file name or a File instance",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "File"
            }
          ]
        }
      },
      {
        "name": "strings",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The string array to be written",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 31,
              "offset": 30
            }
          }
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "saveStrings",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".saveStrings"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Writes a string to a file.\nIf the given file exists it gets overridden.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 45,
                  "offset": 71
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 45,
              "offset": 71
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 45,
          "offset": 71
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Output",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "saveString"
      },
      {
        "title": "param",
        "description": "The file name or a File instance",
        "lineNumber": 6,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "File"
            }
          ]
        },
        "name": "file"
      },
      {
        "title": "param",
        "description": "The string to be written",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "string"
      }
    ],
    "loc": {
      "start": {
        "line": 3318,
        "column": 0
      },
      "end": {
        "line": 3326,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3327,
          "column": 0
        },
        "end": {
          "line": 3332,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "saveString",
    "params": [
      {
        "name": "file",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The file name or a File instance",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "File"
            }
          ]
        }
      },
      {
        "name": "string",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The string to be written",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "saveString",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".saveString"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Exports the current document as PDF to the documents folder. Please note, that export options default to the last used export settings.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 136,
                  "offset": 135
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 136,
              "offset": 135
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 136,
          "offset": 135
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Output",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "savePDF"
      },
      {
        "title": "param",
        "description": "The file name or a File instance",
        "lineNumber": 5,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "File"
            }
          ]
        },
        "name": "file"
      },
      {
        "title": "param",
        "description": "Whether to show the export dialog",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Boolean"
          }
        },
        "name": "showOptions"
      }
    ],
    "loc": {
      "start": {
        "line": 3335,
        "column": 0
      },
      "end": {
        "line": 3342,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3343,
          "column": 0
        },
        "end": {
          "line": 3347,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "savePDF",
    "params": [
      {
        "name": "file",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The file name or a File instance",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "File"
            }
          ]
        }
      },
      {
        "name": "showOptions",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Whether to show the export dialog",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 34,
                      "offset": 33
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 34,
                  "offset": 33
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 34,
              "offset": 33
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Boolean"
          }
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "savePDF",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".savePDF"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Exports the current document as PNG (or sequence of PNG files) to the documents folder. Please note, that export options default to the last used export settings.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 163,
                  "offset": 162
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 163,
              "offset": 162
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 163,
          "offset": 162
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Output",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "savePNG"
      },
      {
        "title": "param",
        "description": "The file name or a File instance",
        "lineNumber": 5,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "File"
            }
          ]
        },
        "name": "file"
      },
      {
        "title": "param",
        "description": "Whether to show the export dialog",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Boolean"
          }
        },
        "name": "showOptions"
      }
    ],
    "loc": {
      "start": {
        "line": 3349,
        "column": 0
      },
      "end": {
        "line": 3356,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3357,
          "column": 0
        },
        "end": {
          "line": 3361,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "savePNG",
    "params": [
      {
        "name": "file",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The file name or a File instance",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "File"
            }
          ]
        }
      },
      {
        "name": "showOptions",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Whether to show the export dialog",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 34,
                      "offset": 33
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 34,
                  "offset": 33
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 34,
              "offset": 33
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Boolean"
          }
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "savePNG",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".savePNG"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Downloads an URL to a file, currently Mac only.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 48,
                  "offset": 47
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 48,
              "offset": 47
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 48,
          "offset": 47
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Output",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "download"
      },
      {
        "title": "param",
        "description": "The download url",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "url"
      },
      {
        "title": "param",
        "description": "A relative file path in the project folder or a File instance",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "String"
              },
              {
                "type": "NameExpression",
                "name": "File"
              }
            ]
          }
        },
        "name": "file"
      }
    ],
    "loc": {
      "start": {
        "line": 3363,
        "column": 0
      },
      "end": {
        "line": 3370,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3371,
          "column": 0
        },
        "end": {
          "line": 3458,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "download",
    "params": [
      {
        "name": "url",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The download url",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      },
      {
        "name": "file",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A relative file path in the project folder or a File instance",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 62,
                      "offset": 61
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 62,
                  "offset": 61
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 62,
              "offset": 61
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "String"
              },
              {
                "type": "NameExpression",
                "name": "File"
              }
            ]
          }
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "download",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".download"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Draws an ellipse (oval) in the display window. An ellipse with an equal ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 73,
                  "offset": 72
                },
                "indent": []
              }
            },
            {
              "type": "html",
              "value": "<b>",
              "position": {
                "start": {
                  "line": 1,
                  "column": 73,
                  "offset": 72
                },
                "end": {
                  "line": 1,
                  "column": 76,
                  "offset": 75
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "width",
              "position": {
                "start": {
                  "line": 1,
                  "column": 76,
                  "offset": 75
                },
                "end": {
                  "line": 1,
                  "column": 81,
                  "offset": 80
                },
                "indent": []
              }
            },
            {
              "type": "html",
              "value": "</b>",
              "position": {
                "start": {
                  "line": 1,
                  "column": 81,
                  "offset": 80
                },
                "end": {
                  "line": 1,
                  "column": 85,
                  "offset": 84
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 85,
                  "offset": 84
                },
                "end": {
                  "line": 1,
                  "column": 90,
                  "offset": 89
                },
                "indent": []
              }
            },
            {
              "type": "html",
              "value": "<b>",
              "position": {
                "start": {
                  "line": 1,
                  "column": 90,
                  "offset": 89
                },
                "end": {
                  "line": 1,
                  "column": 93,
                  "offset": 92
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "height",
              "position": {
                "start": {
                  "line": 1,
                  "column": 93,
                  "offset": 92
                },
                "end": {
                  "line": 1,
                  "column": 99,
                  "offset": 98
                },
                "indent": []
              }
            },
            {
              "type": "html",
              "value": "</b>",
              "position": {
                "start": {
                  "line": 1,
                  "column": 99,
                  "offset": 98
                },
                "end": {
                  "line": 1,
                  "column": 103,
                  "offset": 102
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " is a circle.\nThe first two parameters set the location, the third sets the width, and the fourth sets the height.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 103,
                  "offset": 102
                },
                "end": {
                  "line": 2,
                  "column": 101,
                  "offset": 216
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 101,
              "offset": 216
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 101,
          "offset": 216
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 4
      },
      {
        "title": "subcat",
        "description": "Primitives",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "ellipse"
      },
      {
        "title": "param",
        "description": "Location X",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "x"
      },
      {
        "title": "param",
        "description": "Location Y",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "y"
      },
      {
        "title": "param",
        "description": "Width",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "w"
      },
      {
        "title": "param",
        "description": "Height",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "h"
      },
      {
        "title": "return",
        "description": "New oval (n.b. in Adobe Scripting the corresponding type is Oval, not Ellipse)",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Oval"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3465,
        "column": 0
      },
      "end": {
        "line": 3477,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3478,
          "column": 0
        },
        "end": {
          "line": 3526,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "ellipse",
    "params": [
      {
        "name": "x",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Location X",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 11,
                  "offset": 10
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 11,
              "offset": 10
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "y",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Location Y",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 11,
                  "offset": 10
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 11,
              "offset": 10
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "w",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Width",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 6,
                      "offset": 5
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 6,
              "offset": 5
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "h",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Height",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 7,
                      "offset": 6
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 7,
                  "offset": 6
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 7,
              "offset": 6
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "New oval (n.b. in Adobe Scripting the corresponding type is Oval, not Ellipse)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 79,
                      "offset": 78
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 79,
                  "offset": 78
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 79,
              "offset": 78
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Oval"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "ellipse",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".ellipse"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Draws a line (a direct path between two points) to the page.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 61,
                  "offset": 60
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 61,
              "offset": 60
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 61,
          "offset": 60
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Primitives",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "line"
      },
      {
        "title": "param",
        "description": "Point A x-value",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "x1"
      },
      {
        "title": "param",
        "description": "Point A y-value",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "y1"
      },
      {
        "title": "param",
        "description": "Point B x-value",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "x2"
      },
      {
        "title": "param",
        "description": "Point B y-value",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "y2"
      },
      {
        "title": "return",
        "description": "New GraphicLine",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "GraphicLine"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3528,
        "column": 0
      },
      "end": {
        "line": 3539,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3547,
          "column": 0
        },
        "end": {
          "line": 3563,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "line",
    "params": [
      {
        "name": "x1",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Point A x-value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 16,
                  "offset": 15
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 16,
              "offset": 15
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "y1",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Point A y-value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 16,
                  "offset": 15
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 16,
              "offset": 15
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "x2",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Point B x-value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 16,
                  "offset": 15
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 16,
              "offset": 15
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "y2",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Point B y-value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 16,
                  "offset": 15
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 16,
              "offset": 15
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "New GraphicLine",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 16,
                  "offset": 15
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 16,
              "offset": 15
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "GraphicLine"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "line",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".line"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Using the beginShape() and endShape() functions allow creating more complex forms.\nbeginShape() begins recording vertices for a shape and endShape() stops recording.\nAfter calling the beginShape() function, a series of vertex() commands must follow.\nTo stop drawing the shape, call endShape(). The value of the parameter tells whether the paths to\ncreate from the provided vertices have to be closed or not (to connect the beginning and the end).",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 5,
                  "column": 99,
                  "offset": 446
                },
                "indent": [
                  1,
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 5,
              "column": 99,
              "offset": 446
            },
            "indent": [
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 5,
          "column": 99,
          "offset": 446
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 7
      },
      {
        "title": "subcat",
        "description": "Primitives",
        "lineNumber": 8
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 9,
        "name": "beginShape"
      },
      {
        "title": "param",
        "description": "Set b.CLOSE if the new Path should be auto-closed.",
        "lineNumber": 10,
        "type": null,
        "name": "shapeMode"
      }
    ],
    "loc": {
      "start": {
        "line": 3565,
        "column": 0
      },
      "end": {
        "line": 3576,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3577,
          "column": 0
        },
        "end": {
          "line": 3586,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "beginShape",
    "params": [
      {
        "name": "shapeMode",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Set b.CLOSE if the new Path should be auto-closed.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 51,
                      "offset": 50
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 51,
                  "offset": 50
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 51,
              "offset": 50
            }
          }
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "beginShape",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".beginShape"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Shapes are constructed by connecting a series of vertices. vertex() is used to\nspecify the vertex coordinates lines and polygons. It is used exclusively within\nthe beginShape() and endShape() functions.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 43,
                  "offset": 202
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 43,
              "offset": 202
            },
            "indent": [
              1,
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Please use either vertex(x, y) or\nfor drawing bezier shapes vertex(x, y, xAnchorLeft, yAnchorLeft, xAnchorRight, yAnchorRight).\nYou can also mix the two approaches.",
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 204
                },
                "end": {
                  "line": 7,
                  "column": 37,
                  "offset": 368
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 5,
              "column": 1,
              "offset": 204
            },
            "end": {
              "line": 7,
              "column": 37,
              "offset": 368
            },
            "indent": [
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 7,
          "column": 37,
          "offset": 368
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 9
      },
      {
        "title": "subcat",
        "description": "Primitives",
        "lineNumber": 10
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 11,
        "name": "vertex"
      },
      {
        "title": "param",
        "description": "position x-value",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "x"
      },
      {
        "title": "param",
        "description": "position y-value",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "y"
      },
      {
        "title": "param",
        "description": "position xAnchorLeft-value",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "xAnchorLeft"
      },
      {
        "title": "param",
        "description": "position yAnchorLeft-value",
        "lineNumber": 15,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "yAnchorLeft"
      },
      {
        "title": "param",
        "description": "position xAnchorRight-value",
        "lineNumber": 16,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "xAnchorRight"
      },
      {
        "title": "param",
        "description": "position yAnchorRight-value",
        "lineNumber": 17,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "yAnchorRight"
      }
    ],
    "loc": {
      "start": {
        "line": 3588,
        "column": 0
      },
      "end": {
        "line": 3606,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3607,
          "column": 0
        },
        "end": {
          "line": 3622,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "vertex",
    "params": [
      {
        "name": "x",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "position x-value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "y",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "position y-value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "xAnchorLeft",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "position xAnchorLeft-value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      },
      {
        "name": "yAnchorLeft",
        "lineNumber": 15,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "position yAnchorLeft-value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      },
      {
        "name": "xAnchorRight",
        "lineNumber": 16,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "position xAnchorRight-value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      },
      {
        "name": "yAnchorRight",
        "lineNumber": 17,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "position yAnchorRight-value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "vertex",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".vertex"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The arc() function draws an arc in the display window.\nArcs are drawn along the outer edge of an ellipse defined by the\n",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 1,
                  "offset": 120
                },
                "indent": [
                  1,
                  1
                ]
              }
            },
            {
              "type": "html",
              "value": "<b>",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 120
                },
                "end": {
                  "line": 3,
                  "column": 4,
                  "offset": 123
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "x",
              "position": {
                "start": {
                  "line": 3,
                  "column": 4,
                  "offset": 123
                },
                "end": {
                  "line": 3,
                  "column": 5,
                  "offset": 124
                },
                "indent": []
              }
            },
            {
              "type": "html",
              "value": "</b>",
              "position": {
                "start": {
                  "line": 3,
                  "column": 5,
                  "offset": 124
                },
                "end": {
                  "line": 3,
                  "column": 9,
                  "offset": 128
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", ",
              "position": {
                "start": {
                  "line": 3,
                  "column": 9,
                  "offset": 128
                },
                "end": {
                  "line": 3,
                  "column": 11,
                  "offset": 130
                },
                "indent": []
              }
            },
            {
              "type": "html",
              "value": "<b>",
              "position": {
                "start": {
                  "line": 3,
                  "column": 11,
                  "offset": 130
                },
                "end": {
                  "line": 3,
                  "column": 14,
                  "offset": 133
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "y",
              "position": {
                "start": {
                  "line": 3,
                  "column": 14,
                  "offset": 133
                },
                "end": {
                  "line": 3,
                  "column": 15,
                  "offset": 134
                },
                "indent": []
              }
            },
            {
              "type": "html",
              "value": "</b>",
              "position": {
                "start": {
                  "line": 3,
                  "column": 15,
                  "offset": 134
                },
                "end": {
                  "line": 3,
                  "column": 19,
                  "offset": 138
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", ",
              "position": {
                "start": {
                  "line": 3,
                  "column": 19,
                  "offset": 138
                },
                "end": {
                  "line": 3,
                  "column": 21,
                  "offset": 140
                },
                "indent": []
              }
            },
            {
              "type": "html",
              "value": "<b>",
              "position": {
                "start": {
                  "line": 3,
                  "column": 21,
                  "offset": 140
                },
                "end": {
                  "line": 3,
                  "column": 24,
                  "offset": 143
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "width",
              "position": {
                "start": {
                  "line": 3,
                  "column": 24,
                  "offset": 143
                },
                "end": {
                  "line": 3,
                  "column": 29,
                  "offset": 148
                },
                "indent": []
              }
            },
            {
              "type": "html",
              "value": "</b>",
              "position": {
                "start": {
                  "line": 3,
                  "column": 29,
                  "offset": 148
                },
                "end": {
                  "line": 3,
                  "column": 33,
                  "offset": 152
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 3,
                  "column": 33,
                  "offset": 152
                },
                "end": {
                  "line": 3,
                  "column": 38,
                  "offset": 157
                },
                "indent": []
              }
            },
            {
              "type": "html",
              "value": "<b>",
              "position": {
                "start": {
                  "line": 3,
                  "column": 38,
                  "offset": 157
                },
                "end": {
                  "line": 3,
                  "column": 41,
                  "offset": 160
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "height",
              "position": {
                "start": {
                  "line": 3,
                  "column": 41,
                  "offset": 160
                },
                "end": {
                  "line": 3,
                  "column": 47,
                  "offset": 166
                },
                "indent": []
              }
            },
            {
              "type": "html",
              "value": "</b>",
              "position": {
                "start": {
                  "line": 3,
                  "column": 47,
                  "offset": 166
                },
                "end": {
                  "line": 3,
                  "column": 51,
                  "offset": 170
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " parameters.\nThe origin or the arc's ellipse may be changed with the\n",
              "position": {
                "start": {
                  "line": 3,
                  "column": 51,
                  "offset": 170
                },
                "end": {
                  "line": 5,
                  "column": 1,
                  "offset": 239
                },
                "indent": [
                  1,
                  1
                ]
              }
            },
            {
              "type": "html",
              "value": "<b>",
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 239
                },
                "end": {
                  "line": 5,
                  "column": 4,
                  "offset": 242
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "ellipseMode()",
              "position": {
                "start": {
                  "line": 5,
                  "column": 4,
                  "offset": 242
                },
                "end": {
                  "line": 5,
                  "column": 17,
                  "offset": 255
                },
                "indent": []
              }
            },
            {
              "type": "html",
              "value": "</b>",
              "position": {
                "start": {
                  "line": 5,
                  "column": 17,
                  "offset": 255
                },
                "end": {
                  "line": 5,
                  "column": 21,
                  "offset": 259
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " function.\nThe ",
              "position": {
                "start": {
                  "line": 5,
                  "column": 21,
                  "offset": 259
                },
                "end": {
                  "line": 6,
                  "column": 5,
                  "offset": 274
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "html",
              "value": "<b>",
              "position": {
                "start": {
                  "line": 6,
                  "column": 5,
                  "offset": 274
                },
                "end": {
                  "line": 6,
                  "column": 8,
                  "offset": 277
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "start",
              "position": {
                "start": {
                  "line": 6,
                  "column": 8,
                  "offset": 277
                },
                "end": {
                  "line": 6,
                  "column": 13,
                  "offset": 282
                },
                "indent": []
              }
            },
            {
              "type": "html",
              "value": "</b>",
              "position": {
                "start": {
                  "line": 6,
                  "column": 13,
                  "offset": 282
                },
                "end": {
                  "line": 6,
                  "column": 17,
                  "offset": 286
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 6,
                  "column": 17,
                  "offset": 286
                },
                "end": {
                  "line": 6,
                  "column": 22,
                  "offset": 291
                },
                "indent": []
              }
            },
            {
              "type": "html",
              "value": "<b>",
              "position": {
                "start": {
                  "line": 6,
                  "column": 22,
                  "offset": 291
                },
                "end": {
                  "line": 6,
                  "column": 25,
                  "offset": 294
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "stop",
              "position": {
                "start": {
                  "line": 6,
                  "column": 25,
                  "offset": 294
                },
                "end": {
                  "line": 6,
                  "column": 29,
                  "offset": 298
                },
                "indent": []
              }
            },
            {
              "type": "html",
              "value": "</b>",
              "position": {
                "start": {
                  "line": 6,
                  "column": 29,
                  "offset": 298
                },
                "end": {
                  "line": 6,
                  "column": 33,
                  "offset": 302
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " parameters specify the angles\nat which to draw the arc.",
              "position": {
                "start": {
                  "line": 6,
                  "column": 33,
                  "offset": 302
                },
                "end": {
                  "line": 7,
                  "column": 26,
                  "offset": 358
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 7,
              "column": 26,
              "offset": 358
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 7,
          "column": 26,
          "offset": 358
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 9
      },
      {
        "title": "subcat",
        "description": "Primitives",
        "lineNumber": 10
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 11,
        "name": "arc"
      },
      {
        "title": "param",
        "description": "x-coordinate of the arc's center",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "cx"
      },
      {
        "title": "param",
        "description": "y-coordinate of the arc's center",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "cy"
      },
      {
        "title": "param",
        "description": "width of the arc's ellipse",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "w"
      },
      {
        "title": "param",
        "description": "height of the arc's ellipse",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "h"
      },
      {
        "title": "param",
        "description": "starting angle of the arc (radians)",
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "startAngle"
      },
      {
        "title": "param",
        "description": "ending angle of the arc (radians)",
        "lineNumber": 17,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "endAngle"
      },
      {
        "title": "param",
        "description": "optional property defines rendering technique of arc, b.OPEN (default), b.CHORD, or b.PIE",
        "lineNumber": 18,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "mode"
      },
      {
        "title": "return",
        "description": "newShape (n.b. in Adobe Scripting the corresponding type is a Path Item)\n\nTODO(S)\n- fix overlapping points bug",
        "lineNumber": 20,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "GraphicLine"
            },
            {
              "type": "NameExpression",
              "name": "Polygon"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3624,
        "column": 0
      },
      "end": {
        "line": 3648,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3649,
          "column": 0
        },
        "end": {
          "line": 3715,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "arc",
    "params": [
      {
        "name": "cx",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "x-coordinate of the arc's center",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "cy",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "y-coordinate of the arc's center",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "w",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "width of the arc's ellipse",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "h",
        "lineNumber": 15,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "height of the arc's ellipse",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "startAngle",
        "lineNumber": 16,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "starting angle of the arc (radians)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 36,
                      "offset": 35
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 36,
                  "offset": 35
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 36,
              "offset": 35
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "endAngle",
        "lineNumber": 17,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "ending angle of the arc (radians)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 34,
                      "offset": 33
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 34,
                  "offset": 33
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 34,
              "offset": 33
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "mode",
        "lineNumber": 18,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "optional property defines rendering technique of arc, b.OPEN (default), b.CHORD, or b.PIE",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 90,
                      "offset": 89
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 90,
                  "offset": 89
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 90,
              "offset": 89
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "newShape (n.b. in Adobe Scripting the corresponding type is a Path Item)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 73,
                      "offset": 72
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 73,
                  "offset": 72
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "TODO(S)",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 1,
                      "offset": 74
                    },
                    "end": {
                      "line": 3,
                      "column": 8,
                      "offset": 81
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 74
                },
                "end": {
                  "line": 3,
                  "column": 8,
                  "offset": 81
                },
                "indent": []
              }
            },
            {
              "type": "list",
              "ordered": false,
              "start": null,
              "loose": false,
              "children": [
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "fix overlapping points bug",
                          "position": {
                            "start": {
                              "line": 4,
                              "column": 3,
                              "offset": 84
                            },
                            "end": {
                              "line": 4,
                              "column": 29,
                              "offset": 110
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 4,
                          "column": 3,
                          "offset": 84
                        },
                        "end": {
                          "line": 4,
                          "column": 29,
                          "offset": 110
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 4,
                      "column": 1,
                      "offset": 82
                    },
                    "end": {
                      "line": 4,
                      "column": 29,
                      "offset": 110
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 4,
                  "column": 1,
                  "offset": 82
                },
                "end": {
                  "line": 4,
                  "column": 29,
                  "offset": 110
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 4,
              "column": 29,
              "offset": 110
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "GraphicLine"
            },
            {
              "type": "NameExpression",
              "name": "Polygon"
            }
          ]
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "arc",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".arc"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "addPath() is used to create multi component paths. Call addPath() to add the so far drawn vertices to a single path.\nNew vertices will then end up in a new path. endShape() will then return a multi path object. All component paths will account for\nthe setting (see b.CLOSE) given in beginShape(shapeMode).",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 58,
                  "offset": 305
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 58,
              "offset": 305
            },
            "indent": [
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 58,
          "offset": 305
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 5
      },
      {
        "title": "subcat",
        "description": "Primitives",
        "lineNumber": 6
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 7,
        "name": "addPath"
      }
    ],
    "loc": {
      "start": {
        "line": 3760,
        "column": 0
      },
      "end": {
        "line": 3768,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3769,
          "column": 0
        },
        "end": {
          "line": 3772,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "addPath",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "addPath",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".addPath"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The endShape() function is the companion to beginShape() and may only be called\nafter beginShape().",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 20,
                  "offset": 99
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 20,
              "offset": 99
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 20,
          "offset": 99
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 4
      },
      {
        "title": "subcat",
        "description": "Primitives",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "endShape"
      },
      {
        "title": "return",
        "description": "newShape",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "GraphicLine"
            },
            {
              "type": "NameExpression",
              "name": "Polygon"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3774,
        "column": 0
      },
      "end": {
        "line": 3782,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3783,
          "column": 0
        },
        "end": {
          "line": 3789,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "endShape",
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "newShape",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 9,
                      "offset": 8
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 9,
                  "offset": 8
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 9,
              "offset": 8
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "GraphicLine"
            },
            {
              "type": "NameExpression",
              "name": "Polygon"
            }
          ]
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "endShape",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".endShape"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Draws a rectangle on the page.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 31,
              "offset": 30
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 31,
          "offset": 30
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Primitives",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "rect"
      },
      {
        "title": "param",
        "description": "Position X",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "x"
      },
      {
        "title": "param",
        "description": "Position Y",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "y"
      },
      {
        "title": "param",
        "description": "Width",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "w"
      },
      {
        "title": "param",
        "description": "Height",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "h"
      },
      {
        "title": "return",
        "description": "New rectangle",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Rectangle"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3828,
        "column": 0
      },
      "end": {
        "line": 3839,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3840,
          "column": 0
        },
        "end": {
          "line": 3883,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "rect",
    "params": [
      {
        "name": "x",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Position X",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 11,
                  "offset": 10
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 11,
              "offset": 10
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "y",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Position Y",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 11,
                  "offset": 10
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 11,
              "offset": 10
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "w",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Width",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 6,
                      "offset": 5
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 6,
              "offset": 5
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "h",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Height",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 7,
                      "offset": 6
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 7,
                  "offset": 6
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 7,
              "offset": 6
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "New rectangle",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 14,
              "offset": 13
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Rectangle"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "rect",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".rect"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Modifies the location from which rectangles draw. The default mode is\nrectMode(CORNER), which specifies the location to be the upper left\ncorner of the shape and uses the third and fourth parameters of rect()\nto specify the width and height. The syntax rectMode(CORNERS) uses the\nfirst and second parameters of rect() to set the location of one corner\nand uses the third and fourth parameters to set the opposite corner.\nThe syntax rectMode(CENTER) draws the image from its center point and\nuses the third and forth parameters of rect() to specify the image's\nwidth and height. The syntax rectMode(RADIUS) draws the image from its\ncenter point and uses the third and forth parameters of rect() to specify\nhalf of the image's width and height. The parameter must be written in\n\"ALL CAPS\".",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 12,
                  "column": 12,
                  "offset": 787
                },
                "indent": [
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 12,
              "column": 12,
              "offset": 787
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 12,
          "column": 12,
          "offset": 787
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 14
      },
      {
        "title": "subcat",
        "description": "Attributes",
        "lineNumber": 15
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 16,
        "name": "rectMode"
      },
      {
        "title": "param",
        "description": "Either b.CORNER, b.CORNERS, b.CENTER, or b.RADIUS",
        "lineNumber": 17,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "mode"
      }
    ],
    "loc": {
      "start": {
        "line": 3888,
        "column": 0
      },
      "end": {
        "line": 3907,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3908,
          "column": 0
        },
        "end": {
          "line": 3916,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "rectMode",
    "params": [
      {
        "name": "mode",
        "lineNumber": 17,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Either b.CORNER, b.CORNERS, b.CENTER, or b.RADIUS",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 50,
                      "offset": 49
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 50,
                  "offset": 49
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 50,
              "offset": 49
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "rectMode",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".rectMode"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The origin of the ellipse is modified by the ellipseMode() function.\nThe default configuration is ellipseMode(CENTER), which specifies the\nlocation of the ellipse as the center of the shape. The RADIUS mode is\nthe same, but the width and height parameters to ellipse() specify the\nradius of the ellipse, rather than the diameter. The CORNER mode draws\nthe shape from the upper-left corner of its bounding box. The CORNERS\nmode uses the four parameters to ellipse() to set two opposing corners\nof the ellipse's bounding box. The parameter must be written in \"ALL CAPS\".",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 8,
                  "column": 76,
                  "offset": 568
                },
                "indent": [
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 8,
              "column": 76,
              "offset": 568
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 8,
          "column": 76,
          "offset": 568
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 10
      },
      {
        "title": "subcat",
        "description": "Attributes",
        "lineNumber": 11
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 12,
        "name": "ellipseMode"
      },
      {
        "title": "param",
        "description": "Either b.CENTER, b.RADIUS, b.CORNER, or b.CORNERS",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "mode"
      }
    ],
    "loc": {
      "start": {
        "line": 3918,
        "column": 0
      },
      "end": {
        "line": 3932,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3933,
          "column": 0
        },
        "end": {
          "line": 3941,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "ellipseMode",
    "params": [
      {
        "name": "mode",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Either b.CENTER, b.RADIUS, b.CORNER, or b.CORNERS",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 50,
                      "offset": 49
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 50,
                  "offset": 49
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 50,
              "offset": 49
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "ellipseMode",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".ellipseMode"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets the width of the stroke used for lines and the border\naround shapes.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 15,
                  "offset": 73
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 15,
              "offset": 73
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 15,
          "offset": 73
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 4
      },
      {
        "title": "subcat",
        "description": "Attributes",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "strokeWeight"
      },
      {
        "title": "param",
        "description": "The width of the stroke",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "weight"
      }
    ],
    "loc": {
      "start": {
        "line": 3943,
        "column": 0
      },
      "end": {
        "line": 3951,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3952,
          "column": 0
        },
        "end": {
          "line": 3958,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "strokeWeight",
    "params": [
      {
        "name": "weight",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The width of the stroke",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 24,
                  "offset": 23
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 24,
              "offset": 23
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "strokeWeight",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".strokeWeight"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the object style of a given page item or the object style with the given name. If an\nobject style of the given name does not exist, it gets created. Optionally a props object of\nproperty name/value pairs can be used to set the object style's properties.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 76,
                  "offset": 261
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 76,
              "offset": 261
            },
            "indent": [
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 76,
          "offset": 261
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Typography",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "objectStyle"
      },
      {
        "title": "param",
        "description": "A page item whose style to return or the name of the object style to return.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "PageItem"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        },
        "name": "pageItemOrName"
      },
      {
        "title": "param",
        "description": "Optional: An object of property name/value pairs to set the style's properties.",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Object"
          }
        },
        "name": "props"
      },
      {
        "title": "return",
        "description": "The object style instance.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "ObjectStyle"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3960,
        "column": 0
      },
      "end": {
        "line": 3970,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3971,
          "column": 0
        },
        "end": {
          "line": 4001,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "objectStyle",
    "params": [
      {
        "name": "pageItemOrName",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A page item whose style to return or the name of the object style to return.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 77,
                      "offset": 76
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 77,
                  "offset": 76
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 77,
              "offset": 76
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "PageItem"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        }
      },
      {
        "name": "props",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Optional: An object of property name/value pairs to set the style's properties.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 80,
                      "offset": 79
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 80,
                  "offset": 79
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 80,
              "offset": 79
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Object"
          }
        }
      },
      {
        "title": "param",
        "name": "itemOrName",
        "lineNumber": 3971
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The object style instance.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "ObjectStyle"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "objectStyle",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".objectStyle"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Applies an object style to the given page item. The object style can be given as\nname or as an object style instance.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 37,
                  "offset": 117
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 37,
              "offset": 117
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 37,
          "offset": 117
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Typography",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "applyObjectStyle"
      },
      {
        "title": "param",
        "description": "The page item to apply the style to.",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "PageItem"
        },
        "name": "item"
      },
      {
        "title": "param",
        "description": "An object style instance or the name of the object style to apply.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "ObjectStyle"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        },
        "name": "style"
      },
      {
        "title": "return",
        "description": "The page item that the style was applied to.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "PageItem"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 4003,
        "column": 0
      },
      "end": {
        "line": 4012,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4014,
          "column": 0
        },
        "end": {
          "line": 4031,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "applyObjectStyle",
    "params": [
      {
        "name": "item",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The page item to apply the style to.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 37,
                      "offset": 36
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 37,
                  "offset": 36
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 37,
              "offset": 36
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "PageItem"
        }
      },
      {
        "name": "style",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "An object style instance or the name of the object style to apply.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 67,
                      "offset": 66
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 67,
                  "offset": 66
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 67,
              "offset": 66
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "ObjectStyle"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The page item that the style was applied to.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 45,
                      "offset": 44
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 45,
                  "offset": 44
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 45,
              "offset": 44
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "PageItem"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "applyObjectStyle",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".applyObjectStyle"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Duplicates the given page after the current page or the given pageitem to the current page and layer. Use b.rectMode() to set center point.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 140,
                  "offset": 139
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 140,
              "offset": 139
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 140,
          "offset": 139
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Transformation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "duplicate"
      },
      {
        "title": "param",
        "description": "The item to duplicate",
        "lineNumber": 6,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "PageItem"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            }
          ]
        },
        "name": "item"
      },
      {
        "title": "returns",
        "description": "Returns the new item",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 4033,
        "column": 0
      },
      "end": {
        "line": 4041,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4042,
          "column": 0
        },
        "end": {
          "line": 4070,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "duplicate",
    "params": [
      {
        "name": "item",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The item to duplicate",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "PageItem"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            }
          ]
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Returns the new item",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "duplicate",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".duplicate"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets the color or gradient used to fill shapes.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 48,
                  "offset": 47
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 48,
              "offset": 47
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 48,
          "offset": 47
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Color",
        "lineNumber": 2
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 3,
        "name": "fill"
      },
      {
        "title": "param",
        "description": "Accepts a color/gradient/swatch or a string with the name of a color. Or values: C,M,Y,K / R,G,B / Grey",
        "lineNumber": 4,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Color"
            },
            {
              "type": "NameExpression",
              "name": "Gradient"
            },
            {
              "type": "NameExpression",
              "name": "Swatch"
            },
            {
              "type": "NameExpression",
              "name": "Numbers"
            }
          ]
        },
        "name": "fillColor"
      }
    ],
    "loc": {
      "start": {
        "line": 4075,
        "column": 0
      },
      "end": {
        "line": 4080,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4081,
          "column": 0
        },
        "end": {
          "line": 4105,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "fill",
    "params": [
      {
        "name": "fillColor",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Accepts a color/gradient/swatch or a string with the name of a color. Or values: C,M,Y,K / R,G,B / Grey",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 104,
                      "offset": 103
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 104,
                  "offset": 103
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 104,
              "offset": 103
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Color"
            },
            {
              "type": "NameExpression",
              "name": "Gradient"
            },
            {
              "type": "NameExpression",
              "name": "Swatch"
            },
            {
              "type": "NameExpression",
              "name": "Numbers"
            }
          ]
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "fill",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".fill"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Disables filling geometry. If both noStroke() and noFill() are called,\nnewly drawn shapes will be invisible.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 38,
                  "offset": 108
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 38,
              "offset": 108
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 38,
          "offset": 108
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Color",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "noFill"
      }
    ],
    "loc": {
      "start": {
        "line": 4107,
        "column": 0
      },
      "end": {
        "line": 4113,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4114,
          "column": 0
        },
        "end": {
          "line": 4116,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "noFill",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "noFill",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".noFill"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets the color or gradient used to draw lines and borders around shapes.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 73,
                  "offset": 72
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 73,
              "offset": 72
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 73,
          "offset": 72
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Color",
        "lineNumber": 2
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 3,
        "name": "stroke"
      },
      {
        "title": "param",
        "description": "Accepts a color/gradient/swatch or a string with the name of a color. Or values: C,M,Y,K / R,G,B / Grey",
        "lineNumber": 4,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Color"
            },
            {
              "type": "NameExpression",
              "name": "Gradient"
            },
            {
              "type": "NameExpression",
              "name": "Swatch"
            },
            {
              "type": "NameExpression",
              "name": "Numbers"
            }
          ]
        },
        "name": "strokeColor"
      }
    ],
    "loc": {
      "start": {
        "line": 4118,
        "column": 0
      },
      "end": {
        "line": 4123,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4124,
          "column": 0
        },
        "end": {
          "line": 4147,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "stroke",
    "params": [
      {
        "name": "strokeColor",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Accepts a color/gradient/swatch or a string with the name of a color. Or values: C,M,Y,K / R,G,B / Grey",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 104,
                      "offset": 103
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 104,
                  "offset": 103
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 104,
              "offset": 103
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Color"
            },
            {
              "type": "NameExpression",
              "name": "Gradient"
            },
            {
              "type": "NameExpression",
              "name": "Swatch"
            },
            {
              "type": "NameExpression",
              "name": "Numbers"
            }
          ]
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "stroke",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".stroke"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Disables drawing the stroke (outline). If both noStroke() and noFill()\nare called, nothing will be drawn to the screen.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 49,
                  "offset": 119
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 49,
              "offset": 119
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 49,
          "offset": 119
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Color",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "noStroke"
      }
    ],
    "loc": {
      "start": {
        "line": 4149,
        "column": 0
      },
      "end": {
        "line": 4155,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4156,
          "column": 0
        },
        "end": {
          "line": 4158,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "noStroke",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "noStroke",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".noStroke"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets the tint of the color used to fill shapes.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 48,
                  "offset": 47
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 48,
              "offset": 47
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 48,
          "offset": 47
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Color",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "fillTint"
      },
      {
        "title": "param",
        "description": "Number from 0 to 100",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "tint"
      }
    ],
    "loc": {
      "start": {
        "line": 4160,
        "column": 0
      },
      "end": {
        "line": 4166,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4167,
          "column": 0
        },
        "end": {
          "line": 4174,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "fillTint",
    "params": [
      {
        "name": "tint",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Number from 0 to 100",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "fillTint",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".fillTint"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets the tint of the color used to draw lines and borders around shapes.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 73,
                  "offset": 72
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 73,
              "offset": 72
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 73,
          "offset": 72
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Color",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "strokeTint"
      },
      {
        "title": "param",
        "description": "Number from 0 to 100",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "tint"
      }
    ],
    "loc": {
      "start": {
        "line": 4176,
        "column": 0
      },
      "end": {
        "line": 4182,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4183,
          "column": 0
        },
        "end": {
          "line": 4190,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "strokeTint",
    "params": [
      {
        "name": "tint",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Number from 0 to 100",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "strokeTint",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".strokeTint"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets the colormode for creating new colors with b.color() to RGB or CMYK. The default color mode is RBG.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 105,
                  "offset": 104
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 105,
              "offset": 104
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 105,
          "offset": 104
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Color",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "colorMode"
      },
      {
        "title": "param",
        "description": "Either b.RGB or b.CMYK",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "colorMode"
      }
    ],
    "loc": {
      "start": {
        "line": 4192,
        "column": 0
      },
      "end": {
        "line": 4198,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4199,
          "column": 0
        },
        "end": {
          "line": 4209,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "colorMode",
    "params": [
      {
        "name": "colorMode",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Either b.RGB or b.CMYK",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "colorMode",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".colorMode"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets the gradient mode for creating new gradients with b.gradient() to LINEAR or RADIAL. The default gradient mode is LINEAR.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 126,
                  "offset": 125
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 126,
              "offset": 125
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 126,
          "offset": 125
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Color",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "gradientMode"
      },
      {
        "title": "param",
        "description": "Either b.LINEAR or b.RADIAL",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "gradientMode"
      }
    ],
    "loc": {
      "start": {
        "line": 4211,
        "column": 0
      },
      "end": {
        "line": 4217,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4218,
          "column": 0
        },
        "end": {
          "line": 4228,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "gradientMode",
    "params": [
      {
        "name": "gradientMode",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Either b.LINEAR or b.RADIAL",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "gradientMode",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".gradientMode"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Creates a new RGB or CMYK color and adds the new color to the document, or gets a color by name from the document. The default color mode is RGB.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 146,
                  "offset": 145
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 146,
              "offset": 145
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 146,
          "offset": 145
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Color",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "color"
      },
      {
        "title": "param",
        "description": "color: the color name. Create new color: R,G,B,[name] or C,M,Y,K,[name] or Grey,name. Name is always optional",
        "lineNumber": 5,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Numbers"
            }
          ]
        },
        "name": "Get"
      },
      {
        "title": "return",
        "description": "found or new color",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Color"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 4230,
        "column": 0
      },
      "end": {
        "line": 4237,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4238,
          "column": 0
        },
        "end": {
          "line": 4364,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "color",
    "params": [
      {
        "name": "Get",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "color: the color name. Create new color: R,G,B,",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 48,
                      "offset": 47
                    },
                    "indent": []
                  }
                },
                {
                  "type": "linkReference",
                  "identifier": "name",
                  "referenceType": "shortcut",
                  "children": [
                    {
                      "type": "text",
                      "value": "name",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 49,
                          "offset": 48
                        },
                        "end": {
                          "line": 1,
                          "column": 53,
                          "offset": 52
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 48,
                      "offset": 47
                    },
                    "end": {
                      "line": 1,
                      "column": 54,
                      "offset": 53
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " or C,M,Y,K,",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 54,
                      "offset": 53
                    },
                    "end": {
                      "line": 1,
                      "column": 66,
                      "offset": 65
                    },
                    "indent": []
                  }
                },
                {
                  "type": "linkReference",
                  "identifier": "name",
                  "referenceType": "shortcut",
                  "children": [
                    {
                      "type": "text",
                      "value": "name",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 67,
                          "offset": 66
                        },
                        "end": {
                          "line": 1,
                          "column": 71,
                          "offset": 70
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 66,
                      "offset": 65
                    },
                    "end": {
                      "line": 1,
                      "column": 72,
                      "offset": 71
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " or Grey,name. Name is always optional",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 72,
                      "offset": 71
                    },
                    "end": {
                      "line": 1,
                      "column": 110,
                      "offset": 109
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 110,
                  "offset": 109
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 110,
              "offset": 109
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Numbers"
            }
          ]
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "found or new color",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Color"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "color",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".color"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Creates a new gradient and adds it to the document, or gets a gradient by name from the document.\nIf two colors are given as the first two parameters, a gradient is created that blends between these two colors. If an array of colors is used\nas the first parameter, a gradient with the contained colors will be created. The colors will be distributed evenly. If additionally to this array\na second array of gradient stop positions is given, the colors will be positioned at the given gradient stops. Possible gradient stop positions\nrange from 0 to 100. All parameter options allow for an additional name parameter at the end to name the new gradient.\nIf a string is used as the only parameter, the gradient with that name will be returned, if it exists in the document.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 6,
                  "column": 119,
                  "offset": 769
                },
                "indent": [
                  1,
                  1,
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 6,
              "column": 119,
              "offset": 769
            },
            "indent": [
              1,
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 6,
          "column": 119,
          "offset": 769
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Color",
        "lineNumber": 8
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 9,
        "name": "gradient"
      },
      {
        "title": "param",
        "description": "First color of the gradient. Alternatively: Array of colors/gradients or name of gradient to get.",
        "lineNumber": 10,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Color"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        },
        "name": "c1"
      },
      {
        "title": "param",
        "description": "Second color of the gradient. Alternatively: Array of gradient stop positions (if first parameter is an array of colors).",
        "lineNumber": 11,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Color"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        },
        "name": "c2"
      },
      {
        "title": "param",
        "description": "Optional name of the gradient.",
        "lineNumber": 12,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        },
        "name": "name"
      },
      {
        "title": "return",
        "description": "Found or new gradient",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "Gradient"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 4366,
        "column": 0
      },
      "end": {
        "line": 4380,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4381,
          "column": 0
        },
        "end": {
          "line": 4480,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "gradient",
    "params": [
      {
        "name": "c1",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "First color of the gradient. Alternatively: Array of colors/gradients or name of gradient to get.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 98,
                      "offset": 97
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 98,
                  "offset": 97
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 98,
              "offset": 97
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Color"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        }
      },
      {
        "name": "c2",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Second color of the gradient. Alternatively: Array of gradient stop positions (if first parameter is an array of colors).",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 122,
                      "offset": 121
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 122,
                  "offset": 121
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 122,
              "offset": 121
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Color"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        }
      },
      {
        "name": "name",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Optional name of the gradient.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 31,
              "offset": 30
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Found or new gradient",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Gradient"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "gradient",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".gradient"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets the opacity property of an object.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 40,
                  "offset": 39
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 40,
              "offset": 39
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 40,
          "offset": 39
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Color",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "opacity"
      },
      {
        "title": "param",
        "description": "The object to set opacity property",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "obj"
      },
      {
        "title": "param",
        "description": "The opacity value form 0 to 100",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opacity"
      }
    ],
    "loc": {
      "start": {
        "line": 4482,
        "column": 0
      },
      "end": {
        "line": 4489,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4490,
          "column": 0
        },
        "end": {
          "line": 4497,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "opacity",
    "params": [
      {
        "name": "obj",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The object to set opacity property",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 35,
                  "offset": 34
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 35,
              "offset": 34
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "name": "opacity",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The opacity value form 0 to 100",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 32,
                  "offset": 31
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 32,
              "offset": 31
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "opacity",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".opacity"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets the Effects blendMode property of an object.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 50,
                  "offset": 49
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 50,
              "offset": 49
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 50,
          "offset": 49
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Color",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "blendMode"
      },
      {
        "title": "param",
        "description": "The object to set blendMode property",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "obj"
      },
      {
        "title": "param",
        "description": "The blendMode must be one of the InDesign BlendMode enum values:\n                          BlendMode.NORMAL <br />\n                          BlendMode.MULTIPLY <br />\n                          BlendMode.SCREEN <br />\n                          BlendMode.OVERLAY <br />\n                          BlendMode.SOFT_LIGHT <br />\n                          BlendMode.HARD_LIGHT <br />\n                          BlendMode.COLOR_DODGE <br />\n                          BlendMode.COLOR_BURN <br />\n                          BlendMode.DARKEN <br />\n                          BlendMode.LIGHTEN <br />\n                          BlendMode.DIFFERENCE <br />\n                          BlendMode.EXCLUSION <br />\n                          BlendMode.HUE <br />\n                          BlendMode.SATURATION <br />\n                          BlendMode.COLOR <br />\n                          BlendMode.LUMINOSITY <br />",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "blendMode"
      }
    ],
    "loc": {
      "start": {
        "line": 4499,
        "column": 0
      },
      "end": {
        "line": 4522,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4523,
          "column": 0
        },
        "end": {
          "line": 4530,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "blendMode",
    "params": [
      {
        "name": "obj",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The object to set blendMode property",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 37,
                      "offset": 36
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 37,
                  "offset": 36
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 37,
              "offset": 36
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "name": "blendMode",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The blendMode must be one of the InDesign BlendMode enum values:\n                          BlendMode.NORMAL ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 44,
                      "offset": 108
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "html",
                  "value": "<br />",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 44,
                      "offset": 108
                    },
                    "end": {
                      "line": 2,
                      "column": 50,
                      "offset": 114
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "\n                          BlendMode.MULTIPLY ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 50,
                      "offset": 114
                    },
                    "end": {
                      "line": 3,
                      "column": 46,
                      "offset": 160
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "html",
                  "value": "<br />",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 46,
                      "offset": 160
                    },
                    "end": {
                      "line": 3,
                      "column": 52,
                      "offset": 166
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "\n                          BlendMode.SCREEN ",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 52,
                      "offset": 166
                    },
                    "end": {
                      "line": 4,
                      "column": 44,
                      "offset": 210
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "html",
                  "value": "<br />",
                  "position": {
                    "start": {
                      "line": 4,
                      "column": 44,
                      "offset": 210
                    },
                    "end": {
                      "line": 4,
                      "column": 50,
                      "offset": 216
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "\n                          BlendMode.OVERLAY ",
                  "position": {
                    "start": {
                      "line": 4,
                      "column": 50,
                      "offset": 216
                    },
                    "end": {
                      "line": 5,
                      "column": 45,
                      "offset": 261
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "html",
                  "value": "<br />",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 45,
                      "offset": 261
                    },
                    "end": {
                      "line": 5,
                      "column": 51,
                      "offset": 267
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "\n                          BlendMode.SOFT_LIGHT ",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 51,
                      "offset": 267
                    },
                    "end": {
                      "line": 6,
                      "column": 48,
                      "offset": 315
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "html",
                  "value": "<br />",
                  "position": {
                    "start": {
                      "line": 6,
                      "column": 48,
                      "offset": 315
                    },
                    "end": {
                      "line": 6,
                      "column": 54,
                      "offset": 321
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "\n                          BlendMode.HARD_LIGHT ",
                  "position": {
                    "start": {
                      "line": 6,
                      "column": 54,
                      "offset": 321
                    },
                    "end": {
                      "line": 7,
                      "column": 48,
                      "offset": 369
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "html",
                  "value": "<br />",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 48,
                      "offset": 369
                    },
                    "end": {
                      "line": 7,
                      "column": 54,
                      "offset": 375
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "\n                          BlendMode.COLOR_DODGE ",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 54,
                      "offset": 375
                    },
                    "end": {
                      "line": 8,
                      "column": 49,
                      "offset": 424
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "html",
                  "value": "<br />",
                  "position": {
                    "start": {
                      "line": 8,
                      "column": 49,
                      "offset": 424
                    },
                    "end": {
                      "line": 8,
                      "column": 55,
                      "offset": 430
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "\n                          BlendMode.COLOR_BURN ",
                  "position": {
                    "start": {
                      "line": 8,
                      "column": 55,
                      "offset": 430
                    },
                    "end": {
                      "line": 9,
                      "column": 48,
                      "offset": 478
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "html",
                  "value": "<br />",
                  "position": {
                    "start": {
                      "line": 9,
                      "column": 48,
                      "offset": 478
                    },
                    "end": {
                      "line": 9,
                      "column": 54,
                      "offset": 484
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "\n                          BlendMode.DARKEN ",
                  "position": {
                    "start": {
                      "line": 9,
                      "column": 54,
                      "offset": 484
                    },
                    "end": {
                      "line": 10,
                      "column": 44,
                      "offset": 528
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "html",
                  "value": "<br />",
                  "position": {
                    "start": {
                      "line": 10,
                      "column": 44,
                      "offset": 528
                    },
                    "end": {
                      "line": 10,
                      "column": 50,
                      "offset": 534
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "\n                          BlendMode.LIGHTEN ",
                  "position": {
                    "start": {
                      "line": 10,
                      "column": 50,
                      "offset": 534
                    },
                    "end": {
                      "line": 11,
                      "column": 45,
                      "offset": 579
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "html",
                  "value": "<br />",
                  "position": {
                    "start": {
                      "line": 11,
                      "column": 45,
                      "offset": 579
                    },
                    "end": {
                      "line": 11,
                      "column": 51,
                      "offset": 585
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "\n                          BlendMode.DIFFERENCE ",
                  "position": {
                    "start": {
                      "line": 11,
                      "column": 51,
                      "offset": 585
                    },
                    "end": {
                      "line": 12,
                      "column": 48,
                      "offset": 633
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "html",
                  "value": "<br />",
                  "position": {
                    "start": {
                      "line": 12,
                      "column": 48,
                      "offset": 633
                    },
                    "end": {
                      "line": 12,
                      "column": 54,
                      "offset": 639
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "\n                          BlendMode.EXCLUSION ",
                  "position": {
                    "start": {
                      "line": 12,
                      "column": 54,
                      "offset": 639
                    },
                    "end": {
                      "line": 13,
                      "column": 47,
                      "offset": 686
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "html",
                  "value": "<br />",
                  "position": {
                    "start": {
                      "line": 13,
                      "column": 47,
                      "offset": 686
                    },
                    "end": {
                      "line": 13,
                      "column": 53,
                      "offset": 692
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "\n                          BlendMode.HUE ",
                  "position": {
                    "start": {
                      "line": 13,
                      "column": 53,
                      "offset": 692
                    },
                    "end": {
                      "line": 14,
                      "column": 41,
                      "offset": 733
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "html",
                  "value": "<br />",
                  "position": {
                    "start": {
                      "line": 14,
                      "column": 41,
                      "offset": 733
                    },
                    "end": {
                      "line": 14,
                      "column": 47,
                      "offset": 739
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "\n                          BlendMode.SATURATION ",
                  "position": {
                    "start": {
                      "line": 14,
                      "column": 47,
                      "offset": 739
                    },
                    "end": {
                      "line": 15,
                      "column": 48,
                      "offset": 787
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "html",
                  "value": "<br />",
                  "position": {
                    "start": {
                      "line": 15,
                      "column": 48,
                      "offset": 787
                    },
                    "end": {
                      "line": 15,
                      "column": 54,
                      "offset": 793
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "\n                          BlendMode.COLOR ",
                  "position": {
                    "start": {
                      "line": 15,
                      "column": 54,
                      "offset": 793
                    },
                    "end": {
                      "line": 16,
                      "column": 43,
                      "offset": 836
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "html",
                  "value": "<br />",
                  "position": {
                    "start": {
                      "line": 16,
                      "column": 43,
                      "offset": 836
                    },
                    "end": {
                      "line": 16,
                      "column": 49,
                      "offset": 842
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "\n                          BlendMode.LUMINOSITY ",
                  "position": {
                    "start": {
                      "line": 16,
                      "column": 49,
                      "offset": 842
                    },
                    "end": {
                      "line": 17,
                      "column": 48,
                      "offset": 890
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "html",
                  "value": "<br />",
                  "position": {
                    "start": {
                      "line": 17,
                      "column": 48,
                      "offset": 890
                    },
                    "end": {
                      "line": 17,
                      "column": 54,
                      "offset": 896
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 17,
                  "column": 54,
                  "offset": 896
                },
                "indent": [
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 17,
              "column": 54,
              "offset": 896
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "blendMode",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".blendMode"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Calculates a color or colors between two color at a specific increment.\nThe amt parameter is the amount to interpolate between the two values where 0.0 equal to the first point, 0.1 is very near the first point, 0.5 is half-way in between, etc.\nN.B.: Both color must be either CMYK or RGB.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 45,
                  "offset": 289
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 45,
              "offset": 289
            },
            "indent": [
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 45,
          "offset": 289
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Color",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "lerpColor"
      },
      {
        "title": "param",
        "description": "Input color 1",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Color"
        },
        "name": "c1"
      },
      {
        "title": "param",
        "description": "Input color 2",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Color"
        },
        "name": "c2"
      },
      {
        "title": "param",
        "description": "The Amount to interpolate between the two colors",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "amt"
      },
      {
        "title": "return",
        "description": "Interpolated color",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Color"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 4532,
        "column": 0
      },
      "end": {
        "line": 4543,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4544,
          "column": 0
        },
        "end": {
          "line": 4587,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "lerpColor",
    "params": [
      {
        "name": "c1",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Input color 1",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 14,
              "offset": 13
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Color"
        }
      },
      {
        "name": "c2",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Input color 2",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 14,
              "offset": 13
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Color"
        }
      },
      {
        "name": "amt",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The Amount to interpolate between the two colors",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 49,
                      "offset": 48
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 49,
                  "offset": 48
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 49,
              "offset": 48
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Interpolated color",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Color"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "lerpColor",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".lerpColor"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Creates a text frame on the current layer on the current page in the current document.\nThe text frame gets created in the position specified by the x and y parameters.\nThe default document font will be used unless a font is set with the textFont() function.\nThe default document font size will be used unless a font size is set with the textSize() function.\nChange the color of the text with the fill() function.\nThe text displays in relation to the textAlign() and textYAlign() functions.\nThe width and height parameters define a rectangular area.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 7,
                  "column": 59,
                  "offset": 548
                },
                "indent": [
                  1,
                  1,
                  1,
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 7,
              "column": 59,
              "offset": 548
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 7,
          "column": 59,
          "offset": 548
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Typography",
        "lineNumber": 9
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 10,
        "name": "text"
      },
      {
        "title": "param",
        "description": "The text content to set in the text frame.",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "txt"
      },
      {
        "title": "param",
        "description": "x-coordinate of text frame",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "x"
      },
      {
        "title": "param",
        "description": "y-coordinate of text frame",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "y"
      },
      {
        "title": "param",
        "description": "width of text frame",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "w"
      },
      {
        "title": "param",
        "description": "height of text frame",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "h"
      },
      {
        "title": "return",
        "description": "The created text frame instance",
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "TextFrame"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 4592,
        "column": 0
      },
      "end": {
        "line": 4609,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4610,
          "column": 0
        },
        "end": {
          "line": 4644,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "text",
    "params": [
      {
        "name": "txt",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The text content to set in the text frame.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 43,
                  "offset": 42
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 43,
              "offset": 42
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      },
      {
        "name": "x",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "x-coordinate of text frame",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "y",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "y-coordinate of text frame",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "w",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "width of text frame",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "h",
        "lineNumber": 15,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "height of text frame",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The created text frame instance",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 32,
                  "offset": 31
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 32,
              "offset": 31
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "TextFrame"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "text",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".text"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets text properties to the given item. If the item is not an instance the text property can be set to,\nthe property gets set to the direct descendants of the given item, e.g. all stories of a given document.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 105,
                  "offset": 208
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 105,
              "offset": 208
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "If no value is given and the given property is a string, the function acts as a getter and returns the\ncorresponding value(s) in an array. This can either be an array containing the value of the concrete item\n(e.g. character) the values of the item's descendants (e.g. paragraphs of given text frame).",
              "position": {
                "start": {
                  "line": 4,
                  "column": 1,
                  "offset": 210
                },
                "end": {
                  "line": 6,
                  "column": 93,
                  "offset": 511
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 4,
              "column": 1,
              "offset": 210
            },
            "end": {
              "line": 6,
              "column": 93,
              "offset": 511
            },
            "indent": [
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 6,
          "column": 93,
          "offset": 511
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Typography",
        "lineNumber": 8
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 9,
        "name": "typo"
      },
      {
        "title": "param",
        "description": "The object to apply the property to.",
        "lineNumber": 10,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Document"
            },
            {
              "type": "NameExpression",
              "name": "Spread"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            },
            {
              "type": "NameExpression",
              "name": "Layer"
            },
            {
              "type": "NameExpression",
              "name": "Story"
            },
            {
              "type": "NameExpression",
              "name": "TextFrame"
            },
            {
              "type": "NameExpression",
              "name": "Text"
            }
          ]
        },
        "name": "item"
      },
      {
        "title": "param",
        "description": "The text property name or an object of key/value property/value pairs.\n                                  If property is a string and no value is given, the function acts as getter.",
        "lineNumber": 11,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Object"
            }
          ]
        },
        "name": "property"
      },
      {
        "title": "param",
        "description": "The value to apply to the property.",
        "lineNumber": 13,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "String"
              },
              {
                "type": "NameExpression",
                "name": "Number"
              },
              {
                "type": "NameExpression",
                "name": "Object"
              }
            ]
          }
        },
        "name": "value"
      },
      {
        "title": "return",
        "description": "The property value(s) if the function acts as getter or the items the property\n                                      was assigned to.",
        "lineNumber": 14,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "String"
                }
              ]
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "Number"
                }
              ]
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "Object"
                }
              ]
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 4646,
        "column": 0
      },
      "end": {
        "line": 4662,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4663,
          "column": 0
        },
        "end": {
          "line": 4715,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "typo",
    "params": [
      {
        "name": "item",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The object to apply the property to.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 37,
                      "offset": 36
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 37,
                  "offset": 36
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 37,
              "offset": 36
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Document"
            },
            {
              "type": "NameExpression",
              "name": "Spread"
            },
            {
              "type": "NameExpression",
              "name": "Page"
            },
            {
              "type": "NameExpression",
              "name": "Layer"
            },
            {
              "type": "NameExpression",
              "name": "Story"
            },
            {
              "type": "NameExpression",
              "name": "TextFrame"
            },
            {
              "type": "NameExpression",
              "name": "Text"
            }
          ]
        }
      },
      {
        "name": "property",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The text property name or an object of key/value property/value pairs.\n                                  If property is a string and no value is given, the function acts as getter.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 110,
                      "offset": 180
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 110,
                  "offset": 180
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 110,
              "offset": 180
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Object"
            }
          ]
        }
      },
      {
        "name": "value",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The value to apply to the property.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 36,
                      "offset": 35
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 36,
                  "offset": 35
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 36,
              "offset": 35
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "String"
              },
              {
                "type": "NameExpression",
                "name": "Number"
              },
              {
                "type": "NameExpression",
                "name": "Object"
              }
            ]
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The property value(s) if the function acts as getter or the items the property\n                                      was assigned to.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 55,
                      "offset": 133
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 55,
                  "offset": 133
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 55,
              "offset": 133
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "String"
                }
              ]
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "Number"
                }
              ]
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "Object"
                }
              ]
            }
          ]
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "typo",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".typo"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the current font and sets it if argument fontName is given.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 68,
                  "offset": 67
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 68,
              "offset": 67
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 68,
          "offset": 67
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Typography",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "textFont"
      },
      {
        "title": "param",
        "description": "The name of the font to set e.g. Helvetica",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "fontName"
      },
      {
        "title": "param",
        "description": "The Font style e.g. Bold",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        },
        "name": "fontStyle"
      },
      {
        "title": "return",
        "description": "currFont The name of the current font",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 4733,
        "column": 0
      },
      "end": {
        "line": 4741,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4742,
          "column": 0
        },
        "end": {
          "line": 4750,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "textFont",
    "params": [
      {
        "name": "fontName",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The name of the font to set e.g. Helvetica",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 43,
                  "offset": 42
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 43,
              "offset": 42
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      },
      {
        "name": "fontStyle",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The Font style e.g. Bold",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "currFont The name of the current font",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 38,
                  "offset": 37
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 38,
              "offset": 37
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "textFont",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".textFont"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the current font size in points and sets it if argument pointSize is given.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 84,
                  "offset": 83
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 84,
              "offset": 83
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 84,
          "offset": 83
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Typography",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "textSize"
      },
      {
        "title": "param",
        "description": "The size in points to set.",
        "lineNumber": 5,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "pointSize"
      },
      {
        "title": "return",
        "description": "The current point size.",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 4752,
        "column": 0
      },
      "end": {
        "line": 4759,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4760,
          "column": 0
        },
        "end": {
          "line": 4765,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "textSize",
    "params": [
      {
        "name": "pointSize",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The size in points to set.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The current point size.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 24,
                  "offset": 23
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 24,
              "offset": 23
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "textSize",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".textSize"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets the current horizontal and vertical text alignment.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 57,
                  "offset": 56
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 57,
              "offset": 56
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 57,
          "offset": 56
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Typography",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "textAlign"
      },
      {
        "title": "param",
        "description": "The horizontal text alignment to set. Must be one of the InDesign Justification enum values:\n                          Justification.AWAY_FROM_BINDING_SIDE <br />\n                          Justification.CENTER_ALIGN <br />\n                          Justification.CENTER_JUSTIFIED <br />\n                          Justification.FULLY_JUSTIFIED <br />\n                          Justification.LEFT_ALIGN <br />\n                          Justification.RIGHT_ALIGN <br />\n                          Justification.RIGHT_JUSTIFIED <br />\n                          Justification.TO_BINDING_SIDE <br />",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "align"
      },
      {
        "title": "param",
        "description": "The vertical text alignment to set. Must be one of the InDesign VerticalJustification enum values:\n                          VerticalJustification.BOTTOM_ALIGN <br />\n                          VerticalJustification.CENTER_ALIGN <br />\n                          VerticalJustification.JUSTIFY_ALIGN <br />\n                          VerticalJustification.TOP_ALIGN <br />",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        },
        "name": "yAlign"
      }
    ],
    "loc": {
      "start": {
        "line": 4767,
        "column": 0
      },
      "end": {
        "line": 4786,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4787,
          "column": 0
        },
        "end": {
          "line": 4790,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "textAlign",
    "params": [
      {
        "name": "align",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The horizontal text alignment to set. Must be one of the InDesign Justification enum values:\n                          Justification.AWAY_FROM_BINDING_SIDE ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 64,
                      "offset": 156
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "html",
                  "value": "<br />",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 64,
                      "offset": 156
                    },
                    "end": {
                      "line": 2,
                      "column": 70,
                      "offset": 162
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "\n                          Justification.CENTER_ALIGN ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 70,
                      "offset": 162
                    },
                    "end": {
                      "line": 3,
                      "column": 54,
                      "offset": 216
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "html",
                  "value": "<br />",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 54,
                      "offset": 216
                    },
                    "end": {
                      "line": 3,
                      "column": 60,
                      "offset": 222
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "\n                          Justification.CENTER_JUSTIFIED ",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 60,
                      "offset": 222
                    },
                    "end": {
                      "line": 4,
                      "column": 58,
                      "offset": 280
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "html",
                  "value": "<br />",
                  "position": {
                    "start": {
                      "line": 4,
                      "column": 58,
                      "offset": 280
                    },
                    "end": {
                      "line": 4,
                      "column": 64,
                      "offset": 286
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "\n                          Justification.FULLY_JUSTIFIED ",
                  "position": {
                    "start": {
                      "line": 4,
                      "column": 64,
                      "offset": 286
                    },
                    "end": {
                      "line": 5,
                      "column": 57,
                      "offset": 343
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "html",
                  "value": "<br />",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 57,
                      "offset": 343
                    },
                    "end": {
                      "line": 5,
                      "column": 63,
                      "offset": 349
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "\n                          Justification.LEFT_ALIGN ",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 63,
                      "offset": 349
                    },
                    "end": {
                      "line": 6,
                      "column": 52,
                      "offset": 401
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "html",
                  "value": "<br />",
                  "position": {
                    "start": {
                      "line": 6,
                      "column": 52,
                      "offset": 401
                    },
                    "end": {
                      "line": 6,
                      "column": 58,
                      "offset": 407
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "\n                          Justification.RIGHT_ALIGN ",
                  "position": {
                    "start": {
                      "line": 6,
                      "column": 58,
                      "offset": 407
                    },
                    "end": {
                      "line": 7,
                      "column": 53,
                      "offset": 460
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "html",
                  "value": "<br />",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 53,
                      "offset": 460
                    },
                    "end": {
                      "line": 7,
                      "column": 59,
                      "offset": 466
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "\n                          Justification.RIGHT_JUSTIFIED ",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 59,
                      "offset": 466
                    },
                    "end": {
                      "line": 8,
                      "column": 57,
                      "offset": 523
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "html",
                  "value": "<br />",
                  "position": {
                    "start": {
                      "line": 8,
                      "column": 57,
                      "offset": 523
                    },
                    "end": {
                      "line": 8,
                      "column": 63,
                      "offset": 529
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "\n                          Justification.TO_BINDING_SIDE ",
                  "position": {
                    "start": {
                      "line": 8,
                      "column": 63,
                      "offset": 529
                    },
                    "end": {
                      "line": 9,
                      "column": 57,
                      "offset": 586
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "html",
                  "value": "<br />",
                  "position": {
                    "start": {
                      "line": 9,
                      "column": 57,
                      "offset": 586
                    },
                    "end": {
                      "line": 9,
                      "column": 63,
                      "offset": 592
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 9,
                  "column": 63,
                  "offset": 592
                },
                "indent": [
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 9,
              "column": 63,
              "offset": 592
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      },
      {
        "name": "yAlign",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The vertical text alignment to set. Must be one of the InDesign VerticalJustification enum values:\n                          VerticalJustification.BOTTOM_ALIGN ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 62,
                      "offset": 160
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "html",
                  "value": "<br />",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 62,
                      "offset": 160
                    },
                    "end": {
                      "line": 2,
                      "column": 68,
                      "offset": 166
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "\n                          VerticalJustification.CENTER_ALIGN ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 68,
                      "offset": 166
                    },
                    "end": {
                      "line": 3,
                      "column": 62,
                      "offset": 228
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "html",
                  "value": "<br />",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 62,
                      "offset": 228
                    },
                    "end": {
                      "line": 3,
                      "column": 68,
                      "offset": 234
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "\n                          VerticalJustification.JUSTIFY_ALIGN ",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 68,
                      "offset": 234
                    },
                    "end": {
                      "line": 4,
                      "column": 63,
                      "offset": 297
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "html",
                  "value": "<br />",
                  "position": {
                    "start": {
                      "line": 4,
                      "column": 63,
                      "offset": 297
                    },
                    "end": {
                      "line": 4,
                      "column": 69,
                      "offset": 303
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "\n                          VerticalJustification.TOP_ALIGN ",
                  "position": {
                    "start": {
                      "line": 4,
                      "column": 69,
                      "offset": 303
                    },
                    "end": {
                      "line": 5,
                      "column": 59,
                      "offset": 362
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "html",
                  "value": "<br />",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 59,
                      "offset": 362
                    },
                    "end": {
                      "line": 5,
                      "column": 65,
                      "offset": 368
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 5,
                  "column": 65,
                  "offset": 368
                },
                "indent": [
                  1,
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 5,
              "column": 65,
              "offset": 368
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "textAlign",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".textAlign"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the spacing between lines of text in units of points and sets it if argument leading is given.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 103,
                  "offset": 102
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 103,
              "offset": 102
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 103,
          "offset": 102
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Typography",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "textLeading"
      },
      {
        "title": "param",
        "description": "The spacing between lines of text in units of points or the default Indesign enum\n                                  value Leading.AUTO.",
        "lineNumber": 5,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "Number"
              },
              {
                "type": "NameExpression",
                "name": "String"
              }
            ]
          }
        },
        "name": "leading"
      },
      {
        "title": "return",
        "description": "The current leading.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 4792,
        "column": 0
      },
      "end": {
        "line": 4800,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4801,
          "column": 0
        },
        "end": {
          "line": 4806,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "textLeading",
    "params": [
      {
        "name": "leading",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The spacing between lines of text in units of points or the default Indesign enum\n                                  value Leading.AUTO.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 54,
                      "offset": 135
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 54,
                  "offset": 135
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 54,
              "offset": 135
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "Number"
              },
              {
                "type": "NameExpression",
                "name": "String"
              }
            ]
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The current leading.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "textLeading",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".textLeading"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the current kerning and sets it if argument kerning is given.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 70,
                  "offset": 69
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 70,
              "offset": 69
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 70,
          "offset": 69
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Typography",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "textKerning"
      },
      {
        "title": "param",
        "description": "The value to set.",
        "lineNumber": 5,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "kerning"
      },
      {
        "title": "return",
        "description": "The current kerning.",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 4808,
        "column": 0
      },
      "end": {
        "line": 4815,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4816,
          "column": 0
        },
        "end": {
          "line": 4821,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "textKerning",
    "params": [
      {
        "name": "kerning",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The value to set.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The current kerning.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "textKerning",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".textKerning"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the current tracking and sets it if argument tracking is given.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 72,
                  "offset": 71
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 72,
              "offset": 71
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 72,
          "offset": 71
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Typography",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "textTracking"
      },
      {
        "title": "param",
        "description": "The value to set.",
        "lineNumber": 5,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "tracking"
      },
      {
        "title": "return",
        "description": "The current tracking.",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 4823,
        "column": 0
      },
      "end": {
        "line": 4830,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4831,
          "column": 0
        },
        "end": {
          "line": 4836,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "textTracking",
    "params": [
      {
        "name": "tracking",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The value to set.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The current tracking.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "textTracking",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".textTracking"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the character style of a given text object or the character style with the given name. If a\ncharacter style of the given name does not exist, it gets created. Optionally a props object of\nproperty name/value pairs can be used to set the character style's properties.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 79,
                  "offset": 274
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 79,
              "offset": 274
            },
            "indent": [
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 79,
          "offset": 274
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Typography",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "characterStyle"
      },
      {
        "title": "param",
        "description": "A text object whose style to return or the name of the character style to return.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Text"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        },
        "name": "textOrName"
      },
      {
        "title": "param",
        "description": "Optional: An object of property name/value pairs to set the style's properties.",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Object"
          }
        },
        "name": "props"
      },
      {
        "title": "return",
        "description": "The character style instance.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "CharacterStyle"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 4838,
        "column": 0
      },
      "end": {
        "line": 4848,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4849,
          "column": 0
        },
        "end": {
          "line": 4879,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "characterStyle",
    "params": [
      {
        "name": "textOrName",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A text object whose style to return or the name of the character style to return.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 82,
                      "offset": 81
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 82,
                  "offset": 81
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 82,
              "offset": 81
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Text"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        }
      },
      {
        "name": "props",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Optional: An object of property name/value pairs to set the style's properties.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 80,
                      "offset": 79
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 80,
                  "offset": 79
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 80,
              "offset": 79
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Object"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The character style instance.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 30,
              "offset": 29
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "CharacterStyle"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "characterStyle",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".characterStyle"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Applies a character style to the given text object, text frame or story. The character style\ncan be given as name or as character style instance.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 53,
                  "offset": 145
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 53,
              "offset": 145
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 53,
          "offset": 145
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Typography",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "applyCharacterStyle"
      },
      {
        "title": "param",
        "description": "The text frame, text object or story to apply the style to.",
        "lineNumber": 6,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "TextFrame"
            },
            {
              "type": "NameExpression",
              "name": "TextObject"
            },
            {
              "type": "NameExpression",
              "name": "Story"
            }
          ]
        },
        "name": "text"
      },
      {
        "title": "param",
        "description": "A character style instance or the name of the character style to apply.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "CharacterStyle"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        },
        "name": "style"
      },
      {
        "title": "return",
        "description": "The text that the style was applied to.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Text"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 4881,
        "column": 0
      },
      "end": {
        "line": 4890,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4892,
          "column": 0
        },
        "end": {
          "line": 4913,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "applyCharacterStyle",
    "params": [
      {
        "name": "text",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The text frame, text object or story to apply the style to.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 60,
                      "offset": 59
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 60,
                  "offset": 59
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 60,
              "offset": 59
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "TextFrame"
            },
            {
              "type": "NameExpression",
              "name": "TextObject"
            },
            {
              "type": "NameExpression",
              "name": "Story"
            }
          ]
        }
      },
      {
        "name": "style",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A character style instance or the name of the character style to apply.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 72,
                      "offset": 71
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 72,
                  "offset": 71
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 72,
              "offset": 71
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "CharacterStyle"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The text that the style was applied to.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 40,
                      "offset": 39
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 40,
                  "offset": 39
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 40,
              "offset": 39
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Text"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "applyCharacterStyle",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".applyCharacterStyle"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the paragraph style of a given text object or the paragraph style with the given name. If a\nparagraph style of the given name does not exist, it gets created. Optionally a props object of\nproperty name/value pairs can be used to set the paragraph style's properties.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 79,
                  "offset": 274
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 79,
              "offset": 274
            },
            "indent": [
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 79,
          "offset": 274
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Typography",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "paragraphStyle"
      },
      {
        "title": "param",
        "description": "A text object whose style to return or the name of the paragraph style to return.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Text"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        },
        "name": "textOrName"
      },
      {
        "title": "param",
        "description": "Optional: An object of property name/value pairs to set the style's properties.",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Object"
          }
        },
        "name": "props"
      },
      {
        "title": "return",
        "description": "The paragraph style instance.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "ParagraphStyle"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 4915,
        "column": 0
      },
      "end": {
        "line": 4925,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4926,
          "column": 0
        },
        "end": {
          "line": 4956,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "paragraphStyle",
    "params": [
      {
        "name": "textOrName",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A text object whose style to return or the name of the paragraph style to return.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 82,
                      "offset": 81
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 82,
                  "offset": 81
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 82,
              "offset": 81
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Text"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        }
      },
      {
        "name": "props",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Optional: An object of property name/value pairs to set the style's properties.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 80,
                      "offset": 79
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 80,
                  "offset": 79
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 80,
              "offset": 79
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Object"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The paragraph style instance.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 30,
              "offset": 29
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "ParagraphStyle"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "paragraphStyle",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".paragraphStyle"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Applies a paragraph style to the given text object, text frame or story. The paragraph style\ncan be given as name or as paragraph style instance.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 53,
                  "offset": 145
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 53,
              "offset": 145
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 53,
          "offset": 145
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Typography",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "applyParagraphStyle"
      },
      {
        "title": "param",
        "description": "The text frame, text object or story to apply the style to.",
        "lineNumber": 6,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "TextFrame"
            },
            {
              "type": "NameExpression",
              "name": "TextObject"
            },
            {
              "type": "NameExpression",
              "name": "Story"
            }
          ]
        },
        "name": "text"
      },
      {
        "title": "param",
        "description": "A paragraph style instance or the name of the paragraph style to apply.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "ParagraphStyle"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        },
        "name": "style"
      },
      {
        "title": "return",
        "description": "The text that the style was applied to.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Text"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 4958,
        "column": 0
      },
      "end": {
        "line": 4967,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 4969,
          "column": 0
        },
        "end": {
          "line": 4990,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "applyParagraphStyle",
    "params": [
      {
        "name": "text",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The text frame, text object or story to apply the style to.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 60,
                      "offset": 59
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 60,
                  "offset": 59
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 60,
              "offset": 59
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "TextFrame"
            },
            {
              "type": "NameExpression",
              "name": "TextObject"
            },
            {
              "type": "NameExpression",
              "name": "Story"
            }
          ]
        }
      },
      {
        "name": "style",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A paragraph style instance or the name of the paragraph style to apply.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 72,
                      "offset": 71
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 72,
                  "offset": 71
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 72,
              "offset": 71
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "ParagraphStyle"
            },
            {
              "type": "NameExpression",
              "name": "String"
            }
          ]
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The text that the style was applied to.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 40,
                      "offset": 39
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 40,
                  "offset": 39
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 40,
              "offset": 39
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Text"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "applyParagraphStyle",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".applyParagraphStyle"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Links the stories of two textframes to one story. Text of first textframe overflows to second one.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 99,
                  "offset": 98
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 99,
              "offset": 98
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 99,
          "offset": 98
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Story",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "linkTextFrames"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "TextFrame"
        },
        "name": "textFrameA"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "TextFrame"
        },
        "name": "textFrameB"
      }
    ],
    "loc": {
      "start": {
        "line": 4992,
        "column": 0
      },
      "end": {
        "line": 4999,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5000,
          "column": 0
        },
        "end": {
          "line": 5006,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "linkTextFrames",
    "params": [
      {
        "name": "textFrameA",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "TextFrame"
        }
      },
      {
        "name": "textFrameB",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "TextFrame"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "linkTextFrames",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".linkTextFrames"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Fills the given textFrame and all linked textFrame with random placeholder text. The placeholder text will be added at the end of any already existing text in the text frame.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 175,
                  "offset": 174
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 175,
              "offset": 174
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 175,
          "offset": 174
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Story",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "placeholder"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "TextFrame"
        },
        "name": "textFrame"
      },
      {
        "title": "return",
        "description": "The inserted placeholder text.",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Text"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5008,
        "column": 0
      },
      "end": {
        "line": 5015,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5016,
          "column": 0
        },
        "end": {
          "line": 5025,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "placeholder",
    "params": [
      {
        "name": "textFrame",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "TextFrame"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The inserted placeholder text.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 31,
              "offset": 30
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Text"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "placeholder",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".placeholder"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Adds an image to the document. If the image argument is given as a string the image file must be in the document's\ndata directory which is in the same directory where the document is saved in. The image argument can also be a File\ninstance which can be placed even before the document was saved.\nThe second argument can either be the x position of the frame to create or an instance of a rectangle,\noval or polygon to place the image in. If an x position is given, a y position must be given, too.\nIf x and y positions are given and width and height are not given, the frame's size gets set to the original image size.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 6,
                  "column": 121,
                  "offset": 618
                },
                "indent": [
                  1,
                  1,
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 6,
              "column": 121,
              "offset": 618
            },
            "indent": [
              1,
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 6,
          "column": 121,
          "offset": 618
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 8
      },
      {
        "title": "subcat",
        "description": "Image",
        "lineNumber": 9
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 10,
        "name": "image"
      },
      {
        "title": "param",
        "description": "The image file name in the document's data directory or a File instance",
        "lineNumber": 11,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "File"
            }
          ]
        },
        "name": "img"
      },
      {
        "title": "param",
        "description": "The x position on the current page or the item instance to place the image in",
        "lineNumber": 12,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "Rectangle"
            },
            {
              "type": "NameExpression",
              "name": "Oval"
            },
            {
              "type": "NameExpression",
              "name": "Polygon"
            }
          ]
        },
        "name": "x"
      },
      {
        "title": "param",
        "description": "The y position on the current page. Ignored if x is not a number.",
        "lineNumber": 13,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "y"
      },
      {
        "title": "param",
        "description": "The width of the rectangle to add the image to. Ignored if x is not a number.",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "w"
      },
      {
        "title": "param",
        "description": "The height of the rectangle to add the image to. Ignored if x is not a number.",
        "lineNumber": 15,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "h"
      },
      {
        "title": "return",
        "description": "The item instance the image was placed in.",
        "lineNumber": 16,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Rectangle"
            },
            {
              "type": "NameExpression",
              "name": "Oval"
            },
            {
              "type": "NameExpression",
              "name": "Polygon"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5029,
        "column": 0
      },
      "end": {
        "line": 5046,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5047,
          "column": 0
        },
        "end": {
          "line": 5125,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "image",
    "params": [
      {
        "name": "img",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The image file name in the document's data directory or a File instance",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 72,
                      "offset": 71
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 72,
                  "offset": 71
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 72,
              "offset": 71
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "File"
            }
          ]
        }
      },
      {
        "name": "x",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The x position on the current page or the item instance to place the image in",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 78,
                      "offset": 77
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 78,
                  "offset": 77
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 78,
              "offset": 77
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "Rectangle"
            },
            {
              "type": "NameExpression",
              "name": "Oval"
            },
            {
              "type": "NameExpression",
              "name": "Polygon"
            }
          ]
        }
      },
      {
        "name": "y",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The y position on the current page. Ignored if x is not a number.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 66,
                      "offset": 65
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 66,
                  "offset": 65
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 66,
              "offset": 65
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      },
      {
        "name": "w",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The width of the rectangle to add the image to. Ignored if x is not a number.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 78,
                      "offset": 77
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 78,
                  "offset": 77
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 78,
              "offset": 77
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      },
      {
        "name": "h",
        "lineNumber": 15,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The height of the rectangle to add the image to. Ignored if x is not a number.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 79,
                      "offset": 78
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 79,
                  "offset": 78
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 79,
              "offset": 78
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The item instance the image was placed in.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 43,
                  "offset": 42
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 43,
              "offset": 42
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Rectangle"
            },
            {
              "type": "NameExpression",
              "name": "Oval"
            },
            {
              "type": "NameExpression",
              "name": "Polygon"
            }
          ]
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "image",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".image"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Transforms position and size of an image.\nThe image fit options are always \"contentToFrame\".",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 51,
                  "offset": 92
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 51,
              "offset": 92
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 51,
          "offset": 92
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 4
      },
      {
        "title": "subcat",
        "description": "Image",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "transformImage"
      },
      {
        "title": "param",
        "description": "The image to transform",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Graphic"
        },
        "name": "img"
      },
      {
        "title": "param",
        "description": "New x",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "x"
      },
      {
        "title": "param",
        "description": "New y",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "y"
      },
      {
        "title": "param",
        "description": "New width",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "width"
      },
      {
        "title": "param",
        "description": "New height",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "height"
      }
    ],
    "loc": {
      "start": {
        "line": 5127,
        "column": 0
      },
      "end": {
        "line": 5139,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5140,
          "column": 0
        },
        "end": {
          "line": 5152,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "transformImage",
    "params": [
      {
        "name": "img",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The image to transform",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Graphic"
        }
      },
      {
        "name": "x",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "New x",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 6,
                      "offset": 5
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 6,
              "offset": 5
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "y",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "New y",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 6,
                      "offset": 5
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 6,
              "offset": 5
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "width",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "New width",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 10,
                      "offset": 9
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 10,
                  "offset": 9
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 10,
              "offset": 9
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "height",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "New height",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 11,
                  "offset": 10
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 11,
              "offset": 10
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "transformImage",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".transformImage"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Modifies the location from which images draw. The default mode is imageMode(CORNER), which specifies the location to be the upper left corner and uses the fourth and fifth parameters of image() to set the image's width and height. The syntax imageMode(CORNERS) uses the second and third parameters of image() to set the location of one corner of the image and uses the fourth and fifth parameters to set the opposite corner. Use imageMode(CENTER) to draw images centered at the given x and y position.\nIf no parameter is passed the currently set mode is returned as String.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 72,
                  "offset": 573
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 72,
              "offset": 573
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 72,
          "offset": 573
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 4
      },
      {
        "title": "subcat",
        "description": "Image",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "imageMode"
      },
      {
        "title": "param",
        "description": "Either b.CORNER, b.CORNERS, or b.CENTER",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        },
        "name": "mode"
      },
      {
        "title": "return",
        "description": "The current mode",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5154,
        "column": 0
      },
      "end": {
        "line": 5163,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5164,
          "column": 0
        },
        "end": {
          "line": 5173,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "imageMode",
    "params": [
      {
        "name": "mode",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Either b.CORNER, b.CORNERS, or b.CENTER",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 40,
                      "offset": 39
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 40,
                  "offset": 39
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 40,
              "offset": 39
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The current mode",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "imageMode",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".imageMode"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Calculates the absolute value (magnitude) of a number. The absolute value of a number is always positive.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 106,
                  "offset": 105
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 106,
              "offset": 105
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 106,
          "offset": 105
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Calculation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "abs"
      },
      {
        "title": "param",
        "description": "An arbitrary number",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "val"
      },
      {
        "title": "return",
        "description": "The absolute value of that number",
        "lineNumber": 7,
        "type": null
      }
    ],
    "loc": {
      "start": {
        "line": 5496,
        "column": 0
      },
      "end": {
        "line": 5504,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5505,
          "column": 0
        },
        "end": {
          "line": 5505,
          "column": 19
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "abs",
    "params": [
      {
        "name": "val",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "An arbitrary number",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The absolute value of that number",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 34,
                      "offset": 33
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 34,
                  "offset": 33
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 34,
              "offset": 33
            }
          }
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "abs",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".abs"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Calculates the closest int value that is greater than or equal to the value of the parameter. For example, ceil(9.03) returns the value 10.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 140,
                  "offset": 139
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 140,
              "offset": 139
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 140,
          "offset": 139
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Calculation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "ceil"
      },
      {
        "title": "param",
        "description": "An arbitrary number",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "val"
      },
      {
        "title": "return",
        "description": "The next highest integer value",
        "lineNumber": 7,
        "type": null
      }
    ],
    "loc": {
      "start": {
        "line": 5507,
        "column": 0
      },
      "end": {
        "line": 5515,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5516,
          "column": 0
        },
        "end": {
          "line": 5516,
          "column": 21
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "ceil",
    "params": [
      {
        "name": "val",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "An arbitrary number",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The next highest integer value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 31,
              "offset": 30
            }
          }
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "ceil",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".ceil"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Constrains a value to not exceed a maximum and minimum value.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 62,
                  "offset": 61
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 62,
              "offset": 61
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 62,
          "offset": 61
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Calculation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "constrain"
      },
      {
        "title": "param",
        "description": "the value to constrain",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "aNumber"
      },
      {
        "title": "param",
        "description": "minimum limit",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "aMin"
      },
      {
        "title": "param",
        "description": "maximum limit",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "aMax"
      },
      {
        "title": "return",
        "description": "The constrained value",
        "lineNumber": 9,
        "type": null
      }
    ],
    "loc": {
      "start": {
        "line": 5518,
        "column": 0
      },
      "end": {
        "line": 5528,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5529,
          "column": 0
        },
        "end": {
          "line": 5534,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "constrain",
    "params": [
      {
        "name": "aNumber",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "the value to constrain",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "aMin",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "minimum limit",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 14,
              "offset": 13
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "aMax",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "maximum limit",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 14,
              "offset": 13
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The constrained value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "constrain",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".constrain"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Calculates the distance between two points.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 44,
                  "offset": 43
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 44,
              "offset": 43
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 44,
          "offset": 43
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Calculation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "dist"
      },
      {
        "title": "param",
        "description": "the x-coordinate of the first point",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "x1"
      },
      {
        "title": "param",
        "description": "the y-coordinate of the first point",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "y1"
      },
      {
        "title": "param",
        "description": "the x-coordinate of the second point",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "x2"
      },
      {
        "title": "param",
        "description": "the y-coordinate of the second point",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "y2"
      },
      {
        "title": "return",
        "description": "The distance",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5536,
        "column": 0
      },
      "end": {
        "line": 5547,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5548,
          "column": 0
        },
        "end": {
          "line": 5557,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "dist",
    "params": [
      {
        "name": "x1",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "the x-coordinate of the first point",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 36,
                      "offset": 35
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 36,
                  "offset": 35
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 36,
              "offset": 35
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "y1",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "the y-coordinate of the first point",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 36,
                      "offset": 35
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 36,
                  "offset": 35
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 36,
              "offset": 35
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "x2",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "the x-coordinate of the second point",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 37,
                      "offset": 36
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 37,
                  "offset": 36
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 37,
              "offset": 36
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "y2",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "the y-coordinate of the second point",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 37,
                      "offset": 36
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 37,
                  "offset": 36
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 37,
              "offset": 36
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The distance",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 13,
                      "offset": 12
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 13,
                  "offset": 12
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 13,
              "offset": 12
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "dist",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".dist"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns Euler's number e (2.71828...) raised to the power of the value parameter.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 82,
                  "offset": 81
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 82,
              "offset": 81
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 82,
          "offset": 81
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Calculation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "exp"
      },
      {
        "title": "param",
        "description": "value",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "a"
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5559,
        "column": 0
      },
      "end": {
        "line": 5567,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5568,
          "column": 0
        },
        "end": {
          "line": 5568,
          "column": 19
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "exp",
    "params": [
      {
        "name": "a",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 6,
                      "offset": 5
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 6,
              "offset": 5
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "exp",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".exp"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Calculates the closest int value that is less than or equal to the value of the parameter.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 91,
                  "offset": 90
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 91,
              "offset": 90
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 91,
          "offset": 90
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Calculation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "floor"
      },
      {
        "title": "param",
        "description": "value",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "a"
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5570,
        "column": 0
      },
      "end": {
        "line": 5578,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5579,
          "column": 0
        },
        "end": {
          "line": 5579,
          "column": 23
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "floor",
    "params": [
      {
        "name": "a",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 6,
                      "offset": 5
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 6,
              "offset": 5
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "floor",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".floor"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Calculates a number between two numbers at a specific increment. The amt parameter is the amount to interpolate between the two values where 0.0 equal to the first point, 0.1 is very near the first point, 0.5 is half-way in between, etc. The lerp function is convenient for creating motion along a straight path and for drawing dotted lines.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 342,
                  "offset": 341
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 342,
              "offset": 341
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 342,
          "offset": 341
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Calculation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "lerp"
      },
      {
        "title": "param",
        "description": "first value",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "value1"
      },
      {
        "title": "param",
        "description": "second value",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "value2"
      },
      {
        "title": "param",
        "description": "between 0.0 and 1.0",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "amt"
      },
      {
        "title": "return",
        "description": "The mapped value",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5581,
        "column": 0
      },
      "end": {
        "line": 5591,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5592,
          "column": 0
        },
        "end": {
          "line": 5595,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "lerp",
    "params": [
      {
        "name": "value1",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "first value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 12,
                      "offset": 11
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 12,
                  "offset": 11
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 12,
              "offset": 11
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "value2",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "second value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 13,
                      "offset": 12
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 13,
                  "offset": 12
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 13,
              "offset": 12
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "amt",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "between 0.0 and 1.0",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The mapped value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "lerp",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".lerp"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Calculates the natural logarithm (the base-e logarithm) of a number. This function expects the values greater than 0.0.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 120,
                  "offset": 119
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 120,
              "offset": 119
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 120,
          "offset": 119
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Calculation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "log"
      },
      {
        "title": "param",
        "description": "must be greater then 0.0",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "number"
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5597,
        "column": 0
      },
      "end": {
        "line": 5605,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5606,
          "column": 0
        },
        "end": {
          "line": 5606,
          "column": 19
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "log",
    "params": [
      {
        "name": "number",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "must be greater then 0.0",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "log",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".log"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Calculates the magnitude (or length) of a vector. A vector is a direction in space commonly used in computer graphics and linear algebra. Because it has no \"start\" position, the magnitude of a vector can be thought of as the distance from coordinate (0,0) to its (x,y) value. Therefore, mag() is a shortcut for writing \"dist(0, 0, x, y)\".",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 339,
                  "offset": 338
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 339,
              "offset": 338
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 339,
          "offset": 338
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Calculation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "mag"
      },
      {
        "title": "param",
        "description": "x-coordinate",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "a"
      },
      {
        "title": "param",
        "description": "y-coordinate",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "b"
      },
      {
        "title": "param",
        "description": "z-coordinate",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "c"
      },
      {
        "title": "return",
        "description": "the magnitude",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5608,
        "column": 0
      },
      "end": {
        "line": 5618,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5619,
          "column": 0
        },
        "end": {
          "line": 5623,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "mag",
    "params": [
      {
        "name": "a",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "x-coordinate",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 13,
                      "offset": 12
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 13,
                  "offset": 12
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 13,
              "offset": 12
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "b",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "y-coordinate",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 13,
                      "offset": 12
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 13,
                  "offset": 12
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 13,
              "offset": 12
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "c",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "z-coordinate",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 13,
                      "offset": 12
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 13,
                  "offset": 12
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 13,
              "offset": 12
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "the magnitude",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 14,
              "offset": 13
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "mag",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".mag"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Re-maps a number from one range to another. In the example above, the number '25' is converted from a value in the range 0..100 into a value that ranges from the left edge (0) to the right edge (width) of the screen.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 217,
                  "offset": 216
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 217,
              "offset": 216
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Numbers outside the range are not clamped to 0 and 1, because out-of-range values are often intentional and useful.",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 218
                },
                "end": {
                  "line": 3,
                  "column": 116,
                  "offset": 333
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 218
            },
            "end": {
              "line": 3,
              "column": 116,
              "offset": 333
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 116,
          "offset": 333
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 5
      },
      {
        "title": "subcat",
        "description": "Calculation",
        "lineNumber": 6
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 7,
        "name": "map"
      },
      {
        "title": "param",
        "description": "the value to be mapped",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "value"
      },
      {
        "title": "param",
        "description": "start of the input range",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "istart"
      },
      {
        "title": "param",
        "description": "end of the input range",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "istop"
      },
      {
        "title": "param",
        "description": "start of the output range",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "ostart"
      },
      {
        "title": "param",
        "description": "end of the output range",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "ostop"
      },
      {
        "title": "return",
        "description": "the mapped value",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5625,
        "column": 0
      },
      "end": {
        "line": 5639,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5640,
          "column": 0
        },
        "end": {
          "line": 5643,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "map",
    "params": [
      {
        "name": "value",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "the value to be mapped",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "istart",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "start of the input range",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "istop",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "end of the input range",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "ostart",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "start of the output range",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 26,
                  "offset": 25
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 26,
              "offset": 25
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "ostop",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "end of the output range",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 24,
                  "offset": 23
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 24,
              "offset": 23
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "the mapped value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "map",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".map"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Determines the largest value in a sequence of numbers.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 55,
                  "offset": 54
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 55,
              "offset": 54
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 55,
          "offset": 54
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Calculation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "max"
      },
      {
        "title": "param",
        "description": "Either the first value or an array of Numbers",
        "lineNumber": 6,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            }
          ]
        },
        "name": "param1"
      },
      {
        "title": "param",
        "description": "Another value to be compared",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "param2"
      },
      {
        "title": "param",
        "description": "Another value to be compared",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "param3"
      },
      {
        "title": "return",
        "description": "The highest value",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5645,
        "column": 0
      },
      "end": {
        "line": 5655,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5656,
          "column": 0
        },
        "end": {
          "line": 5664,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "max",
    "params": [
      {
        "name": "param1",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Either the first value or an array of Numbers",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 46,
                      "offset": 45
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 46,
                  "offset": 45
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 46,
              "offset": 45
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            }
          ]
        }
      },
      {
        "name": "param2",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Another value to be compared",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "param3",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Another value to be compared",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The highest value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "max",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".max"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Determines the smallest value in a sequence of numbers.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 56,
                  "offset": 55
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 56,
              "offset": 55
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 56,
          "offset": 55
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Calculation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "min"
      },
      {
        "title": "param",
        "description": "Either the first value or an array of Numbers",
        "lineNumber": 6,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            }
          ]
        },
        "name": "param1"
      },
      {
        "title": "param",
        "description": "Another value to be compared",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "param2"
      },
      {
        "title": "param",
        "description": "Another value to be compared",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "param3"
      },
      {
        "title": "return",
        "description": "The lowest value",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5666,
        "column": 0
      },
      "end": {
        "line": 5676,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5677,
          "column": 0
        },
        "end": {
          "line": 5685,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "min",
    "params": [
      {
        "name": "param1",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Either the first value or an array of Numbers",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 46,
                      "offset": 45
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 46,
                  "offset": 45
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 46,
              "offset": 45
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            }
          ]
        }
      },
      {
        "name": "param2",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Another value to be compared",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "param3",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Another value to be compared",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The lowest value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "min",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".min"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Normalizes a number from another range into a value between 0 and 1.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 69,
              "offset": 68
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Identical to map(value, low, high, 0, 1);",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 70
                },
                "end": {
                  "line": 3,
                  "column": 42,
                  "offset": 111
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 70
            },
            "end": {
              "line": 3,
              "column": 42,
              "offset": 111
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Numbers outside the range are not clamped to 0 and 1, because out-of-range values are often intentional and useful.",
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 113
                },
                "end": {
                  "line": 5,
                  "column": 116,
                  "offset": 228
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 5,
              "column": 1,
              "offset": 113
            },
            "end": {
              "line": 5,
              "column": 116,
              "offset": 228
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 5,
          "column": 116,
          "offset": 228
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 7
      },
      {
        "title": "subcat",
        "description": "Calculation",
        "lineNumber": 8
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 9,
        "name": "norm"
      },
      {
        "title": "param",
        "description": "The value to be normed",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "aNumber"
      },
      {
        "title": "param",
        "description": "The lowest value to be expected",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "low"
      },
      {
        "title": "param",
        "description": "The highest value to be expected",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "low"
      },
      {
        "title": "return",
        "description": "The normalized value",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5687,
        "column": 0
      },
      "end": {
        "line": 5701,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5702,
          "column": 0
        },
        "end": {
          "line": 5705,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "norm",
    "params": [
      {
        "name": "aNumber",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The value to be normed",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "low",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The lowest value to be expected",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 32,
                  "offset": 31
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 32,
              "offset": 31
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "low",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The highest value to be expected",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "title": "param",
        "name": "high",
        "lineNumber": 5702
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The normalized value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "norm",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".norm"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Facilitates exponential expressions. The pow() function is an efficient way of multiplying numbers by themselves (or their reciprocal) in large quantities. For example, pow(3, 5) is equivalent to the expression 3",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 213,
                  "offset": 212
                },
                "indent": []
              }
            },
            {
              "type": "emphasis",
              "children": [
                {
                  "type": "text",
                  "value": "3",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 214,
                      "offset": 213
                    },
                    "end": {
                      "line": 1,
                      "column": 215,
                      "offset": 214
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 213,
                  "offset": 212
                },
                "end": {
                  "line": 1,
                  "column": 216,
                  "offset": 215
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "3",
              "position": {
                "start": {
                  "line": 1,
                  "column": 216,
                  "offset": 215
                },
                "end": {
                  "line": 1,
                  "column": 217,
                  "offset": 216
                },
                "indent": []
              }
            },
            {
              "type": "emphasis",
              "children": [
                {
                  "type": "text",
                  "value": "3",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 218,
                      "offset": 217
                    },
                    "end": {
                      "line": 1,
                      "column": 219,
                      "offset": 218
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 217,
                  "offset": 216
                },
                "end": {
                  "line": 1,
                  "column": 220,
                  "offset": 219
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "3 and pow(3, -5) is equivalent to 1 / 3",
              "position": {
                "start": {
                  "line": 1,
                  "column": 220,
                  "offset": 219
                },
                "end": {
                  "line": 1,
                  "column": 259,
                  "offset": 258
                },
                "indent": []
              }
            },
            {
              "type": "emphasis",
              "children": [
                {
                  "type": "text",
                  "value": "3",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 260,
                      "offset": 259
                    },
                    "end": {
                      "line": 1,
                      "column": 261,
                      "offset": 260
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 259,
                  "offset": 258
                },
                "end": {
                  "line": 1,
                  "column": 262,
                  "offset": 261
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "3",
              "position": {
                "start": {
                  "line": 1,
                  "column": 262,
                  "offset": 261
                },
                "end": {
                  "line": 1,
                  "column": 263,
                  "offset": 262
                },
                "indent": []
              }
            },
            {
              "type": "emphasis",
              "children": [
                {
                  "type": "text",
                  "value": "3",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 264,
                      "offset": 263
                    },
                    "end": {
                      "line": 1,
                      "column": 265,
                      "offset": 264
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 263,
                  "offset": 262
                },
                "end": {
                  "line": 1,
                  "column": 266,
                  "offset": 265
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "3",
              "position": {
                "start": {
                  "line": 1,
                  "column": 266,
                  "offset": 265
                },
                "end": {
                  "line": 1,
                  "column": 267,
                  "offset": 266
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 267,
              "offset": 266
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 267,
          "offset": 266
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Calculation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "pow"
      },
      {
        "title": "param",
        "description": "base of the exponential expression",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "num"
      },
      {
        "title": "param",
        "description": "power of which to raise the base",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "exponent"
      },
      {
        "title": "return",
        "description": "the result",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5707,
        "column": 0
      },
      "end": {
        "line": 5716,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5717,
          "column": 0
        },
        "end": {
          "line": 5717,
          "column": 19
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "pow",
    "params": [
      {
        "name": "num",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "base of the exponential expression",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 35,
                  "offset": 34
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 35,
              "offset": 34
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "exponent",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "power of which to raise the base",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "the result",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 11,
                  "offset": 10
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 11,
              "offset": 10
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "pow",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".pow"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Calculates the integer closest to the value parameter. For example, round(9.2) returns the value 9.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 100,
                  "offset": 99
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 100,
              "offset": 99
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 100,
          "offset": 99
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Calculation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "round"
      },
      {
        "title": "param",
        "description": "The value to be rounded",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "value"
      },
      {
        "title": "return",
        "description": "The rounded value",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5719,
        "column": 0
      },
      "end": {
        "line": 5727,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5728,
          "column": 0
        },
        "end": {
          "line": 5728,
          "column": 23
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "round",
    "params": [
      {
        "name": "value",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The value to be rounded",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 24,
                  "offset": 23
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 24,
              "offset": 23
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The rounded value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "round",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".round"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Squares a number (multiplies a number by itself). The result is always a positive number, as multiplying two negative numbers always yields a positive result. For example, -1 * -1 = 1.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 185,
                  "offset": 184
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 185,
              "offset": 184
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 185,
          "offset": 184
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Calculation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "sq"
      },
      {
        "title": "param",
        "description": "The value to be squared",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "aNumber"
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5730,
        "column": 0
      },
      "end": {
        "line": 5738,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5739,
          "column": 0
        },
        "end": {
          "line": 5742,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "sq",
    "params": [
      {
        "name": "aNumber",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The value to be squared",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 24,
                  "offset": 23
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 24,
              "offset": 23
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "sq",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".sq"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Calculates the square root of a number. The square root of a number is always positive, even though there may be a valid negative root. The square root s of number a is such that s*s = a. It is the opposite of squaring.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 220,
                  "offset": 219
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 220,
              "offset": 219
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 220,
          "offset": 219
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Trigonometry",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "sqrt"
      },
      {
        "title": "param",
        "description": "The value to be calculated",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "val"
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5746,
        "column": 0
      },
      "end": {
        "line": 5754,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5755,
          "column": 0
        },
        "end": {
          "line": 5755,
          "column": 21
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "sqrt",
    "params": [
      {
        "name": "val",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The value to be calculated",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "sqrt",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".sqrt"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The inverse of cos(), returns the arc cosine of a value. This function expects the values in the range of -1 to 1 and values are returned in the range 0 to PI (3.1415927).",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 172,
                  "offset": 171
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 172,
              "offset": 171
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 172,
          "offset": 171
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Trigonometry",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "acos"
      },
      {
        "title": "param",
        "description": "the value whose arc cosine is to be returned",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "value"
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5757,
        "column": 0
      },
      "end": {
        "line": 5765,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5766,
          "column": 0
        },
        "end": {
          "line": 5766,
          "column": 21
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "acos",
    "params": [
      {
        "name": "value",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "the value whose arc cosine is to be returned",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 45,
                      "offset": 44
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 45,
                  "offset": 44
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 45,
              "offset": 44
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "acos",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".acos"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The inverse of sin(), returns the arc sine of a value. This function expects the values in the range of -1 to 1 and values are returned in the range 0 to PI (3.1415927).",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 170,
                  "offset": 169
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 170,
              "offset": 169
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 170,
          "offset": 169
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Trigonometry",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "asin"
      },
      {
        "title": "param",
        "description": "the value whose arc sine is to be returned",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "value"
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5768,
        "column": 0
      },
      "end": {
        "line": 5776,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5777,
          "column": 0
        },
        "end": {
          "line": 5777,
          "column": 21
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "asin",
    "params": [
      {
        "name": "value",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "the value whose arc sine is to be returned",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 43,
                  "offset": 42
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 43,
              "offset": 42
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "asin",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".asin"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The inverse of tan(), returns the arc tangent of a value. This function expects the values in the range of -1 to 1 and values are returned in the range 0 to PI (3.1415927).",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 173,
                  "offset": 172
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 173,
              "offset": 172
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 173,
          "offset": 172
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Trigonometry",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "atan"
      },
      {
        "title": "param",
        "description": "the value whose arc tangent is to be returned",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "value"
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5779,
        "column": 0
      },
      "end": {
        "line": 5787,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5788,
          "column": 0
        },
        "end": {
          "line": 5788,
          "column": 21
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "atan",
    "params": [
      {
        "name": "value",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "the value whose arc tangent is to be returned",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 46,
                      "offset": 45
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 46,
                  "offset": 45
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 46,
              "offset": 45
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "atan",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".atan"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Calculates the angle (in radians) from a specified point to the coordinate origin as measured from the positive x-axis. Values are returned as a float in the range from PI to -PI. The atan2() function is most often used for orienting geometry to the position of the cursor. Note: The y-coordinate of the point is the first parameter and the x-coordinate is the second due the the structure of calculating the tangent.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 418,
                  "offset": 417
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 418,
              "offset": 417
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 418,
          "offset": 417
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Trigonometry",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "atan2"
      },
      {
        "title": "param",
        "description": "the y coordinate",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "y"
      },
      {
        "title": "param",
        "description": "the x coordinate",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "x"
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5790,
        "column": 0
      },
      "end": {
        "line": 5799,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5800,
          "column": 0
        },
        "end": {
          "line": 5800,
          "column": 23
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "atan2",
    "params": [
      {
        "name": "y",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "the y coordinate",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "x",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "the x coordinate",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "atan2",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".atan2"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Calculates the cosine of an angle. This function expects the values of the angle parameter to be provided in radians (values from 0 to PI*2). Values are returned in the range -1 to 1.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 184,
                  "offset": 183
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 184,
              "offset": 183
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 184,
          "offset": 183
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Trigonometry",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "cos"
      },
      {
        "title": "param",
        "description": "a value in radians",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "rad"
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5802,
        "column": 0
      },
      "end": {
        "line": 5810,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5811,
          "column": 0
        },
        "end": {
          "line": 5811,
          "column": 19
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "cos",
    "params": [
      {
        "name": "rad",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "a value in radians",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "cos",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".cos"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Converts a radian measurement to its corresponding value in degrees. Radians and degrees are two ways of measuring the same thing. There are 360 degrees in a circle and 2*PI radians in a circle. For example, 90° = PI/2 = 1.5707964. All trigonometric methods in Processing require their parameters to be specified in radians.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 325,
                  "offset": 324
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 325,
              "offset": 324
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 325,
          "offset": 324
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Trigonometry",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "degrees"
      },
      {
        "title": "param",
        "description": "an angle in radians",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "aAngle"
      },
      {
        "title": "return",
        "description": "The given angle in degree",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5813,
        "column": 0
      },
      "end": {
        "line": 5821,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5822,
          "column": 0
        },
        "end": {
          "line": 5824,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "degrees",
    "params": [
      {
        "name": "aAngle",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "an angle in radians",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The given angle in degree",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 26,
                  "offset": 25
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 26,
              "offset": 25
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "degrees",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".degrees"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Converts a degree measurement to its corresponding value in radians. Radians and degrees are two ways of measuring the same thing. There are 360 degrees in a circle and 2*PI radians in a circle. For example, 90° = PI/2 = 1.5707964. All trigonometric methods in Processing require their parameters to be specified in radians.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 325,
                  "offset": 324
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 325,
              "offset": 324
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 325,
          "offset": 324
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Trigonometry",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "radians"
      },
      {
        "title": "param",
        "description": "an angle in degree",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "aAngle"
      },
      {
        "title": "return",
        "description": "The given angle in radians",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5826,
        "column": 0
      },
      "end": {
        "line": 5834,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5835,
          "column": 0
        },
        "end": {
          "line": 5837,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "radians",
    "params": [
      {
        "name": "aAngle",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "an angle in degree",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The given angle in radians",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "radians",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".radians"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Calculates the sine of an angle. This function expects the values of the angle parameter to be provided in radians (values from 0 to 6.28). Values are returned in the range -1 to 1.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 182,
                  "offset": 181
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 182,
              "offset": 181
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 182,
          "offset": 181
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Trigonometry",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "sin"
      },
      {
        "title": "param",
        "description": "a value in radians",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "rad"
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5839,
        "column": 0
      },
      "end": {
        "line": 5847,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5848,
          "column": 0
        },
        "end": {
          "line": 5848,
          "column": 19
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "sin",
    "params": [
      {
        "name": "rad",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "a value in radians",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "sin",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".sin"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Calculates the ratio of the sine and cosine of an angle. This function expects the values of the angle parameter to be provided in radians (values from 0 to PI*2). Values are returned in the range infinity to -infinity.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 220,
                  "offset": 219
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 220,
              "offset": 219
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 220,
          "offset": 219
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Trigonometry",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "tan"
      },
      {
        "title": "param",
        "description": "a value in radians",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "rad"
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5850,
        "column": 0
      },
      "end": {
        "line": 5858,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5859,
          "column": 0
        },
        "end": {
          "line": 5859,
          "column": 19
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "tan",
    "params": [
      {
        "name": "rad",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "a value in radians",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "tan",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".tan"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Generates random numbers. Each time the random() function is called, it returns an unexpected value within the specified range. If one parameter is passed to the function it will return a float between zero and the value of the high parameter. The function call random(5) returns values between 0 and 5. If two parameters are passed, it will return a float with a value between the the parameters. The function call random(-5, 10.2) returns values between -5 and 10.2.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 469,
                  "offset": 468
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 469,
              "offset": 468
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "One parameter sets the range from 0 to the given parameter, while with two parameters present you set the range from val1 - val2.",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 470
                },
                "end": {
                  "line": 3,
                  "column": 130,
                  "offset": 599
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 470
            },
            "end": {
              "line": 3,
              "column": 130,
              "offset": 599
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 130,
          "offset": 599
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 5
      },
      {
        "title": "subcat",
        "description": "Random",
        "lineNumber": 6
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 7,
        "name": "random"
      },
      {
        "title": "param",
        "description": "The low border of the range",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "low"
      },
      {
        "title": "param",
        "description": "The high border of the range",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "high"
      },
      {
        "title": "return",
        "description": "A random number",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5865,
        "column": 0
      },
      "end": {
        "line": 5876,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5877,
          "column": 0
        },
        "end": {
          "line": 5883,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "random",
    "params": [
      {
        "name": "low",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The low border of the range",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      },
      {
        "name": "high",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The high border of the range",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A random number",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 16,
                  "offset": 15
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 16,
              "offset": 15
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "random",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".random"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the Perlin noise value at specified coordinates. Perlin noise is a random sequence generator producing a more natural ordered, harmonic succession of numbers compared to the standard random() function. It was invented by Ken Perlin in the 1980s and been used since in graphical applications to produce procedural textures, natural motion, shapes, terrains etc.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 369,
                  "offset": 368
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 369,
              "offset": 368
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The main difference to the random() function is that Perlin noise is defined in an infinite n-dimensional space where each pair of coordinates corresponds to a fixed semi-random value (fixed only for the lifespan of the program). The resulting value will always be between 0.0 and 1.0. basil.js can compute 1D, 2D and 3D noise, depending on the number of coordinates given. The noise value can be animated by moving through the noise space. The 2nd and 3rd dimension can also be interpreted as time.",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 370
                },
                "end": {
                  "line": 3,
                  "column": 500,
                  "offset": 869
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 370
            },
            "end": {
              "line": 3,
              "column": 500,
              "offset": 869
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The actual noise is structured similar to an audio signal, in respect to the function's use of frequencies. Similar to the concept of harmonics in physics, perlin noise is computed over several octaves which are added together for the final result.",
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 871
                },
                "end": {
                  "line": 5,
                  "column": 249,
                  "offset": 1119
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 5,
              "column": 1,
              "offset": 871
            },
            "end": {
              "line": 5,
              "column": 249,
              "offset": 1119
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Another way to adjust the character of the resulting sequence is the scale of the input coordinates. As the function works within an infinite space the value of the coordinates doesn't matter as such, only the distance between successive coordinates does (eg. when using noise() within a loop). As a general rule the smaller the difference between coordinates, the smoother the resulting noise sequence will be. Steps of 0.005-0.03 work best for most applications, but this will differ depending on use.",
              "position": {
                "start": {
                  "line": 7,
                  "column": 1,
                  "offset": 1121
                },
                "end": {
                  "line": 7,
                  "column": 504,
                  "offset": 1624
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 7,
              "column": 1,
              "offset": 1121
            },
            "end": {
              "line": 7,
              "column": 504,
              "offset": 1624
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 7,
          "column": 504,
          "offset": 1624
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 9
      },
      {
        "title": "subcat",
        "description": "Random",
        "lineNumber": 10
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 11,
        "name": "noise"
      },
      {
        "title": "param",
        "description": "Coordinate in x space",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "x"
      },
      {
        "title": "param",
        "description": "Coordinate in y space",
        "lineNumber": 13,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "y"
      },
      {
        "title": "param",
        "description": "Coordinate in z space",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "z"
      },
      {
        "title": "return",
        "description": "the noise value",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 6007,
        "column": 0
      },
      "end": {
        "line": 6023,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6024,
          "column": 0
        },
        "end": {
          "line": 6046,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "noise",
    "params": [
      {
        "name": "x",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Coordinate in x space",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "y",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Coordinate in y space",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      },
      {
        "name": "z",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Coordinate in z space",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "the noise value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 16,
                  "offset": 15
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 16,
              "offset": 15
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "noise",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".noise"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Adjusts the character and level of detail produced by the Perlin noise function. Similar to harmonics in physics, noise is computed over several octaves. Lower octaves contribute more to the output signal and as such define the overal intensity of the noise, whereas higher octaves create finer grained details in the noise sequence. By default, noise is computed over 4 octaves with each octave contributing exactly half than its predecessor, starting at 50% strength for the 1st octave. This falloff amount can be changed by adding an additional function parameter. Eg. a falloff factor of 0.75 means each octave will now have 75% impact (25% less) of the previous lower octave. Any value between 0.0 and 1.0 is valid, however note that values greater than 0.5 might result in greater than 1.0 values returned by noise().",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 824,
                  "offset": 823
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 824,
              "offset": 823
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "By changing these parameters, the signal created by the noise() function can be adapted to fit very specific needs and characteristics.",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 825
                },
                "end": {
                  "line": 3,
                  "column": 136,
                  "offset": 960
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 825
            },
            "end": {
              "line": 3,
              "column": 136,
              "offset": 960
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 136,
          "offset": 960
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 5
      },
      {
        "title": "subcat",
        "description": "Random",
        "lineNumber": 6
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 7,
        "name": "noiseDetail"
      },
      {
        "title": "param",
        "description": "number of octaves to be used by the noise() function",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "octaves"
      },
      {
        "title": "param",
        "description": "falloff factor for each octave",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "fallout"
      }
    ],
    "loc": {
      "start": {
        "line": 6048,
        "column": 0
      },
      "end": {
        "line": 6058,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6059,
          "column": 0
        },
        "end": {
          "line": 6062,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "noiseDetail",
    "params": [
      {
        "name": "octaves",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "number of octaves to be used by the noise() function",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 53,
                      "offset": 52
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 53,
                  "offset": 52
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 53,
              "offset": 52
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "fallout",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "falloff factor for each octave",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 31,
              "offset": 30
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "noiseDetail",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".noiseDetail"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets the seed value for noise(). By default, noise() produces different results each time the program is run. Set the value parameter to a constant to return the same pseudo-random numbers each time the software is run.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 220,
                  "offset": 219
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 220,
              "offset": 219
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 220,
          "offset": 219
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Math",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Random",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "noiseSeed"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "seed"
      }
    ],
    "loc": {
      "start": {
        "line": 6064,
        "column": 0
      },
      "end": {
        "line": 6071,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6072,
          "column": 0
        },
        "end": {
          "line": 6075,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "noiseSeed",
    "params": [
      {
        "name": "seed",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "noiseSeed",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".noiseSeed"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The function calculates the geometric bounds of any given object. Use b.itemX(), b.itemY(), b.itemPosition(), b.itemWidth(), b.itemHeight() and b.itemSize() to modify PageItems.\nIn case the object is any kind of text, then additional typographic information baseline and xHeight are calculated",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 116,
                  "offset": 293
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 116,
              "offset": 293
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 116,
          "offset": 293
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 4
      },
      {
        "title": "subcat",
        "description": "Transformation",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "bounds"
      },
      {
        "title": "param",
        "description": "The object to calculate the geometric bounds",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Text"
            },
            {
              "type": "NameExpression",
              "name": "Object"
            }
          ]
        },
        "name": "obj"
      },
      {
        "title": "return",
        "description": "Geometric bounds object with these properties: width, height, left, right, top, bottom and for text: baseline, xHeight",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 6087,
        "column": 0
      },
      "end": {
        "line": 6096,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6097,
          "column": 0
        },
        "end": {
          "line": 6156,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "bounds",
    "params": [
      {
        "name": "obj",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The object to calculate the geometric bounds",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 45,
                      "offset": 44
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 45,
                  "offset": 44
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 45,
              "offset": 44
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Text"
            },
            {
              "type": "NameExpression",
              "name": "Object"
            }
          ]
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Geometric bounds object with these properties: width, height, left, right, top, bottom and for text: baseline, xHeight",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 119,
                      "offset": 118
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 119,
                  "offset": 118
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 119,
              "offset": 118
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "bounds",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".bounds"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Positions a PageItem at the designated spot on the x axis. If no x argument is given the current x position is returned.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 121,
                  "offset": 120
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 121,
              "offset": 120
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 121,
          "offset": 120
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Transformation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "itemX"
      },
      {
        "title": "param",
        "description": "The PageItem to alter",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "PageItem"
        },
        "name": "pItem"
      },
      {
        "title": "param",
        "description": "The new x position",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "x"
      },
      {
        "title": "returns",
        "description": "The current x position",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 6158,
        "column": 0
      },
      "end": {
        "line": 6167,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6168,
          "column": 0
        },
        "end": {
          "line": 6184,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "itemX",
    "params": [
      {
        "name": "pItem",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The PageItem to alter",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "PageItem"
        }
      },
      {
        "name": "x",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The new x position",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The current x position",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "itemX",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".itemX"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Positions a PageItem at the designated spot on the y axis. If no y argument is given the current y position is returned.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 121,
                  "offset": 120
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 121,
              "offset": 120
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 121,
          "offset": 120
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Transformation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "itemY"
      },
      {
        "title": "param",
        "description": "The PageItem to alter",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "PageItem"
        },
        "name": "pItem"
      },
      {
        "title": "param",
        "description": "The new y position",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "y"
      },
      {
        "title": "returns",
        "description": "The current y position",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 6186,
        "column": 0
      },
      "end": {
        "line": 6195,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6196,
          "column": 0
        },
        "end": {
          "line": 6213,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "itemY",
    "params": [
      {
        "name": "pItem",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The PageItem to alter",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "PageItem"
        }
      },
      {
        "name": "y",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The new y position",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The current y position",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "itemY",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".itemY"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Scales the given PageItem to the given width. If width is not given as argument the current width is returned.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 111,
                  "offset": 110
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 111,
              "offset": 110
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 111,
          "offset": 110
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Transformation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "itemWidth"
      },
      {
        "title": "param",
        "description": "The PageItem to alter",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "PageItem"
        },
        "name": "pItem"
      },
      {
        "title": "param",
        "description": "The new width",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "width"
      },
      {
        "title": "returns",
        "description": "The current width",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 6218,
        "column": 0
      },
      "end": {
        "line": 6227,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6228,
          "column": 0
        },
        "end": {
          "line": 6239,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "itemWidth",
    "params": [
      {
        "name": "pItem",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The PageItem to alter",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "PageItem"
        }
      },
      {
        "name": "width",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The new width",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 14,
              "offset": 13
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The current width",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "itemWidth",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".itemWidth"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Scales the given PageItem to the given height. If height is not given as argument the current height is returned.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 114,
                  "offset": 113
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 114,
              "offset": 113
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 114,
          "offset": 113
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Transformation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "itemHeight"
      },
      {
        "title": "param",
        "description": "The PageItem to alter",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "PageItem"
        },
        "name": "pItem"
      },
      {
        "title": "param",
        "description": "The new height",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "height"
      },
      {
        "title": "returns",
        "description": "The current height",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 6241,
        "column": 0
      },
      "end": {
        "line": 6250,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6251,
          "column": 0
        },
        "end": {
          "line": 6262,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "itemHeight",
    "params": [
      {
        "name": "pItem",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The PageItem to alter",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "PageItem"
        }
      },
      {
        "name": "height",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The new height",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 15,
                      "offset": 14
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 15,
                  "offset": 14
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 15,
              "offset": 14
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The current height",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "itemHeight",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".itemHeight"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Moves the given PageItem to the given position. If x or y is not given as argument the current position is returned.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 117,
                  "offset": 116
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 117,
              "offset": 116
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 117,
          "offset": 116
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Transformation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "itemPosition"
      },
      {
        "title": "param",
        "description": "The PageItem to alter",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "PageItem"
        },
        "name": "pItem"
      },
      {
        "title": "param",
        "description": "The new x coordinate",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "x"
      },
      {
        "title": "param",
        "description": "The new y coordinate",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "y"
      },
      {
        "title": "returns",
        "description": "Returns an object with the fields x and y",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 6264,
        "column": 0
      },
      "end": {
        "line": 6274,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6275,
          "column": 0
        },
        "end": {
          "line": 6299,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "itemPosition",
    "params": [
      {
        "name": "pItem",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The PageItem to alter",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "PageItem"
        }
      },
      {
        "name": "x",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The new x coordinate",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      },
      {
        "name": "y",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The new y coordinate",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Returns an object with the fields x and y",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 42,
                      "offset": 41
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 42,
              "offset": 41
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "itemPosition",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".itemPosition"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Scales the given PageItem to the given size. If width or height is not given as argument the current size is returned.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 119,
                  "offset": 118
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 119,
              "offset": 118
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 119,
          "offset": 118
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Transformation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "itemSize"
      },
      {
        "title": "param",
        "description": "The PageItem to alter",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "PageItem"
        },
        "name": "pItem"
      },
      {
        "title": "param",
        "description": "The new width",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "width"
      },
      {
        "title": "param",
        "description": "The new height",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "height"
      },
      {
        "title": "returns",
        "description": "Returns an object with the fields width and height",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 6301,
        "column": 0
      },
      "end": {
        "line": 6311,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6312,
          "column": 0
        },
        "end": {
          "line": 6336,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "itemSize",
    "params": [
      {
        "name": "pItem",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The PageItem to alter",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "PageItem"
        }
      },
      {
        "name": "width",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The new width",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 14,
              "offset": 13
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      },
      {
        "name": "height",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The new height",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 15,
                      "offset": 14
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 15,
                  "offset": 14
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 15,
              "offset": 14
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Returns an object with the fields width and height",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 51,
                      "offset": 50
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 51,
                  "offset": 50
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 51,
              "offset": 50
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "itemSize",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".itemSize"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the current matrix as a Matrix2D object for altering existing PageItems with b.transform(). If a Matrix2D object is provided to the function it will overwrite the current matrix.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 187,
                  "offset": 186
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 187,
              "offset": 186
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 187,
          "offset": 186
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Transformation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "matrix"
      },
      {
        "title": "param",
        "description": "The matrix to be set as new current matrix",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Matrix2D"
          }
        },
        "name": "matrix"
      },
      {
        "title": "returns",
        "description": "Returns the current matrix",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Matrix2D"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 6514,
        "column": 0
      },
      "end": {
        "line": 6522,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6523,
          "column": 0
        },
        "end": {
          "line": 6529,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "matrix",
    "params": [
      {
        "name": "matrix",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The matrix to be set as new current matrix",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 43,
                  "offset": 42
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 43,
              "offset": 42
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Matrix2D"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Returns the current matrix",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Matrix2D"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "matrix",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".matrix"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Transforms the given PageItem with the given Matrix2D object.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 62,
                  "offset": 61
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 62,
              "offset": 61
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 62,
          "offset": 61
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Transformation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "transform"
      },
      {
        "title": "param",
        "description": "The item to be transformed",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "PageItem"
        },
        "name": "obj"
      },
      {
        "title": "param",
        "description": "The matrix to be applied",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Matrix2D"
        },
        "name": "matrix"
      }
    ],
    "loc": {
      "start": {
        "line": 6531,
        "column": 0
      },
      "end": {
        "line": 6539,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6540,
          "column": 0
        },
        "end": {
          "line": 6547,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "transform",
    "params": [
      {
        "name": "obj",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The item to be transformed",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "PageItem"
        }
      },
      {
        "name": "matrix",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The matrix to be applied",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Matrix2D"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "transform",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".transform"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Multiplies the current matrix by the one specified through the parameters.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 75,
                  "offset": 74
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 75,
              "offset": 74
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 75,
          "offset": 74
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Transformation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "applyMatrix"
      },
      {
        "title": "param",
        "description": "The matrix to be applied",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Matrix2D"
        },
        "name": "matrix"
      }
    ],
    "loc": {
      "start": {
        "line": 6549,
        "column": 0
      },
      "end": {
        "line": 6556,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6557,
          "column": 0
        },
        "end": {
          "line": 6559,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "applyMatrix",
    "params": [
      {
        "name": "matrix",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The matrix to be applied",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Matrix2D"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "applyMatrix",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".applyMatrix"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Pops the current transformation matrix off the matrix stack. Understanding pushing and popping requires understanding the concept of a matrix stack. The pushMatrix() function saves the current coordinate system to the stack and popMatrix() restores the prior coordinate system. pushMatrix() and popMatrix() are used in conjuction with the other transformation methods and may be embedded to control the scope of the transformations.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 433,
                  "offset": 432
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 433,
              "offset": 432
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 433,
          "offset": 432
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Transformation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "popMatrix"
      }
    ],
    "loc": {
      "start": {
        "line": 6561,
        "column": 0
      },
      "end": {
        "line": 6567,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6568,
          "column": 0
        },
        "end": {
          "line": 6574,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "popMatrix",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "popMatrix",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".popMatrix"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Prints the current matrix to the console window.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 49,
                  "offset": 48
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 49,
              "offset": 48
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 49,
          "offset": 48
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Transformation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "printMatrix"
      }
    ],
    "loc": {
      "start": {
        "line": 6576,
        "column": 0
      },
      "end": {
        "line": 6582,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6583,
          "column": 0
        },
        "end": {
          "line": 6585,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "printMatrix",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "printMatrix",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".printMatrix"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Pushes the current transformation matrix onto the matrix stack. Understanding pushMatrix() and popMatrix() requires understanding the concept of a matrix stack. The pushMatrix() function saves the current coordinate system to the stack and popMatrix() restores the prior coordinate system. pushMatrix() and popMatrix() are used in conjuction with the other transformation methods and may be embedded to control the scope of the transformations.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 445,
                  "offset": 444
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 445,
              "offset": 444
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 445,
          "offset": 444
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Transformation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "pushMatrix"
      }
    ],
    "loc": {
      "start": {
        "line": 6587,
        "column": 0
      },
      "end": {
        "line": 6593,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6594,
          "column": 0
        },
        "end": {
          "line": 6596,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "pushMatrix",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "pushMatrix",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".pushMatrix"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Replaces the current matrix with the identity matrix.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 54,
                  "offset": 53
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 54,
              "offset": 53
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 54,
          "offset": 53
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Transformation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "resetMatrix"
      }
    ],
    "loc": {
      "start": {
        "line": 6598,
        "column": 0
      },
      "end": {
        "line": 6604,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6605,
          "column": 0
        },
        "end": {
          "line": 6608,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "resetMatrix",
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "resetMatrix",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".resetMatrix"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Rotates an object the amount specified by the angle parameter. Angles should be specified in radians (values from 0 to PI*2) or converted to radians with the radians() function. Objects are always rotated around their relative position to the origin and positive numbers rotate objects in a clockwise direction with 0 radians or degrees being up and HALF_PI being to the right etc. Transformations apply to everything that happens after and subsequent calls to the function accumulates the effect. For example, calling rotate(PI/2) and then rotate(PI/2) is the same as rotate(PI). If rotate() is called within the draw(), the transformation is reset when the loop begins again. Technically, rotate() multiplies the current transformation matrix by a rotation matrix. This function can be further controlled by the pushMatrix() and popMatrix().",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 844,
                  "offset": 843
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 844,
              "offset": 843
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 844,
          "offset": 843
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Transformation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "rotate"
      },
      {
        "title": "param",
        "description": "The angle specified in radians",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "angle"
      }
    ],
    "loc": {
      "start": {
        "line": 6610,
        "column": 0
      },
      "end": {
        "line": 6617,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6618,
          "column": 0
        },
        "end": {
          "line": 6621,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "rotate",
    "params": [
      {
        "name": "angle",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The angle specified in radians",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 31,
              "offset": 30
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "rotate",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".rotate"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Increasing and decreasing the size of an object by expanding and contracting vertices. Scale values are specified as decimal percentages. The function call scale(2.0) increases the dimension of a shape by 200%. Objects always scale from their relative origin to the coordinate system. Transformations apply to everything that happens after and subsequent calls to the function multiply the effect. For example, calling scale(2.0) and then scale(1.5) is the same as scale(3.0). If scale() is called within draw(), the transformation is reset when the loop begins again. This function can be further controlled by pushMatrix() and popMatrix().\nIf only one parameter is given, it is applied on X and Y axis.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 63,
                  "offset": 704
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 63,
              "offset": 704
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 63,
          "offset": 704
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 4
      },
      {
        "title": "subcat",
        "description": "Transformation",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "scale"
      },
      {
        "title": "param",
        "description": "The amount to scale the X axis.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "scaleX"
      },
      {
        "title": "param",
        "description": "The amount to scale the Y axis.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "scaleY"
      }
    ],
    "loc": {
      "start": {
        "line": 6623,
        "column": 0
      },
      "end": {
        "line": 6632,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6633,
          "column": 0
        },
        "end": {
          "line": 6636,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "scale",
    "params": [
      {
        "name": "scaleX",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The amount to scale the X axis.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 32,
                  "offset": 31
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 32,
              "offset": 31
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "scaleY",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The amount to scale the Y axis.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 32,
                  "offset": 31
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 32,
              "offset": 31
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "scale",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".scale"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Specifies an amount to displace objects within the page. The x parameter specifies left/right translation, the y parameter specifies up/down translation. Transformations apply to everything that happens after and subsequent calls to the function accumulates the effect. For example, calling translate(50, 0) and then translate(20, 0) is the same as translate(70, 0). This function can be further controlled by the pushMatrix() and popMatrix().",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 444,
                  "offset": 443
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 444,
              "offset": 443
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 444,
          "offset": 443
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Transformation",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "translate"
      },
      {
        "title": "param",
        "description": "The amount of offset on the X axis.",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "tx"
      },
      {
        "title": "param",
        "description": "The amount of offset on the Y axis.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "ty"
      }
    ],
    "loc": {
      "start": {
        "line": 6638,
        "column": 0
      },
      "end": {
        "line": 6646,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6647,
          "column": 0
        },
        "end": {
          "line": 6650,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "translate",
    "params": [
      {
        "name": "tx",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The amount of offset on the X axis.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 36,
                      "offset": 35
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 36,
                  "offset": 35
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 36,
              "offset": 35
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "ty",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The amount of offset on the Y axis.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 36,
                      "offset": 35
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 36,
                  "offset": 35
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 36,
              "offset": 35
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      }
    ],
    "memberof": "pub",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "translate",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".translate"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Used to run a function on all elements of an array. Please note the existance of the convenience methods b.stories(), b.paragraphs(), b.lines(), b.words() and b.characters() that are used to iterate through all instances of the given type in the given document.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 262,
                  "offset": 261
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 262,
              "offset": 261
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 262,
          "offset": 261
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Array Functions",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "forEach"
      },
      {
        "title": "param",
        "description": "The array to be processed.",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Array"
        },
        "name": "collection"
      },
      {
        "title": "param",
        "description": "The function that will be called on each element. The call will be like function(item,i) where i is the current index of the item within the array.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Function"
        },
        "name": "cb"
      }
    ],
    "loc": {
      "start": {
        "line": 474,
        "column": 0
      },
      "end": {
        "line": 482,
        "column": 2
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 483,
          "column": 0
        },
        "end": {
          "line": 498,
          "column": 1
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "forEach",
    "params": [
      {
        "name": "collection",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The array to be processed.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      },
      {
        "name": "cb",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The function that will be called on each element. The call will be like function(item,i) where i is the current index of the item within the array.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 148,
                      "offset": 147
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 148,
                  "offset": 147
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 148,
              "offset": 147
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Function"
        }
      }
    ],
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "forEach",
        "kind": "function"
      }
    ],
    "namespace": "forEach"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "HashList is a data container that allows you to store information as key -> value pairs. As usual in JavaScript mixed types of keys and values are accepted in one HashList instance.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 182,
                  "offset": 181
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 182,
              "offset": 181
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 182,
          "offset": 181
        }
      }
    },
    "tags": [
      {
        "title": "constructor",
        "description": null,
        "lineNumber": 3,
        "type": null,
        "name": null
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 4
      },
      {
        "title": "subcat",
        "description": "HashList",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "HashList"
      }
    ],
    "loc": {
      "start": {
        "line": 501,
        "column": 0
      },
      "end": {
        "line": 508,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 510,
          "column": 0
        },
        "end": {
          "line": 705,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "HashList",
    "memberof": "glob",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "HashList",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".HashList"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This removes a key -> value pair by its key.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 45,
                  "offset": 44
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 45,
              "offset": 44
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 45,
          "offset": 44
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 4
      },
      {
        "title": "subcat",
        "description": "HashList",
        "lineNumber": 5
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 6,
        "name": "HashList.remove"
      },
      {
        "title": "param",
        "description": "The key to delete",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "any"
        },
        "name": "key"
      },
      {
        "title": "return",
        "description": "The value before deletion",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "any"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 527,
        "column": 2
      },
      "end": {
        "line": 536,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 537,
          "column": 2
        },
        "end": {
          "line": 545,
          "column": 4
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "HashList.remove",
    "params": [
      {
        "name": "key",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The key to delete",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "any"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The value before deletion",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 26,
                  "offset": 25
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 26,
              "offset": 25
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "any"
        }
      }
    ],
    "memberof": "that",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "HashList.remove",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".HashList.remove"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This gets a value by its key.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 30,
              "offset": 29
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 30,
          "offset": 29
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "HashList",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "HashList.get"
      },
      {
        "title": "param",
        "description": "The key to look for",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "any"
        },
        "name": "key"
      },
      {
        "title": "return",
        "description": "The value",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "any"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 547,
        "column": 2
      },
      "end": {
        "line": 555,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 556,
          "column": 2
        },
        "end": {
          "line": 558,
          "column": 4
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "HashList.get",
    "params": [
      {
        "name": "key",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The key to look for",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "any"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 10,
                      "offset": 9
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 10,
                  "offset": 9
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 10,
              "offset": 9
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "any"
        }
      }
    ],
    "memberof": "that",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "HashList.get",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".HashList.get"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This sets a key -> value pair. If a key is already existing, the value will be updated. Please note that Functions are currently not supported as values.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 154,
                  "offset": 153
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 154,
              "offset": 153
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 154,
          "offset": 153
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "HashList",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "HashList.set"
      },
      {
        "title": "param",
        "description": "The key to use",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "any"
        },
        "name": "key"
      },
      {
        "title": "param",
        "description": "The value to set",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "any"
        },
        "name": "value"
      },
      {
        "title": "return",
        "description": "The value after setting",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "any"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 560,
        "column": 2
      },
      "end": {
        "line": 569,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 570,
          "column": 2
        },
        "end": {
          "line": 581,
          "column": 4
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "HashList.set",
    "params": [
      {
        "name": "key",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The key to use",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 15,
                      "offset": 14
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 15,
                  "offset": 14
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 15,
              "offset": 14
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "any"
        }
      },
      {
        "name": "value",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The value to set",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "any"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The value after setting",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 24,
                  "offset": 23
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 24,
              "offset": 23
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "any"
        }
      }
    ],
    "memberof": "that",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "HashList.set",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".HashList.set"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Checks for the existence of a given key.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 41,
              "offset": 40
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 41,
          "offset": 40
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "HashList",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "HashList.hasKey"
      },
      {
        "title": "param",
        "description": "The key to check",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "any"
        },
        "name": "key"
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 583,
        "column": 2
      },
      "end": {
        "line": 591,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 592,
          "column": 2
        },
        "end": {
          "line": 595,
          "column": 4
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "HashList.hasKey",
    "params": [
      {
        "name": "key",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The key to check",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "any"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        }
      }
    ],
    "memberof": "that",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "HashList.hasKey",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".HashList.hasKey"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Checks if a certain value exists at least once in all of the key -> value pairs.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 81,
                  "offset": 80
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 81,
              "offset": 80
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 81,
          "offset": 80
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "HashList",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "HashList.hasValue"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "any"
        },
        "name": "value"
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 597,
        "column": 2
      },
      "end": {
        "line": 605,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 606,
          "column": 2
        },
        "end": {
          "line": 616,
          "column": 4
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "HashList.hasValue",
    "params": [
      {
        "name": "value",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "any"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        }
      }
    ],
    "memberof": "that",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "HashList.hasValue",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".HashList.hasValue"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns an array of all keys that are sorted by their values from highest to lowest. Please note that this only works if you have conistently used Numbers for values.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 167,
                  "offset": 166
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 167,
              "offset": 166
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 167,
          "offset": 166
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "HashList",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "HashList.getKeysByValues"
      },
      {
        "title": "return",
        "description": "An array with all the keys",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 618,
        "column": 2
      },
      "end": {
        "line": 625,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 626,
          "column": 2
        },
        "end": {
          "line": 635,
          "column": 4
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "HashList.getKeysByValues",
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "An array with all the keys",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "memberof": "that",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "HashList.getKeysByValues",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".HashList.getKeysByValues"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns an array with all keys in a sorted order from higher to lower magnitude.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 81,
                  "offset": 80
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 81,
              "offset": 80
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 81,
          "offset": 80
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "HashList",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "HashList.getSortedKeys"
      },
      {
        "title": "return",
        "description": "An array with all the keys",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 637,
        "column": 2
      },
      "end": {
        "line": 644,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 645,
          "column": 2
        },
        "end": {
          "line": 647,
          "column": 4
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "HashList.getSortedKeys",
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "An array with all the keys",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "memberof": "that",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "HashList.getSortedKeys",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".HashList.getSortedKeys"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns an array with all keys.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 32,
                  "offset": 31
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 32,
              "offset": 31
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 32,
          "offset": 31
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "HashList",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "HashList.getKeys"
      },
      {
        "title": "return",
        "description": "An array with all the keys",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 649,
        "column": 2
      },
      "end": {
        "line": 656,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 657,
          "column": 2
        },
        "end": {
          "line": 668,
          "column": 4
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "HashList.getKeys",
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "An array with all the keys",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "memberof": "that",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "HashList.getKeys",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".HashList.getKeys"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns an array with all keys.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 32,
                  "offset": 31
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 32,
              "offset": 31
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 32,
          "offset": 31
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "HashList",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "HashList.getKeys"
      },
      {
        "title": "return",
        "description": "An array with all the keys",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 670,
        "column": 2
      },
      "end": {
        "line": 677,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 678,
          "column": 2
        },
        "end": {
          "line": 688,
          "column": 4
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "HashList.getKeys",
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "An array with all the keys",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "memberof": "that",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "HashList.getKeys",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".HashList.getKeys"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Deletes all the key -> value pairs in this HashList.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 53,
                  "offset": 52
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 53,
              "offset": 52
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 53,
          "offset": 52
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "HashList",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "HashList.clear"
      }
    ],
    "loc": {
      "start": {
        "line": 690,
        "column": 2
      },
      "end": {
        "line": 696,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 697,
          "column": 2
        },
        "end": {
          "line": 702,
          "column": 4
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "HashList.clear",
    "memberof": "that",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "HashList.clear",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".HashList.clear"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets the units of the document (like right clicking the rulers). The default units of basil.js are PT.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 103,
                  "offset": 102
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 103,
              "offset": 102
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 103,
          "offset": 102
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "units"
      },
      {
        "title": "param",
        "description": "Supported units: PT, PX, CM, MM or IN",
        "lineNumber": 5,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Constant"
          }
        },
        "name": "units"
      },
      {
        "title": "return",
        "description": "Current unit setting",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Constant"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2012,
        "column": 0
      },
      "end": {
        "line": 2019,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2020,
          "column": 0
        },
        "end": {
          "line": 2020,
          "column": 27
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "units",
    "params": [
      {
        "name": "units",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Supported units: PT, PX, CM, MM or IN",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 38,
                  "offset": 37
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 38,
              "offset": 37
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Constant"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Current unit setting",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Constant"
        }
      }
    ],
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "units",
        "kind": "function"
      }
    ],
    "namespace": "units"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets the delimiter of the CSV decode and encode function.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 58,
                  "offset": 57
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 58,
              "offset": 57
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 58,
          "offset": 57
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "CSV",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "CSV.delimiter"
      },
      {
        "title": "param",
        "description": "Optional Sets the delimiter for CSV parsing",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        },
        "name": "delimiter"
      },
      {
        "title": "return",
        "description": "Returns the current delimiter if called without argument",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2454,
        "column": 2
      },
      "end": {
        "line": 2462,
        "column": 4
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2463,
          "column": 2
        },
        "end": {
          "line": 2470,
          "column": 4
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "CSV.delimiter",
    "params": [
      {
        "name": "delimiter",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Optional Sets the delimiter for CSV parsing",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 44,
                      "offset": 43
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 44,
                  "offset": 43
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 44,
              "offset": 43
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "String"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Returns the current delimiter if called without argument",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 57,
                      "offset": 56
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 57,
                  "offset": 56
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 57,
              "offset": 56
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "memberof": "CSV",
    "scope": "instance",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "CSV.delimiter",
        "kind": "function",
        "scope": "instance"
      }
    ],
    "namespace": "#CSV.delimiter"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Function parses a string as CSV-object Array. Usage:\nvar arr = b.CSV.decode(str);\nvar str = b.CSV.encode(arr);",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 29,
                  "offset": 110
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 29,
              "offset": 110
            },
            "indent": [
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 29,
          "offset": 110
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 5
      },
      {
        "title": "subcat",
        "description": "CSV",
        "lineNumber": 6
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 7,
        "name": "CSV.decode"
      },
      {
        "title": "param",
        "description": "to be parsed as CSV-object.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "String"
      },
      {
        "title": "return",
        "description": "Returns CSV-object Array",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2472,
        "column": 2
      },
      "end": {
        "line": 2482,
        "column": 4
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2483,
          "column": 2
        },
        "end": {
          "line": 2495,
          "column": 4
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "CSV.decode",
    "params": [
      {
        "name": "String",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "to be parsed as CSV-object.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      },
      {
        "title": "param",
        "name": "text",
        "lineNumber": 2483
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Returns CSV-object Array",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "memberof": "CSV",
    "scope": "instance",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "CSV.decode",
        "kind": "function",
        "scope": "instance"
      }
    ],
    "namespace": "#CSV.decode"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Function convert an javascript array of objects to a CSV-string. Usage:\nvar str = b.CSV.encode(arr);\nvar arr = b.CSV.decode(str);",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 29,
                  "offset": 129
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 29,
              "offset": 129
            },
            "indent": [
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 29,
          "offset": 129
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 5
      },
      {
        "title": "subcat",
        "description": "CSV",
        "lineNumber": 6
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 7,
        "name": "CSV.encode"
      },
      {
        "title": "param",
        "description": "to be converted to a CSV-string",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Array"
        },
        "name": "Array"
      },
      {
        "title": "return",
        "description": "Returns CSV-string",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2497,
        "column": 2
      },
      "end": {
        "line": 2507,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2508,
          "column": 2
        },
        "end": {
          "line": 2528,
          "column": 4
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "CSV.encode",
    "params": [
      {
        "name": "Array",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "to be converted to a CSV-string",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 32,
                  "offset": 31
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 32,
              "offset": 31
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      },
      {
        "title": "param",
        "name": "rows",
        "lineNumber": 2508
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Returns CSV-string",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "memberof": "CSV",
    "scope": "instance",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "CSV.encode",
        "kind": "function",
        "scope": "instance"
      }
    ],
    "namespace": "#CSV.encode"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Checks whether an URL string is valid.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 39,
                  "offset": 38
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 39,
              "offset": 38
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 39,
          "offset": 38
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "String Functions",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "isURL"
      },
      {
        "title": "param",
        "description": "An url string to be checked",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "url"
      },
      {
        "title": "return",
        "description": "Returns either true or false",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2979,
        "column": 0
      },
      "end": {
        "line": 2987,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2988,
          "column": 0
        },
        "end": {
          "line": 2991,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "isURL",
    "params": [
      {
        "name": "url",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "An url string to be checked",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Returns either true or false",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        }
      }
    ],
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "isURL",
        "kind": "function"
      }
    ],
    "namespace": "isURL"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Checks whether a string ends with a specific character or string.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 66,
                  "offset": 65
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 66,
              "offset": 65
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 66,
          "offset": 65
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "String Functions",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "endsWith"
      },
      {
        "title": "param",
        "description": "A string to be checked",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "str"
      },
      {
        "title": "param",
        "description": "The string to look for",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "suffix"
      },
      {
        "title": "return",
        "description": "Returns either true or false",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2993,
        "column": 0
      },
      "end": {
        "line": 3002,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3003,
          "column": 0
        },
        "end": {
          "line": 3005,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "endsWith",
    "params": [
      {
        "name": "str",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A string to be checked",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      },
      {
        "name": "suffix",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The string to look for",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Returns either true or false",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        }
      }
    ],
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "endsWith",
        "kind": "function"
      }
    ],
    "namespace": "endsWith"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Checks whether a string starts with a specific character or string.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 68,
                  "offset": 67
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 68,
              "offset": 67
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 68,
          "offset": 67
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "String Functions",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "startsWith"
      },
      {
        "title": "param",
        "description": "A string to be checked",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "str"
      },
      {
        "title": "param",
        "description": "The string to look for",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "prefix"
      },
      {
        "title": "return",
        "description": "Returns either true or false",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3007,
        "column": 0
      },
      "end": {
        "line": 3016,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3017,
          "column": 0
        },
        "end": {
          "line": 3019,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "startsWith",
    "params": [
      {
        "name": "str",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A string to be checked",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      },
      {
        "name": "prefix",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The string to look for",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Returns either true or false",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        }
      }
    ],
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "startsWith",
        "kind": "function"
      }
    ],
    "namespace": "startsWith"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Checks whether a var is an Array, returns true if this is the case",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 67,
                  "offset": 66
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 67,
              "offset": 66
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 67,
          "offset": 66
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Type-Check",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "isArray"
      },
      {
        "title": "param",
        "description": "The object to check",
        "lineNumber": 6,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Object"
            },
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "Boolean"
            }
          ]
        },
        "name": "obj"
      },
      {
        "title": "return",
        "description": "returns true if this is the case",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3022,
        "column": 0
      },
      "end": {
        "line": 3030,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3031,
          "column": 0
        },
        "end": {
          "line": 3033,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "isArray",
    "params": [
      {
        "name": "obj",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The object to check",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Object"
            },
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "Boolean"
            }
          ]
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "returns true if this is the case",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        }
      }
    ],
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "isArray",
        "kind": "function"
      }
    ],
    "namespace": "isArray"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Checks whether a var is a number, returns true if this is the case",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 67,
                  "offset": 66
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 67,
              "offset": 66
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 67,
          "offset": 66
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Type-Check",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "isNumber"
      },
      {
        "title": "param",
        "description": "The number to check",
        "lineNumber": 6,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Object"
            },
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "Boolean"
            }
          ]
        },
        "name": "num"
      },
      {
        "title": "return",
        "description": "returns true if this is the case",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3035,
        "column": 0
      },
      "end": {
        "line": 3043,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3044,
          "column": 0
        },
        "end": {
          "line": 3052,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "isNumber",
    "params": [
      {
        "name": "num",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The number to check",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Object"
            },
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "Boolean"
            }
          ]
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "returns true if this is the case",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        }
      }
    ],
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "isNumber",
        "kind": "function"
      }
    ],
    "namespace": "isNumber"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Checks whether a var is a string, returns true if this is the case",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 67,
                  "offset": 66
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 67,
              "offset": 66
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 67,
          "offset": 66
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Type-Check",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "isString"
      },
      {
        "title": "param",
        "description": "The string to check",
        "lineNumber": 6,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Object"
            },
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "Boolean"
            }
          ]
        },
        "name": "str"
      },
      {
        "title": "return",
        "description": "returns true if this is the case",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3054,
        "column": 0
      },
      "end": {
        "line": 3062,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3063,
          "column": 0
        },
        "end": {
          "line": 3065,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "isString",
    "params": [
      {
        "name": "str",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The string to check",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Object"
            },
            {
              "type": "NameExpression",
              "name": "String"
            },
            {
              "type": "NameExpression",
              "name": "Number"
            },
            {
              "type": "NameExpression",
              "name": "Boolean"
            }
          ]
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "returns true if this is the case",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        }
      }
    ],
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "isString",
        "kind": "function"
      }
    ],
    "namespace": "isString"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Checks whether a var is an indesign text object, returns true if this is the case\nNB: a indesign TextFrame will return false as it is just a container holding text.\nSo you could say that isText() refers to all the things inside a TextFrame.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 76,
                  "offset": 240
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 76,
              "offset": 240
            },
            "indent": [
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 76,
          "offset": 240
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 5
      },
      {
        "title": "subcat",
        "description": "Type-Check",
        "lineNumber": 6
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 7,
        "name": "isText"
      },
      {
        "title": "param",
        "description": "The object to check",
        "lineNumber": 8,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Character"
            },
            {
              "type": "NameExpression",
              "name": "InsertionPoint"
            },
            {
              "type": "NameExpression",
              "name": "Line"
            },
            {
              "type": "NameExpression",
              "name": "Paragraph"
            },
            {
              "type": "NameExpression",
              "name": "TextColumn"
            },
            {
              "type": "NameExpression",
              "name": "TextStyleRange"
            },
            {
              "type": "NameExpression",
              "name": "Word"
            }
          ]
        },
        "name": "obj"
      },
      {
        "title": "return",
        "description": "returns true if this is the case",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3067,
        "column": 0
      },
      "end": {
        "line": 3077,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3078,
          "column": 0
        },
        "end": {
          "line": 3095,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "isText",
    "params": [
      {
        "name": "obj",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The object to check",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Character"
            },
            {
              "type": "NameExpression",
              "name": "InsertionPoint"
            },
            {
              "type": "NameExpression",
              "name": "Line"
            },
            {
              "type": "NameExpression",
              "name": "Paragraph"
            },
            {
              "type": "NameExpression",
              "name": "TextColumn"
            },
            {
              "type": "NameExpression",
              "name": "TextStyleRange"
            },
            {
              "type": "NameExpression",
              "name": "Word"
            }
          ]
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "returns true if this is the case",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        }
      }
    ],
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "isText",
        "kind": "function"
      }
    ],
    "namespace": "isText"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Get the folder of the active document as a Folder object. Use .absoluteURI to access a string representation of the folder path.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 129,
                  "offset": 128
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 129,
              "offset": 128
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 129,
          "offset": 128
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Document",
        "lineNumber": 3
      },
      {
        "title": "subcat",
        "description": "Misc",
        "lineNumber": 4
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 5,
        "name": "projectFolder"
      },
      {
        "title": "return",
        "description": "The folder of the the active document",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Folder"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3149,
        "column": 0
      },
      "end": {
        "line": 3156,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3157,
          "column": 0
        },
        "end": {
          "line": 3165,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "projectFolder",
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The folder of the the active document",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 38,
                  "offset": 37
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 38,
              "offset": 37
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Folder"
        }
      }
    ],
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "projectFolder",
        "kind": "function"
      }
    ],
    "namespace": "projectFolder"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Prints a message line to the console output in the ExtendScript editor.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 72,
                  "offset": 71
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 72,
              "offset": 71
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 72,
          "offset": 71
        }
      }
    },
    "tags": [
      {
        "title": "cat",
        "description": "Output",
        "lineNumber": 3
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "println"
      },
      {
        "title": "param",
        "description": "The message to print",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "msg"
      }
    ],
    "loc": {
      "start": {
        "line": 3256,
        "column": 0
      },
      "end": {
        "line": 3262,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3263,
          "column": 0
        },
        "end": {
          "line": 3267,
          "column": 2
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "println",
    "params": [
      {
        "name": "msg",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The message to print",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "println",
        "kind": "function"
      }
    ],
    "namespace": "println"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A class to describe a two or three dimensional vector. This datatype stores two or three variables that are commonly used as a position, velocity, and/or acceleration. Technically, position is a point and velocity and acceleration are vectors, but this is often simplified to consider all three as vectors. For example, if you consider a rectangle moving across the screen, at any given instant it has a position (the object's location, expressed as a point.), a velocity (the rate at which the object's position changes per time unit, expressed as a vector), and acceleration (the rate at which the object's velocity changes per time unit, expressed as a vector). Since vectors represent groupings of values, we cannot simply use traditional addition/multiplication/etc. Instead, we'll need to do some \"vector\" math, which is made easy by the methods inside the Vector class.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 877,
                  "offset": 876
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 877,
              "offset": 876
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Constructor of Vector, can be two- or three-dimensional.",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 878
                },
                "end": {
                  "line": 3,
                  "column": 57,
                  "offset": 934
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 878
            },
            "end": {
              "line": 3,
              "column": 57,
              "offset": 934
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 57,
          "offset": 934
        }
      }
    },
    "tags": [
      {
        "title": "constructor",
        "description": null,
        "lineNumber": 5,
        "type": null,
        "name": null
      },
      {
        "title": "cat",
        "description": "Data",
        "lineNumber": 6
      },
      {
        "title": "subcat",
        "description": "Vector",
        "lineNumber": 7
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 8,
        "name": "Vector"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "x"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "y"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        },
        "name": "z"
      }
    ],
    "loc": {
      "start": {
        "line": 5181,
        "column": 2
      },
      "end": {
        "line": 5193,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 5194,
          "column": 2
        },
        "end": {
          "line": 5198,
          "column": 3
        }
      },
      "file": "/Users/icke/Documents/basiljs/develop/basil.js"
    },
    "kind": "function",
    "name": "Vector",
    "params": [
      {
        "name": "x",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "y",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        }
      },
      {
        "name": "z",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Number"
          }
        }
      }
    ],
    "members": {
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Sets the x, y, and z component of the vector using three separate variables, the data from a Vector, or the values from a float array.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 135,
                        "offset": 134
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 135,
                    "offset": 134
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 135,
                "offset": 134
              }
            }
          },
          "tags": [
            {
              "title": "method",
              "description": null,
              "lineNumber": 2,
              "name": "Vector.set"
            },
            {
              "title": "cat",
              "description": "Data",
              "lineNumber": 3
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 4
            },
            {
              "title": "param",
              "description": "Either a vector, array or x component",
              "lineNumber": 5,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "Number"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Array"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Vector"
                  }
                ]
              },
              "name": "v"
            },
            {
              "title": "param",
              "description": "The y component",
              "lineNumber": 6,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "y"
            },
            {
              "title": "param",
              "description": "The z component",
              "lineNumber": 7,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "z"
            }
          ],
          "loc": {
            "start": {
              "line": 5261,
              "column": 4
            },
            "end": {
              "line": 5269,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 5270,
                "column": 4
              },
              "end": {
                "line": 5277,
                "column": 5
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "kind": "function",
          "name": "Vector.set",
          "params": [
            {
              "name": "v",
              "lineNumber": 5,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Either a vector, array or x component",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 38,
                            "offset": 37
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 38,
                        "offset": 37
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 38,
                    "offset": 37
                  }
                }
              },
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "Number"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Array"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Vector"
                  }
                ]
              }
            },
            {
              "name": "y",
              "lineNumber": 6,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The y component",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 16,
                            "offset": 15
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 16,
                        "offset": 15
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 16,
                    "offset": 15
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            },
            {
              "name": "z",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The z component",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 16,
                            "offset": 15
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 16,
                        "offset": 15
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 16,
                    "offset": 15
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "memberof": "Vector",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "function"
            },
            {
              "name": "Vector.set",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Vector#Vector.set"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Gets a copy of the vector, returns a Vector object.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 52,
                        "offset": 51
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 52,
                    "offset": 51
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 52,
                "offset": 51
              }
            }
          },
          "tags": [
            {
              "title": "method",
              "description": null,
              "lineNumber": 2,
              "name": "Vector.get"
            },
            {
              "title": "cat",
              "description": "Data",
              "lineNumber": 3
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 4
            },
            {
              "title": "return",
              "description": "A copy of the vector",
              "lineNumber": 5,
              "type": {
                "type": "NameExpression",
                "name": "Vector"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 5278,
              "column": 4
            },
            "end": {
              "line": 5284,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 5285,
                "column": 4
              },
              "end": {
                "line": 5287,
                "column": 5
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "kind": "function",
          "name": "Vector.get",
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A copy of the vector",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 21,
                            "offset": 20
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 21,
                        "offset": 20
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 21,
                    "offset": 20
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "Vector"
              }
            }
          ],
          "memberof": "Vector",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "function"
            },
            {
              "name": "Vector.get",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Vector#Vector.get"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Calculates the magnitude (length) of the vector and returns the result as a float",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 82,
                        "offset": 81
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 82,
                    "offset": 81
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 82,
                "offset": 81
              }
            }
          },
          "tags": [
            {
              "title": "method",
              "description": null,
              "lineNumber": 2,
              "name": "Vector.mag"
            },
            {
              "title": "cat",
              "description": "Data",
              "lineNumber": 3
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 4
            },
            {
              "title": "return",
              "description": "The length",
              "lineNumber": 5,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 5288,
              "column": 4
            },
            "end": {
              "line": 5294,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 5295,
                "column": 4
              },
              "end": {
                "line": 5300,
                "column": 5
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "kind": "function",
          "name": "Vector.mag",
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The length",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 11,
                            "offset": 10
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 11,
                        "offset": 10
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 11,
                    "offset": 10
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "memberof": "Vector",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "function"
            },
            {
              "name": "Vector.mag",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Vector#Vector.mag"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Adds x, y, and z components to a vector, adds one vector to another.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 69,
                        "offset": 68
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 69,
                    "offset": 68
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 69,
                "offset": 68
              }
            }
          },
          "tags": [
            {
              "title": "method",
              "description": null,
              "lineNumber": 2,
              "name": "Vector.add"
            },
            {
              "title": "cat",
              "description": "Data",
              "lineNumber": 3
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 4
            },
            {
              "title": "param",
              "description": "Either a full vector or an x component",
              "lineNumber": 5,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "Vector"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Number"
                  }
                ]
              },
              "name": "v"
            },
            {
              "title": "param",
              "description": "The y component",
              "lineNumber": 6,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "y"
            },
            {
              "title": "param",
              "description": "The z component",
              "lineNumber": 7,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "z"
            }
          ],
          "loc": {
            "start": {
              "line": 5301,
              "column": 4
            },
            "end": {
              "line": 5309,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 5310,
                "column": 4
              },
              "end": {
                "line": 5320,
                "column": 5
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "kind": "function",
          "name": "Vector.add",
          "params": [
            {
              "name": "v",
              "lineNumber": 5,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Either a full vector or an x component",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 39,
                            "offset": 38
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 39,
                        "offset": 38
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 39,
                    "offset": 38
                  }
                }
              },
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "Vector"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Number"
                  }
                ]
              }
            },
            {
              "name": "y",
              "lineNumber": 6,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The y component",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 16,
                            "offset": 15
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 16,
                        "offset": 15
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 16,
                    "offset": 15
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            },
            {
              "name": "z",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The z component",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 16,
                            "offset": 15
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 16,
                        "offset": 15
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 16,
                    "offset": 15
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "memberof": "Vector",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "function"
            },
            {
              "name": "Vector.add",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Vector#Vector.add"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Substract x, y, and z components or a full vector from this vector",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 67,
                        "offset": 66
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 67,
                    "offset": 66
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 67,
                "offset": 66
              }
            }
          },
          "tags": [
            {
              "title": "method",
              "description": null,
              "lineNumber": 2,
              "name": "Vector.sub"
            },
            {
              "title": "cat",
              "description": "Data",
              "lineNumber": 3
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 4
            },
            {
              "title": "param",
              "description": "Either a full vector or an x component",
              "lineNumber": 5,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "Vector"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Number"
                  }
                ]
              },
              "name": "v"
            },
            {
              "title": "param",
              "description": "The y component",
              "lineNumber": 6,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "y"
            },
            {
              "title": "param",
              "description": "The z component",
              "lineNumber": 7,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "z"
            }
          ],
          "loc": {
            "start": {
              "line": 5321,
              "column": 4
            },
            "end": {
              "line": 5329,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 5330,
                "column": 4
              },
              "end": {
                "line": 5340,
                "column": 5
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "kind": "function",
          "name": "Vector.sub",
          "params": [
            {
              "name": "v",
              "lineNumber": 5,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Either a full vector or an x component",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 39,
                            "offset": 38
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 39,
                        "offset": 38
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 39,
                    "offset": 38
                  }
                }
              },
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "Vector"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Number"
                  }
                ]
              }
            },
            {
              "name": "y",
              "lineNumber": 6,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The y component",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 16,
                            "offset": 15
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 16,
                        "offset": 15
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 16,
                    "offset": 15
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            },
            {
              "name": "z",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The z component",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 16,
                            "offset": 15
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 16,
                        "offset": 15
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 16,
                    "offset": 15
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "memberof": "Vector",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "function"
            },
            {
              "name": "Vector.sub",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Vector#Vector.sub"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Multiplies this vector with x, y, and z components or another vector.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 70,
                        "offset": 69
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 70,
                    "offset": 69
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 70,
                "offset": 69
              }
            }
          },
          "tags": [
            {
              "title": "method",
              "description": null,
              "lineNumber": 2,
              "name": "Vector.mult"
            },
            {
              "title": "cat",
              "description": "Data",
              "lineNumber": 3
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 4
            },
            {
              "title": "param",
              "description": "Either a full vector or an x component",
              "lineNumber": 5,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "Vector"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Number"
                  }
                ]
              },
              "name": "v"
            },
            {
              "title": "param",
              "description": "The y component",
              "lineNumber": 6,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "y"
            },
            {
              "title": "param",
              "description": "The z component",
              "lineNumber": 7,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "z"
            }
          ],
          "loc": {
            "start": {
              "line": 5341,
              "column": 4
            },
            "end": {
              "line": 5349,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 5350,
                "column": 4
              },
              "end": {
                "line": 5360,
                "column": 5
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "kind": "function",
          "name": "Vector.mult",
          "params": [
            {
              "name": "v",
              "lineNumber": 5,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Either a full vector or an x component",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 39,
                            "offset": 38
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 39,
                        "offset": 38
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 39,
                    "offset": 38
                  }
                }
              },
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "Vector"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Number"
                  }
                ]
              }
            },
            {
              "name": "y",
              "lineNumber": 6,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The y component",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 16,
                            "offset": 15
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 16,
                        "offset": 15
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 16,
                    "offset": 15
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            },
            {
              "name": "z",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The z component",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 16,
                            "offset": 15
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 16,
                        "offset": 15
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 16,
                    "offset": 15
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "memberof": "Vector",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "function"
            },
            {
              "name": "Vector.mult",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Vector#Vector.mult"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Divides this vector through x, y, and z components or another vector.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 70,
                        "offset": 69
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 70,
                    "offset": 69
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 70,
                "offset": 69
              }
            }
          },
          "tags": [
            {
              "title": "method",
              "description": null,
              "lineNumber": 2,
              "name": "Vector.div"
            },
            {
              "title": "cat",
              "description": "Data",
              "lineNumber": 3
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 4
            },
            {
              "title": "param",
              "description": "Either a full vector or an x component",
              "lineNumber": 5,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "Vector"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Number"
                  }
                ]
              },
              "name": "v"
            },
            {
              "title": "param",
              "description": "The y component",
              "lineNumber": 6,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "y"
            },
            {
              "title": "param",
              "description": "The z component",
              "lineNumber": 7,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "z"
            }
          ],
          "loc": {
            "start": {
              "line": 5361,
              "column": 4
            },
            "end": {
              "line": 5369,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 5370,
                "column": 4
              },
              "end": {
                "line": 5380,
                "column": 5
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "kind": "function",
          "name": "Vector.div",
          "params": [
            {
              "name": "v",
              "lineNumber": 5,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Either a full vector or an x component",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 39,
                            "offset": 38
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 39,
                        "offset": 38
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 39,
                    "offset": 38
                  }
                }
              },
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "Vector"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Number"
                  }
                ]
              }
            },
            {
              "name": "y",
              "lineNumber": 6,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The y component",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 16,
                            "offset": 15
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 16,
                        "offset": 15
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 16,
                    "offset": 15
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            },
            {
              "name": "z",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The z component",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 16,
                            "offset": 15
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 16,
                        "offset": 15
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 16,
                    "offset": 15
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "memberof": "Vector",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "function"
            },
            {
              "name": "Vector.div",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Vector#Vector.div"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Calculates the distance from this vector to another as x, y, and z components or full vector.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 94,
                        "offset": 93
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 94,
                    "offset": 93
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 94,
                "offset": 93
              }
            }
          },
          "tags": [
            {
              "title": "method",
              "description": null,
              "lineNumber": 2,
              "name": "Vector.dist"
            },
            {
              "title": "cat",
              "description": "Data",
              "lineNumber": 3
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 4
            },
            {
              "title": "param",
              "description": "Either a full vector or an x component",
              "lineNumber": 5,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "Vector"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Number"
                  }
                ]
              },
              "name": "v"
            },
            {
              "title": "param",
              "description": "The y component",
              "lineNumber": 6,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "y"
            },
            {
              "title": "param",
              "description": "The z component",
              "lineNumber": 7,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "z"
            },
            {
              "title": "return",
              "description": "The distance",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 5381,
              "column": 4
            },
            "end": {
              "line": 5390,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 5391,
                "column": 4
              },
              "end": {
                "line": 5396,
                "column": 5
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "kind": "function",
          "name": "Vector.dist",
          "params": [
            {
              "name": "v",
              "lineNumber": 5,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Either a full vector or an x component",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 39,
                            "offset": 38
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 39,
                        "offset": 38
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 39,
                    "offset": 38
                  }
                }
              },
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "Vector"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Number"
                  }
                ]
              }
            },
            {
              "name": "y",
              "lineNumber": 6,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The y component",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 16,
                            "offset": 15
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 16,
                        "offset": 15
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 16,
                    "offset": 15
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            },
            {
              "name": "z",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The z component",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 16,
                            "offset": 15
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 16,
                        "offset": 15
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 16,
                    "offset": 15
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The distance",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 13,
                            "offset": 12
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 13,
                        "offset": 12
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 13,
                    "offset": 12
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "memberof": "Vector",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "function"
            },
            {
              "name": "Vector.dist",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Vector#Vector.dist"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Calculates the dot product from this vector to another as x, y, and z components or full vector.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 97,
                        "offset": 96
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 97,
                    "offset": 96
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 97,
                "offset": 96
              }
            }
          },
          "tags": [
            {
              "title": "method",
              "description": null,
              "lineNumber": 2,
              "name": "Vector.dot"
            },
            {
              "title": "cat",
              "description": "Data",
              "lineNumber": 3
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 4
            },
            {
              "title": "param",
              "description": "Either a full vector or an x component",
              "lineNumber": 5,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "Vector"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Number"
                  }
                ]
              },
              "name": "v"
            },
            {
              "title": "param",
              "description": "The y component",
              "lineNumber": 6,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "y"
            },
            {
              "title": "param",
              "description": "The z component",
              "lineNumber": 7,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "z"
            },
            {
              "title": "return",
              "description": "The dot product",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 5397,
              "column": 4
            },
            "end": {
              "line": 5406,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 5407,
                "column": 4
              },
              "end": {
                "line": 5410,
                "column": 5
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "kind": "function",
          "name": "Vector.dot",
          "params": [
            {
              "name": "v",
              "lineNumber": 5,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Either a full vector or an x component",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 39,
                            "offset": 38
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 39,
                        "offset": 38
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 39,
                    "offset": 38
                  }
                }
              },
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "Vector"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Number"
                  }
                ]
              }
            },
            {
              "name": "y",
              "lineNumber": 6,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The y component",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 16,
                            "offset": 15
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 16,
                        "offset": 15
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 16,
                    "offset": 15
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            },
            {
              "name": "z",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The z component",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 16,
                            "offset": 15
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 16,
                        "offset": 15
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 16,
                    "offset": 15
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The dot product",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 16,
                            "offset": 15
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 16,
                        "offset": 15
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 16,
                    "offset": 15
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "memberof": "Vector",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "function"
            },
            {
              "name": "Vector.dot",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Vector#Vector.dot"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Calculates the cross product from this vector to another as x, y, and z components or full vector.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 99,
                        "offset": 98
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 99,
                    "offset": 98
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 99,
                "offset": 98
              }
            }
          },
          "tags": [
            {
              "title": "method",
              "description": null,
              "lineNumber": 2,
              "name": "Vector.cross"
            },
            {
              "title": "cat",
              "description": "Data",
              "lineNumber": 3
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 4
            },
            {
              "title": "param",
              "description": "Either a full vector or an x component",
              "lineNumber": 5,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "Vector"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Number"
                  }
                ]
              },
              "name": "v"
            },
            {
              "title": "param",
              "description": "The y component",
              "lineNumber": 6,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "y"
            },
            {
              "title": "param",
              "description": "The z component",
              "lineNumber": 7,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "z"
            },
            {
              "title": "return",
              "description": "The cross product",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 5411,
              "column": 4
            },
            "end": {
              "line": 5420,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 5421,
                "column": 4
              },
              "end": {
                "line": 5426,
                "column": 5
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "kind": "function",
          "name": "Vector.cross",
          "params": [
            {
              "name": "v",
              "lineNumber": 5,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Either a full vector or an x component",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 39,
                            "offset": 38
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 39,
                        "offset": 38
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 39,
                    "offset": 38
                  }
                }
              },
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "Vector"
                  },
                  {
                    "type": "NameExpression",
                    "name": "Number"
                  }
                ]
              }
            },
            {
              "name": "y",
              "lineNumber": 6,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The y component",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 16,
                            "offset": 15
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 16,
                        "offset": 15
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 16,
                    "offset": 15
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            },
            {
              "name": "z",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The z component",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 16,
                            "offset": 15
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 16,
                        "offset": 15
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 16,
                    "offset": 15
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The cross product",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 18,
                            "offset": 17
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 18,
                        "offset": 17
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 18,
                    "offset": 17
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "memberof": "Vector",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "function"
            },
            {
              "name": "Vector.cross",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Vector#Vector.cross"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Normalizes the length of this vector to 1.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 43,
                        "offset": 42
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 43,
                    "offset": 42
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 43,
                "offset": 42
              }
            }
          },
          "tags": [
            {
              "title": "cat",
              "description": "Data",
              "lineNumber": 2
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 3
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 4,
              "name": "Vector.normalize"
            }
          ],
          "loc": {
            "start": {
              "line": 5427,
              "column": 4
            },
            "end": {
              "line": 5432,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 5433,
                "column": 4
              },
              "end": {
                "line": 5436,
                "column": 5
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "kind": "function",
          "name": "Vector.normalize",
          "memberof": "Vector",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "function"
            },
            {
              "name": "Vector.normalize",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Vector#Vector.normalize"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Normalizes the length of this vector to the given parameter.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 61,
                        "offset": 60
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 61,
                    "offset": 60
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 61,
                "offset": 60
              }
            }
          },
          "tags": [
            {
              "title": "method",
              "description": null,
              "lineNumber": 2,
              "name": "Vector.limit"
            },
            {
              "title": "cat",
              "description": "Data",
              "lineNumber": 3
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 4
            },
            {
              "title": "param",
              "description": "The value to scale to.",
              "lineNumber": 5,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "high"
            }
          ],
          "loc": {
            "start": {
              "line": 5437,
              "column": 4
            },
            "end": {
              "line": 5443,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 5444,
                "column": 4
              },
              "end": {
                "line": 5449,
                "column": 5
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "kind": "function",
          "name": "Vector.limit",
          "params": [
            {
              "name": "high",
              "lineNumber": 5,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The value to scale to.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 23,
                            "offset": 22
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 23,
                        "offset": 22
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 23,
                    "offset": 22
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "memberof": "Vector",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "function"
            },
            {
              "name": "Vector.limit",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Vector#Vector.limit"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The 2D orientation (heading) of this vector in radian.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 55,
                        "offset": 54
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 55,
                    "offset": 54
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 55,
                "offset": 54
              }
            }
          },
          "tags": [
            {
              "title": "method",
              "description": null,
              "lineNumber": 2,
              "name": "Vector.heading"
            },
            {
              "title": "cat",
              "description": "Data",
              "lineNumber": 3
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 4
            },
            {
              "title": "return",
              "description": "A radian angle value",
              "lineNumber": 5,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 5450,
              "column": 4
            },
            "end": {
              "line": 5456,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 5457,
                "column": 4
              },
              "end": {
                "line": 5459,
                "column": 5
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "kind": "function",
          "name": "Vector.heading",
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A radian angle value",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 21,
                            "offset": 20
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 21,
                        "offset": 20
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 21,
                    "offset": 20
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "memberof": "Vector",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "function"
            },
            {
              "name": "Vector.heading",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Vector#Vector.heading"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns data about this vector as a string.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 44,
                        "offset": 43
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 44,
                    "offset": 43
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 44,
                "offset": 43
              }
            }
          },
          "tags": [
            {
              "title": "method",
              "description": null,
              "lineNumber": 2,
              "name": "Vector.toString"
            },
            {
              "title": "cat",
              "description": "Data",
              "lineNumber": 3
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 4
            },
            {
              "title": "return",
              "description": "The x, y and z components as a string.",
              "lineNumber": 5,
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 5460,
              "column": 4
            },
            "end": {
              "line": 5466,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 5467,
                "column": 4
              },
              "end": {
                "line": 5469,
                "column": 5
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "kind": "function",
          "name": "Vector.toString",
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The x, y and z components as a string.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 39,
                            "offset": 38
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 39,
                        "offset": 38
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 39,
                    "offset": 38
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "memberof": "Vector",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "function"
            },
            {
              "name": "Vector.toString",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Vector#Vector.toString"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns this vector as an array ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 33,
                        "offset": 32
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "linkReference",
                    "identifier": "x,y,z",
                    "referenceType": "shortcut",
                    "children": [
                      {
                        "type": "text",
                        "value": "x,y,z",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 34,
                            "offset": 33
                          },
                          "end": {
                            "line": 1,
                            "column": 39,
                            "offset": 38
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 33,
                        "offset": 32
                      },
                      "end": {
                        "line": 1,
                        "column": 40,
                        "offset": 39
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ".",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 40,
                        "offset": 39
                      },
                      "end": {
                        "line": 1,
                        "column": 41,
                        "offset": 40
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 41,
                    "offset": 40
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 41,
                "offset": 40
              }
            }
          },
          "tags": [
            {
              "title": "method",
              "description": null,
              "lineNumber": 2,
              "name": "Vector.array"
            },
            {
              "title": "cat",
              "description": "Data",
              "lineNumber": 3
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 4
            },
            {
              "title": "return",
              "description": "[x,y,z]",
              "lineNumber": 5,
              "type": {
                "type": "NameExpression",
                "name": "Array"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 5470,
              "column": 4
            },
            "end": {
              "line": 5476,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 5477,
                "column": 4
              },
              "end": {
                "line": 5479,
                "column": 5
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "kind": "function",
          "name": "Vector.array",
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "linkReference",
                        "identifier": "x,y,z",
                        "referenceType": "shortcut",
                        "children": [
                          {
                            "type": "text",
                            "value": "x,y,z",
                            "position": {
                              "start": {
                                "line": 1,
                                "column": 2,
                                "offset": 1
                              },
                              "end": {
                                "line": 1,
                                "column": 7,
                                "offset": 6
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 8,
                            "offset": 7
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 8,
                        "offset": 7
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 8,
                    "offset": 7
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "Array"
              }
            }
          ],
          "memberof": "Vector",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "function"
            },
            {
              "name": "Vector.array",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Vector#Vector.array"
        }
      ],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Static function. Calculates the Euclidean distance between two points (considering a point as a vector object).\nIs meant to be called \"static\" i.e. Vector.dist(v1, v2);",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 2,
                        "column": 57,
                        "offset": 168
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 57,
                    "offset": 168
                  },
                  "indent": [
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 2,
                "column": 57,
                "offset": 168
              }
            }
          },
          "tags": [
            {
              "title": "cat",
              "description": "Data",
              "lineNumber": 3
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 4
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 5,
              "name": "Vector.dist"
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 6
            },
            {
              "title": "param",
              "description": "The first vector",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Vector"
              },
              "name": "v1"
            },
            {
              "title": "param",
              "description": "The second vector",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "Vector"
              },
              "name": "v2"
            },
            {
              "title": "return",
              "description": "The distance",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 5199,
              "column": 2
            },
            "end": {
              "line": 5209,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 5210,
                "column": 2
              },
              "end": {
                "line": 5212,
                "column": 4
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "kind": "function",
          "name": "Vector.dist",
          "scope": "static",
          "params": [
            {
              "name": "v1",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The first vector",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 17,
                            "offset": 16
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 17,
                        "offset": 16
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 17,
                    "offset": 16
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "Vector"
              }
            },
            {
              "name": "v2",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The second vector",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 18,
                            "offset": 17
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 18,
                        "offset": 17
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 18,
                    "offset": 17
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "Vector"
              }
            }
          ],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The distance",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 13,
                            "offset": 12
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 13,
                        "offset": 12
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 13,
                    "offset": 12
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "memberof": "Vector",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "function"
            },
            {
              "name": "Vector.dist",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "Vector.Vector.dist"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Static function. Calculates the dot product of two vectors.\nIs meant to be called \"static\" i.e. Vector.dot(v1, v2);",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 2,
                        "column": 56,
                        "offset": 115
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 56,
                    "offset": 115
                  },
                  "indent": [
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 2,
                "column": 56,
                "offset": 115
              }
            }
          },
          "tags": [
            {
              "title": "method",
              "description": null,
              "lineNumber": 3,
              "name": "Vector.dot"
            },
            {
              "title": "cat",
              "description": "Data",
              "lineNumber": 4
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 5
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 6
            },
            {
              "title": "param",
              "description": "The first vector",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Vector"
              },
              "name": "v1"
            },
            {
              "title": "param",
              "description": "The second vector",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "Vector"
              },
              "name": "v2"
            },
            {
              "title": "return",
              "description": "The dot product",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 5214,
              "column": 2
            },
            "end": {
              "line": 5224,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 5225,
                "column": 2
              },
              "end": {
                "line": 5227,
                "column": 4
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "kind": "function",
          "name": "Vector.dot",
          "scope": "static",
          "params": [
            {
              "name": "v1",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The first vector",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 17,
                            "offset": 16
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 17,
                        "offset": 16
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 17,
                    "offset": 16
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "Vector"
              }
            },
            {
              "name": "v2",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The second vector",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 18,
                            "offset": 17
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 18,
                        "offset": 17
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 18,
                    "offset": 17
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "Vector"
              }
            }
          ],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The dot product",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 16,
                            "offset": 15
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 16,
                        "offset": 15
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 16,
                    "offset": 15
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "memberof": "Vector",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "function"
            },
            {
              "name": "Vector.dot",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "Vector.Vector.dot"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Static function. Calculates the cross product of two vectors.\nIs meant to be called \"static\" i.e. Vector.cross(v1, v2);",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 2,
                        "column": 58,
                        "offset": 119
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 58,
                    "offset": 119
                  },
                  "indent": [
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 2,
                "column": 58,
                "offset": 119
              }
            }
          },
          "tags": [
            {
              "title": "method",
              "description": null,
              "lineNumber": 3,
              "name": "Vector.cross"
            },
            {
              "title": "cat",
              "description": "Data",
              "lineNumber": 4
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 5
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 6
            },
            {
              "title": "param",
              "description": "The first vector",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Vector"
              },
              "name": "v1"
            },
            {
              "title": "param",
              "description": "The second vector",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "Vector"
              },
              "name": "v2"
            },
            {
              "title": "return",
              "description": "The cross product",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 5229,
              "column": 2
            },
            "end": {
              "line": 5239,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 5240,
                "column": 2
              },
              "end": {
                "line": 5242,
                "column": 4
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "kind": "function",
          "name": "Vector.cross",
          "scope": "static",
          "params": [
            {
              "name": "v1",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The first vector",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 17,
                            "offset": 16
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 17,
                        "offset": 16
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 17,
                    "offset": 16
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "Vector"
              }
            },
            {
              "name": "v2",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The second vector",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 18,
                            "offset": 17
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 18,
                        "offset": 17
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 18,
                    "offset": 17
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "Vector"
              }
            }
          ],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The cross product",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 18,
                            "offset": 17
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 18,
                        "offset": 17
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 18,
                    "offset": 17
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "memberof": "Vector",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "function"
            },
            {
              "name": "Vector.cross",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "Vector.Vector.cross"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Static function. Calculates the angle between two vectors.\nIs meant to be called \"static\" i.e. Vector.angleBetween(v1, v2);",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 2,
                        "column": 65,
                        "offset": 123
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 65,
                    "offset": 123
                  },
                  "indent": [
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 2,
                "column": 65,
                "offset": 123
              }
            }
          },
          "tags": [
            {
              "title": "method",
              "description": null,
              "lineNumber": 3,
              "name": "Vector.angleBetween"
            },
            {
              "title": "cat",
              "description": "Data",
              "lineNumber": 4
            },
            {
              "title": "subcat",
              "description": "Vector",
              "lineNumber": 5
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 6
            },
            {
              "title": "param",
              "description": "The first vector",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Vector"
              },
              "name": "v1"
            },
            {
              "title": "param",
              "description": "The second vector",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "Vector"
              },
              "name": "v2"
            },
            {
              "title": "return",
              "description": "The angle",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 5244,
              "column": 2
            },
            "end": {
              "line": 5254,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 5255,
                "column": 2
              },
              "end": {
                "line": 5257,
                "column": 4
              }
            },
            "file": "/Users/icke/Documents/basiljs/develop/basil.js"
          },
          "kind": "function",
          "name": "Vector.angleBetween",
          "scope": "static",
          "params": [
            {
              "name": "v1",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The first vector",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 17,
                            "offset": 16
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 17,
                        "offset": 16
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 17,
                    "offset": 16
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "Vector"
              }
            },
            {
              "name": "v2",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The second vector",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 18,
                            "offset": 17
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 18,
                        "offset": 17
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 18,
                    "offset": 17
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "Vector"
              }
            }
          ],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The angle",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 10,
                            "offset": 9
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 10,
                        "offset": 9
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 10,
                    "offset": 9
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "memberof": "Vector",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Vector",
              "kind": "function"
            },
            {
              "name": "Vector.angleBetween",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "Vector.Vector.angleBetween"
        }
      ],
      "events": []
    },
    "path": [
      {
        "name": "Vector",
        "kind": "function"
      }
    ],
    "namespace": "Vector"
  }
]